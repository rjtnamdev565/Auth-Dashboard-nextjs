"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mongodb-js";
exports.ids = ["vendor-chunks/@mongodb-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js":
/*!********************************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/code-points-data.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nexports[\"default\"] = (0, zlib_1.gunzipSync)(Buffer.from(\"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\", \"base64\")); //# sourceMappingURL=code-points-data.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9jb2RlLXBvaW50cy1kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCSCxrQkFBZSxHQUFHLENBQUMsR0FBR0UsT0FBT0csVUFBVSxFQUFFQyxPQUFPQyxJQUFJLENBQUMsNG5GQUE0bkYsWUFDanJGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9AbW9uZ29kYi1qcy9zYXNscHJlcC9kaXN0L2NvZGUtcG9pbnRzLWRhdGEuanM/MmNmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHpsaWJfMSA9IHJlcXVpcmUoXCJ6bGliXCIpO1xuZXhwb3J0cy5kZWZhdWx0ID0gKDAsIHpsaWJfMS5ndW56aXBTeW5jKShCdWZmZXIuZnJvbSgnSDRzSUFBQUFBQUFDQSszZFRZZ2NXUjBBOEZmVG5la1E0N2FDa0J4aVpwWVY4Umh3WVFNN2JBL2tzb0xnU1JEMElPU2llUEFrTHJvd3ZXU0Y0Q2tIRVc4NTZNbFRRSEE5UktaMVpKT0RzRWNWY1RPeWh4VUViWGRYdHBQcDFQTlZWMzlVejRjekV5YVRWT2IzRzZhN1h0V3JyL2Rldlg0OS8rcWVrRzJHbzdBYTJqSEd5b3pHK0RtcnppMm1QL3hiL3pNaExJK1dsUm0yYnl1Ym0yaDBpdlZpN0JZenVzVmp1Tmt0MWw5dUZXc3V0V0w4T1A0cnpWOUtlWGRzS3gxSEZoYlNjNnZJRzBmS0JaMTRVTmZMRlM2RlJyR1J0WGg5OFp2cGhML3g0dUxWL0lPemFhdC92bGlrdi9UaXhhdnhSOFBRaXRmUHBLTmJmZlhTd2d0cjhmVjA3R1grTDE5Njd1cndnNVcwL3QwTFYzN3kvb1dGbFF0WDhwaW5nN3JlWEUzTFQ2ODByOXlQS3luLzNWbjY0U3dkVnM2bS9LTjB5SHJwOUQrUnZYc3FwZTZNU2lhNW1INkxTb2cvL1hxLysrTzc0WVZUamZERldLMlZJdU5TZW1pUHBwcGhjVllleXpjdWRLcUZNaXE2Y3MzdlZrcnpsY25FMG14ZVoxSmYyWlhzU3ZrOFRtUlpXWWRwYWx5ZHhkNWJjOGVVa3Qxd2xFYnRxVFZMcjhYUUxGcEtNYitkcHI5U2JTT3Q0b3pUZ1hVcTgrSWhtOGNUdDBzaHRDdlQ2ZHdhbzZzeFBmNXlkbVUyMDgvWjB5SDhJWnRsdlppM2U1ZkcxMnluM1BMU2RQdm5RN3ZzSzlyeHlLcHFldnpGWkdWZnUzWUhlenZibmJ2aXQ5WGRtNWZHYmYvTVo3UHV1TnJUakxKbmFvZkg3Z20waCtWS1UvZy90ZFVvY3JlcjNjTzR5T2N1eWNHb3lMcmJhNlRhK2xybG5rWjVudHZXQ3JmVjM5d0xUdU5nOVF2c3ZIYjM3UDhCQUdDUDBlTlRPSDVzemYxNTRKbW5OUUljbjdiK0Z6aXlBZlg0ZVdubitDNkxtNE0wbWozMXVia1ZpaURWNFdMdnM1NnFONTR4R1MzSFdFUjVzdTZuUXRadWJsOXRjWS80YXRicjllNWtXZXdldy9nMmE4ZmR5MllhYTk3K3BnUUFBQUFBQUlCSHR0K2RZbVd3YU4vYnlJNWcvOVBZVmZNdmI0WXZ2RHBPTEp4dkZndWVQOVZiUFhoOC95Q1pWaVp4TllBVGFlam1EUUFBQUFDZ2ZqSi8zUVVBNEpEM1B4MUluVCs1UHRRQ0FBQUFBQUFBQUtEMnhQOEJBQUFBQUFBQW9QN0Uvd0VBQUFBQUFBQ2cvc1QvQVFBQUFBQUFBS0QreFA4QkFBQUFBQUFBb1A3RS93RUFBQUFBQUFDZy9zVC9BUUFBQUFBQUFLRCt4UDhCQUFBQUFBQUFvUDdFL3dFQUFBQUFBQUNnL3NUL0FRQUFBQUFBQUtEK3hQOEJBQUFBQUFBQW9QNkc2K2toVkNnU0FBQUFBQUFBQUtpZFlRakxZVmZOY1BTeUFFK2RoUXNudkFBcTU5L1ZIQUFBQUFBQUFPQ0ptdjhFL3c0SGlMcWYzbld1V0NCMXBlMGVzZy9wVDNzS2QrbTRYamhwRnBaSDMvMVRIVGNVNmNmUkxuckhmM1pOUFpzK2JmOXJ3UHVJVVBZQVdiK2ovWnkwRWFBeEFBQUFBQUR3clBKMUlNQmVudTZlYTk5TSswVy8xN3dDQUFBQUFBQUFuR1JMbThvQTRKblFVQVFBQUFBQUFBQUFVSHZpL3dBQUFBQUFBQUJRZitML0FBQUFBQUFBQUZCLzR2OEFBQUFBQUFBQVVIL2kvd0FBQUFBQUFBQlFmK0wvQUFBQUFBQUFBRkIvNHY4QUFBQUFBQUFBVUgvaS93QUFBQUFBQUFCUWYrTC9BQUFBQUFBQUFGQi80djhBQUFBQUFBQUFVSC9pL3dBQUFBQUFBQUJRZitML0FBQUFBQUFBQUZCL2pkWDBFQ3NVQ1FBQUFBQUFBQURVVGlNQ0FBQUFBQUFBQUhVM1ZBUUFBQUFBQUFBQVVIOGhMTmYxdXdzV2JoVC91V0J6VUV4L2VpMU54YzAwMVZxcm5OMnd1UmpDSzNHNEh1Tmd0dUpvU1ZqMTdROVF5QlFCQUFBQUFBQUFITUtwdUo0LytPdGM1TDJYWmk4ZEpsUS9MQ1BYaGM0a2VKOVVJOXVGcmUzckRmWTl1b1haUFFCRkhMMzRIU1dXbThzeDVySDgzZDk2N0lmWk1SWkhIRy8yUWk4TUZuYnNjWG5obnpIZWk1Tk5EOFAyYlcyT1QzRzh2RmVlYkJIYno5ZEdFZjVqRHQrZks0L21UdmUxYm53bmRzTkw5MittRS83NXhocy95ejY1RWQvWmJQMjlTUDk2b3h2Q0R4cnhjamozMzNSMjYyL2Q2WDZ0RzY2bFl5L3ovK3J0TW44M25IdnY5bmZPdi9kdzQrcHZzcENsNHY3KzFucGEvbkh2dGJTdmpTSi9tZjc5L1Z1TEM3TjAzTGlXOG8vU01VOGxkTytqUE91bDFPVlEzdlZ3SytUWnFCTEN0My9SWHZ2ZVM3ZWFEMEw4WXlockplVi9jQzBXR1RkRDFoemxDbzJIOTh2eks5YSs5NjNWN3FSVlRlYU5hK1pHcFdwK042MmpTbU9ldEpEOGRuNjdmQjRuOG56Y2hHN240K29zMnRjZ3pMV1VRVmc3MHJ0YThsRTducVc3SVc3MTB2N2VEc1YxRjdlNjQzM25qWWZkOWo5R2wyS0l2ZXB0TWVQVmFtT1hRdWhYTzV0VWs2UHYra2lQWDQzVDcvM1lldkR5NE1OK0hMdzhDSFBYNk9xT093S2U3M3owK3BuZjNydlQ2cFg3NmovU1VVNy8zVWpxWDVyN1pXN1BkWlU4VnEyaWQrMjlQcGhkaDNuMVRxcC90MGFYYVdWT1Buc0ZHcmUrd2FSZHBLZi9USys3ZmlYM2JPV2x1VmVKZzc3QUFQTkR3cjM3ZndBQTJHUDArQlNPSHdjbjYvMjMxZ2h3ZlByNlgrRElCdFRqNTgyZDQ3czhMRDN4TWVZa3R0K1lIWEhlNlhRdUg5UDROdStIM2N0bUdtdmUvcVlFQUFBQUFBQ0FSN2JmbldKbHNHZ1NOTm9NNTR0UFoyM0VJNHZZelBZMS9menExdWQvR1AvMDFqang4UDJ0WXNHN0R6cnJCNC92SHlTVHo1WUIrbjhBQUFBQWdKckovWEVYQUlESEVmLzJ5WFVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdHZEFCQUFBQUFBQUFBRHFicWdJQUFBQUFBQUFBS0QyaHY4RFdLNzlVQmhvQmdBPScsICdiYXNlNjQnKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb2RlLXBvaW50cy1kYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInpsaWJfMSIsInJlcXVpcmUiLCJkZWZhdWx0IiwiZ3VuemlwU3luYyIsIkJ1ZmZlciIsImZyb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst memory_code_points_1 = __webpack_require__(/*! ./memory-code-points */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js\");\nconst mapping2space = memory_code_points_1.non_ASCII_space_characters;\nconst mapping2nothing = memory_code_points_1.commonly_mapped_to_nothing;\nconst getCodePoint = (character)=>character.codePointAt(0);\nconst first = (x)=>x[0];\nconst last = (x)=>x[x.length - 1];\nfunction toCodePoints(input) {\n    const codepoints = [];\n    const size = input.length;\n    for(let i = 0; i < size; i += 1){\n        const before = input.charCodeAt(i);\n        if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n            const next = input.charCodeAt(i + 1);\n            if (next >= 0xdc00 && next <= 0xdfff) {\n                codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n                i += 1;\n                continue;\n            }\n        }\n        codepoints.push(before);\n    }\n    return codepoints;\n}\nfunction saslprep(input, opts = {}) {\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"Expected string.\");\n    }\n    if (input.length === 0) {\n        return \"\";\n    }\n    const mapped_input = toCodePoints(input).map((character)=>mapping2space.get(character) ? 0x20 : character).filter((character)=>!mapping2nothing.get(character));\n    const normalized_input = String.fromCodePoint.apply(null, mapped_input).normalize(\"NFKC\");\n    const normalized_map = toCodePoints(normalized_input);\n    const hasProhibited = normalized_map.some((character)=>memory_code_points_1.prohibited_characters.get(character));\n    if (hasProhibited) {\n        throw new Error(\"Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3\");\n    }\n    if (opts.allowUnassigned !== true) {\n        const hasUnassigned = normalized_map.some((character)=>memory_code_points_1.unassigned_code_points.get(character));\n        if (hasUnassigned) {\n            throw new Error(\"Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5\");\n        }\n    }\n    const hasBidiRAL = normalized_map.some((character)=>memory_code_points_1.bidirectional_r_al.get(character));\n    const hasBidiL = normalized_map.some((character)=>memory_code_points_1.bidirectional_l.get(character));\n    if (hasBidiRAL && hasBidiL) {\n        throw new Error(\"String must not contain RandALCat and LCat at the same time,\" + \" see https://tools.ietf.org/html/rfc3454#section-6\");\n    }\n    const isFirstBidiRAL = memory_code_points_1.bidirectional_r_al.get(getCodePoint(first(normalized_input)));\n    const isLastBidiRAL = memory_code_points_1.bidirectional_r_al.get(getCodePoint(last(normalized_input)));\n    if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n        throw new Error(\"Bidirectional RandALCat character must be the first and the last\" + \" character of the string, see https://tools.ietf.org/html/rfc3454#section-6\");\n    }\n    return normalized_input;\n}\nsaslprep.saslprep = saslprep;\nsaslprep.default = saslprep;\nmodule.exports = saslprep; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE1BQU1BLHVCQUF1QkMsbUJBQU9BLENBQUMsa0dBQXNCO0FBQzNELE1BQU1DLGdCQUFnQkYscUJBQXFCRywwQkFBMEI7QUFDckUsTUFBTUMsa0JBQWtCSixxQkFBcUJLLDBCQUEwQjtBQUN2RSxNQUFNQyxlQUFlLENBQUNDLFlBQWNBLFVBQVVDLFdBQVcsQ0FBQztBQUMxRCxNQUFNQyxRQUFRLENBQUNDLElBQU1BLENBQUMsQ0FBQyxFQUFFO0FBQ3pCLE1BQU1DLE9BQU8sQ0FBQ0QsSUFBTUEsQ0FBQyxDQUFDQSxFQUFFRSxNQUFNLEdBQUcsRUFBRTtBQUNuQyxTQUFTQyxhQUFhQyxLQUFLO0lBQ3ZCLE1BQU1DLGFBQWEsRUFBRTtJQUNyQixNQUFNQyxPQUFPRixNQUFNRixNQUFNO0lBQ3pCLElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJRCxNQUFNQyxLQUFLLEVBQUc7UUFDOUIsTUFBTUMsU0FBU0osTUFBTUssVUFBVSxDQUFDRjtRQUNoQyxJQUFJQyxVQUFVLFVBQVVBLFVBQVUsVUFBVUYsT0FBT0MsSUFBSSxHQUFHO1lBQ3RELE1BQU1HLE9BQU9OLE1BQU1LLFVBQVUsQ0FBQ0YsSUFBSTtZQUNsQyxJQUFJRyxRQUFRLFVBQVVBLFFBQVEsUUFBUTtnQkFDbENMLFdBQVdNLElBQUksQ0FBQyxDQUFDSCxTQUFTLE1BQUssSUFBSyxRQUFRRSxPQUFPLFNBQVM7Z0JBQzVESCxLQUFLO2dCQUNMO1lBQ0o7UUFDSjtRQUNBRixXQUFXTSxJQUFJLENBQUNIO0lBQ3BCO0lBQ0EsT0FBT0g7QUFDWDtBQUNBLFNBQVNPLFNBQVNSLEtBQUssRUFBRVMsT0FBTyxDQUFDLENBQUM7SUFDOUIsSUFBSSxPQUFPVCxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJVSxVQUFVO0lBQ3hCO0lBQ0EsSUFBSVYsTUFBTUYsTUFBTSxLQUFLLEdBQUc7UUFDcEIsT0FBTztJQUNYO0lBQ0EsTUFBTWEsZUFBZVosYUFBYUMsT0FDN0JZLEdBQUcsQ0FBQyxDQUFDbkIsWUFBZUwsY0FBY3lCLEdBQUcsQ0FBQ3BCLGFBQWEsT0FBT0EsV0FDMURxQixNQUFNLENBQUMsQ0FBQ3JCLFlBQWMsQ0FBQ0gsZ0JBQWdCdUIsR0FBRyxDQUFDcEI7SUFDaEQsTUFBTXNCLG1CQUFtQkMsT0FBT0MsYUFBYSxDQUN4Q0MsS0FBSyxDQUFDLE1BQU1QLGNBQ1pRLFNBQVMsQ0FBQztJQUNmLE1BQU1DLGlCQUFpQnJCLGFBQWFnQjtJQUNwQyxNQUFNTSxnQkFBZ0JELGVBQWVFLElBQUksQ0FBQyxDQUFDN0IsWUFBY1AscUJBQXFCcUMscUJBQXFCLENBQUNWLEdBQUcsQ0FBQ3BCO0lBQ3hHLElBQUk0QixlQUFlO1FBQ2YsTUFBTSxJQUFJRyxNQUFNO0lBQ3BCO0lBQ0EsSUFBSWYsS0FBS2dCLGVBQWUsS0FBSyxNQUFNO1FBQy9CLE1BQU1DLGdCQUFnQk4sZUFBZUUsSUFBSSxDQUFDLENBQUM3QixZQUFjUCxxQkFBcUJ5QyxzQkFBc0IsQ0FBQ2QsR0FBRyxDQUFDcEI7UUFDekcsSUFBSWlDLGVBQWU7WUFDZixNQUFNLElBQUlGLE1BQU07UUFDcEI7SUFDSjtJQUNBLE1BQU1JLGFBQWFSLGVBQWVFLElBQUksQ0FBQyxDQUFDN0IsWUFBY1AscUJBQXFCMkMsa0JBQWtCLENBQUNoQixHQUFHLENBQUNwQjtJQUNsRyxNQUFNcUMsV0FBV1YsZUFBZUUsSUFBSSxDQUFDLENBQUM3QixZQUFjUCxxQkFBcUI2QyxlQUFlLENBQUNsQixHQUFHLENBQUNwQjtJQUM3RixJQUFJbUMsY0FBY0UsVUFBVTtRQUN4QixNQUFNLElBQUlOLE1BQU0saUVBQ1o7SUFDUjtJQUNBLE1BQU1RLGlCQUFpQjlDLHFCQUFxQjJDLGtCQUFrQixDQUFDaEIsR0FBRyxDQUFDckIsYUFBYUcsTUFBTW9CO0lBQ3RGLE1BQU1rQixnQkFBZ0IvQyxxQkFBcUIyQyxrQkFBa0IsQ0FBQ2hCLEdBQUcsQ0FBQ3JCLGFBQWFLLEtBQUtrQjtJQUNwRixJQUFJYSxjQUFjLENBQUVJLENBQUFBLGtCQUFrQkMsYUFBWSxHQUFJO1FBQ2xELE1BQU0sSUFBSVQsTUFBTSxxRUFDWjtJQUNSO0lBQ0EsT0FBT1Q7QUFDWDtBQUNBUCxTQUFTQSxRQUFRLEdBQUdBO0FBQ3BCQSxTQUFTMEIsT0FBTyxHQUFHMUI7QUFDbkIyQixPQUFPQyxPQUFPLEdBQUc1QixVQUNqQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9pbmRleC5qcz9jYzAxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgbWVtb3J5X2NvZGVfcG9pbnRzXzEgPSByZXF1aXJlKFwiLi9tZW1vcnktY29kZS1wb2ludHNcIik7XG5jb25zdCBtYXBwaW5nMnNwYWNlID0gbWVtb3J5X2NvZGVfcG9pbnRzXzEubm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnM7XG5jb25zdCBtYXBwaW5nMm5vdGhpbmcgPSBtZW1vcnlfY29kZV9wb2ludHNfMS5jb21tb25seV9tYXBwZWRfdG9fbm90aGluZztcbmNvbnN0IGdldENvZGVQb2ludCA9IChjaGFyYWN0ZXIpID0+IGNoYXJhY3Rlci5jb2RlUG9pbnRBdCgwKTtcbmNvbnN0IGZpcnN0ID0gKHgpID0+IHhbMF07XG5jb25zdCBsYXN0ID0gKHgpID0+IHhbeC5sZW5ndGggLSAxXTtcbmZ1bmN0aW9uIHRvQ29kZVBvaW50cyhpbnB1dCkge1xuICAgIGNvbnN0IGNvZGVwb2ludHMgPSBbXTtcbiAgICBjb25zdCBzaXplID0gaW5wdXQubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGJlZm9yZSA9IGlucHV0LmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChiZWZvcmUgPj0gMHhkODAwICYmIGJlZm9yZSA8PSAweGRiZmYgJiYgc2l6ZSA+IGkgKyAxKSB7XG4gICAgICAgICAgICBjb25zdCBuZXh0ID0gaW5wdXQuY2hhckNvZGVBdChpICsgMSk7XG4gICAgICAgICAgICBpZiAobmV4dCA+PSAweGRjMDAgJiYgbmV4dCA8PSAweGRmZmYpIHtcbiAgICAgICAgICAgICAgICBjb2RlcG9pbnRzLnB1c2goKGJlZm9yZSAtIDB4ZDgwMCkgKiAweDQwMCArIG5leHQgLSAweGRjMDAgKyAweDEwMDAwKTtcbiAgICAgICAgICAgICAgICBpICs9IDE7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29kZXBvaW50cy5wdXNoKGJlZm9yZSk7XG4gICAgfVxuICAgIHJldHVybiBjb2RlcG9pbnRzO1xufVxuZnVuY3Rpb24gc2FzbHByZXAoaW5wdXQsIG9wdHMgPSB7fSkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHN0cmluZy4nKTtcbiAgICB9XG4gICAgaWYgKGlucHV0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGNvbnN0IG1hcHBlZF9pbnB1dCA9IHRvQ29kZVBvaW50cyhpbnB1dClcbiAgICAgICAgLm1hcCgoY2hhcmFjdGVyKSA9PiAobWFwcGluZzJzcGFjZS5nZXQoY2hhcmFjdGVyKSA/IDB4MjAgOiBjaGFyYWN0ZXIpKVxuICAgICAgICAuZmlsdGVyKChjaGFyYWN0ZXIpID0+ICFtYXBwaW5nMm5vdGhpbmcuZ2V0KGNoYXJhY3RlcikpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRfaW5wdXQgPSBTdHJpbmcuZnJvbUNvZGVQb2ludFxuICAgICAgICAuYXBwbHkobnVsbCwgbWFwcGVkX2lucHV0KVxuICAgICAgICAubm9ybWFsaXplKCdORktDJyk7XG4gICAgY29uc3Qgbm9ybWFsaXplZF9tYXAgPSB0b0NvZGVQb2ludHMobm9ybWFsaXplZF9pbnB1dCk7XG4gICAgY29uc3QgaGFzUHJvaGliaXRlZCA9IG5vcm1hbGl6ZWRfbWFwLnNvbWUoKGNoYXJhY3RlcikgPT4gbWVtb3J5X2NvZGVfcG9pbnRzXzEucHJvaGliaXRlZF9jaGFyYWN0ZXJzLmdldChjaGFyYWN0ZXIpKTtcbiAgICBpZiAoaGFzUHJvaGliaXRlZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Byb2hpYml0ZWQgY2hhcmFjdGVyLCBzZWUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQwMTMjc2VjdGlvbi0yLjMnKTtcbiAgICB9XG4gICAgaWYgKG9wdHMuYWxsb3dVbmFzc2lnbmVkICE9PSB0cnVlKSB7XG4gICAgICAgIGNvbnN0IGhhc1VuYXNzaWduZWQgPSBub3JtYWxpemVkX21hcC5zb21lKChjaGFyYWN0ZXIpID0+IG1lbW9yeV9jb2RlX3BvaW50c18xLnVuYXNzaWduZWRfY29kZV9wb2ludHMuZ2V0KGNoYXJhY3RlcikpO1xuICAgICAgICBpZiAoaGFzVW5hc3NpZ25lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFzc2lnbmVkIGNvZGUgcG9pbnQsIHNlZSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDAxMyNzZWN0aW9uLTIuNScpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGhhc0JpZGlSQUwgPSBub3JtYWxpemVkX21hcC5zb21lKChjaGFyYWN0ZXIpID0+IG1lbW9yeV9jb2RlX3BvaW50c18xLmJpZGlyZWN0aW9uYWxfcl9hbC5nZXQoY2hhcmFjdGVyKSk7XG4gICAgY29uc3QgaGFzQmlkaUwgPSBub3JtYWxpemVkX21hcC5zb21lKChjaGFyYWN0ZXIpID0+IG1lbW9yeV9jb2RlX3BvaW50c18xLmJpZGlyZWN0aW9uYWxfbC5nZXQoY2hhcmFjdGVyKSk7XG4gICAgaWYgKGhhc0JpZGlSQUwgJiYgaGFzQmlkaUwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdHJpbmcgbXVzdCBub3QgY29udGFpbiBSYW5kQUxDYXQgYW5kIExDYXQgYXQgdGhlIHNhbWUgdGltZSwnICtcbiAgICAgICAgICAgICcgc2VlIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzNDU0I3NlY3Rpb24tNicpO1xuICAgIH1cbiAgICBjb25zdCBpc0ZpcnN0QmlkaVJBTCA9IG1lbW9yeV9jb2RlX3BvaW50c18xLmJpZGlyZWN0aW9uYWxfcl9hbC5nZXQoZ2V0Q29kZVBvaW50KGZpcnN0KG5vcm1hbGl6ZWRfaW5wdXQpKSk7XG4gICAgY29uc3QgaXNMYXN0QmlkaVJBTCA9IG1lbW9yeV9jb2RlX3BvaW50c18xLmJpZGlyZWN0aW9uYWxfcl9hbC5nZXQoZ2V0Q29kZVBvaW50KGxhc3Qobm9ybWFsaXplZF9pbnB1dCkpKTtcbiAgICBpZiAoaGFzQmlkaVJBTCAmJiAhKGlzRmlyc3RCaWRpUkFMICYmIGlzTGFzdEJpZGlSQUwpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQmlkaXJlY3Rpb25hbCBSYW5kQUxDYXQgY2hhcmFjdGVyIG11c3QgYmUgdGhlIGZpcnN0IGFuZCB0aGUgbGFzdCcgK1xuICAgICAgICAgICAgJyBjaGFyYWN0ZXIgb2YgdGhlIHN0cmluZywgc2VlIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzNDU0I3NlY3Rpb24tNicpO1xuICAgIH1cbiAgICByZXR1cm4gbm9ybWFsaXplZF9pbnB1dDtcbn1cbnNhc2xwcmVwLnNhc2xwcmVwID0gc2FzbHByZXA7XG5zYXNscHJlcC5kZWZhdWx0ID0gc2FzbHByZXA7XG5tb2R1bGUuZXhwb3J0cyA9IHNhc2xwcmVwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIm1lbW9yeV9jb2RlX3BvaW50c18xIiwicmVxdWlyZSIsIm1hcHBpbmcyc3BhY2UiLCJub25fQVNDSUlfc3BhY2VfY2hhcmFjdGVycyIsIm1hcHBpbmcybm90aGluZyIsImNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nIiwiZ2V0Q29kZVBvaW50IiwiY2hhcmFjdGVyIiwiY29kZVBvaW50QXQiLCJmaXJzdCIsIngiLCJsYXN0IiwibGVuZ3RoIiwidG9Db2RlUG9pbnRzIiwiaW5wdXQiLCJjb2RlcG9pbnRzIiwic2l6ZSIsImkiLCJiZWZvcmUiLCJjaGFyQ29kZUF0IiwibmV4dCIsInB1c2giLCJzYXNscHJlcCIsIm9wdHMiLCJUeXBlRXJyb3IiLCJtYXBwZWRfaW5wdXQiLCJtYXAiLCJnZXQiLCJmaWx0ZXIiLCJub3JtYWxpemVkX2lucHV0IiwiU3RyaW5nIiwiZnJvbUNvZGVQb2ludCIsImFwcGx5Iiwibm9ybWFsaXplIiwibm9ybWFsaXplZF9tYXAiLCJoYXNQcm9oaWJpdGVkIiwic29tZSIsInByb2hpYml0ZWRfY2hhcmFjdGVycyIsIkVycm9yIiwiYWxsb3dVbmFzc2lnbmVkIiwiaGFzVW5hc3NpZ25lZCIsInVuYXNzaWduZWRfY29kZV9wb2ludHMiLCJoYXNCaWRpUkFMIiwiYmlkaXJlY3Rpb25hbF9yX2FsIiwiaGFzQmlkaUwiLCJiaWRpcmVjdGlvbmFsX2wiLCJpc0ZpcnN0QmlkaVJBTCIsImlzTGFzdEJpZGlSQUwiLCJkZWZhdWx0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.bidirectional_l = exports.bidirectional_r_al = exports.prohibited_characters = exports.non_ASCII_space_characters = exports.commonly_mapped_to_nothing = exports.unassigned_code_points = void 0;\nconst sparse_bitfield_1 = __importDefault(__webpack_require__(/*! sparse-bitfield */ \"(ssr)/./node_modules/sparse-bitfield/index.js\"));\nconst code_points_data_1 = __importDefault(__webpack_require__(/*! ./code-points-data */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js\"));\nlet offset = 0;\nfunction read() {\n    const size = code_points_data_1.default.readUInt32BE(offset);\n    offset += 4;\n    const codepoints = code_points_data_1.default.slice(offset, offset + size);\n    offset += size;\n    return (0, sparse_bitfield_1.default)({\n        buffer: codepoints\n    });\n}\nexports.unassigned_code_points = read();\nexports.commonly_mapped_to_nothing = read();\nexports.non_ASCII_space_characters = read();\nexports.prohibited_characters = read();\nexports.bidirectional_r_al = read();\nexports.bidirectional_l = read(); //# sourceMappingURL=memory-code-points.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9tZW1vcnktY29kZS1wb2ludHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsSUFBSyxJQUFJLElBQUksQ0FBQ0EsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EsMEJBQTBCLEdBQUdBLDZCQUE2QixHQUFHQSxrQ0FBa0MsR0FBR0Esa0NBQWtDLEdBQUdBLDhCQUE4QixHQUFHLEtBQUs7QUFDdk0sTUFBTVEsb0JBQW9CYixnQkFBZ0JjLG1CQUFPQSxDQUFDLHNFQUFpQjtBQUNuRSxNQUFNQyxxQkFBcUJmLGdCQUFnQmMsbUJBQU9BLENBQUMsOEZBQW9CO0FBQ3ZFLElBQUlFLFNBQVM7QUFDYixTQUFTQztJQUNMLE1BQU1DLE9BQU9ILG1CQUFtQkksT0FBTyxDQUFDQyxZQUFZLENBQUNKO0lBQ3JEQSxVQUFVO0lBQ1YsTUFBTUssYUFBYU4sbUJBQW1CSSxPQUFPLENBQUNHLEtBQUssQ0FBQ04sUUFBUUEsU0FBU0U7SUFDckVGLFVBQVVFO0lBQ1YsT0FBTyxDQUFDLEdBQUdMLGtCQUFrQk0sT0FBTyxFQUFFO1FBQUVJLFFBQVFGO0lBQVc7QUFDL0Q7QUFDQWhCLDhCQUE4QixHQUFHWTtBQUNqQ1osa0NBQWtDLEdBQUdZO0FBQ3JDWixrQ0FBa0MsR0FBR1k7QUFDckNaLDZCQUE2QixHQUFHWTtBQUNoQ1osMEJBQTBCLEdBQUdZO0FBQzdCWix1QkFBdUIsR0FBR1ksUUFDMUIsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL0Btb25nb2RiLWpzL3Nhc2xwcmVwL2Rpc3QvbWVtb3J5LWNvZGUtcG9pbnRzLmpzPzhjY2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJpZGlyZWN0aW9uYWxfbCA9IGV4cG9ydHMuYmlkaXJlY3Rpb25hbF9yX2FsID0gZXhwb3J0cy5wcm9oaWJpdGVkX2NoYXJhY3RlcnMgPSBleHBvcnRzLm5vbl9BU0NJSV9zcGFjZV9jaGFyYWN0ZXJzID0gZXhwb3J0cy5jb21tb25seV9tYXBwZWRfdG9fbm90aGluZyA9IGV4cG9ydHMudW5hc3NpZ25lZF9jb2RlX3BvaW50cyA9IHZvaWQgMDtcbmNvbnN0IHNwYXJzZV9iaXRmaWVsZF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzcGFyc2UtYml0ZmllbGRcIikpO1xuY29uc3QgY29kZV9wb2ludHNfZGF0YV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2NvZGUtcG9pbnRzLWRhdGFcIikpO1xubGV0IG9mZnNldCA9IDA7XG5mdW5jdGlvbiByZWFkKCkge1xuICAgIGNvbnN0IHNpemUgPSBjb2RlX3BvaW50c19kYXRhXzEuZGVmYXVsdC5yZWFkVUludDMyQkUob2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gNDtcbiAgICBjb25zdCBjb2RlcG9pbnRzID0gY29kZV9wb2ludHNfZGF0YV8xLmRlZmF1bHQuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBzaXplKTtcbiAgICBvZmZzZXQgKz0gc2l6ZTtcbiAgICByZXR1cm4gKDAsIHNwYXJzZV9iaXRmaWVsZF8xLmRlZmF1bHQpKHsgYnVmZmVyOiBjb2RlcG9pbnRzIH0pO1xufVxuZXhwb3J0cy51bmFzc2lnbmVkX2NvZGVfcG9pbnRzID0gcmVhZCgpO1xuZXhwb3J0cy5jb21tb25seV9tYXBwZWRfdG9fbm90aGluZyA9IHJlYWQoKTtcbmV4cG9ydHMubm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnMgPSByZWFkKCk7XG5leHBvcnRzLnByb2hpYml0ZWRfY2hhcmFjdGVycyA9IHJlYWQoKTtcbmV4cG9ydHMuYmlkaXJlY3Rpb25hbF9yX2FsID0gcmVhZCgpO1xuZXhwb3J0cy5iaWRpcmVjdGlvbmFsX2wgPSByZWFkKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vcnktY29kZS1wb2ludHMuanMubWFwIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImJpZGlyZWN0aW9uYWxfbCIsImJpZGlyZWN0aW9uYWxfcl9hbCIsInByb2hpYml0ZWRfY2hhcmFjdGVycyIsIm5vbl9BU0NJSV9zcGFjZV9jaGFyYWN0ZXJzIiwiY29tbW9ubHlfbWFwcGVkX3RvX25vdGhpbmciLCJ1bmFzc2lnbmVkX2NvZGVfcG9pbnRzIiwic3BhcnNlX2JpdGZpZWxkXzEiLCJyZXF1aXJlIiwiY29kZV9wb2ludHNfZGF0YV8xIiwib2Zmc2V0IiwicmVhZCIsInNpemUiLCJkZWZhdWx0IiwicmVhZFVJbnQzMkJFIiwiY29kZXBvaW50cyIsInNsaWNlIiwiYnVmZmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js\n");

/***/ })

};
;