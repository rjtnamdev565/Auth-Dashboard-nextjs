/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-auth/client/_utils.js":
/*!*************************************************!*\
  !*** ./node_modules/next-auth/client/_utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BroadcastChannel = BroadcastChannel;\nexports.apiBaseUrl = apiBaseUrl;\nexports.fetchData = fetchData;\nexports.now = now;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction fetchData(_x, _x2, _x3) {\n    return _fetchData.apply(this, arguments);\n}\nfunction _fetchData() {\n    _fetchData = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(path, __NEXTAUTH, logger) {\n        var _ref, ctx, _ref$req, req, url, _req$headers, options, res, data, _args = arguments;\n        return _regenerator.default.wrap(function _callee$(_context) {\n            while(1){\n                switch(_context.prev = _context.next){\n                    case 0:\n                        _ref = _args.length > 3 && _args[3] !== undefined ? _args[3] : {}, ctx = _ref.ctx, _ref$req = _ref.req, req = _ref$req === void 0 ? ctx === null || ctx === void 0 ? void 0 : ctx.req : _ref$req;\n                        url = \"\".concat(apiBaseUrl(__NEXTAUTH), \"/\").concat(path);\n                        _context.prev = 2;\n                        options = {\n                            headers: _objectSpread({\n                                \"Content-Type\": \"application/json\"\n                            }, req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie ? {\n                                cookie: req.headers.cookie\n                            } : {})\n                        };\n                        if (req !== null && req !== void 0 && req.body) {\n                            options.body = JSON.stringify(req.body);\n                            options.method = \"POST\";\n                        }\n                        _context.next = 7;\n                        return fetch(url, options);\n                    case 7:\n                        res = _context.sent;\n                        _context.next = 10;\n                        return res.json();\n                    case 10:\n                        data = _context.sent;\n                        if (res.ok) {\n                            _context.next = 13;\n                            break;\n                        }\n                        throw data;\n                    case 13:\n                        return _context.abrupt(\"return\", Object.keys(data).length > 0 ? data : null);\n                    case 16:\n                        _context.prev = 16;\n                        _context.t0 = _context[\"catch\"](2);\n                        logger.error(\"CLIENT_FETCH_ERROR\", {\n                            error: _context.t0,\n                            url: url\n                        });\n                        return _context.abrupt(\"return\", null);\n                    case 20:\n                    case \"end\":\n                        return _context.stop();\n                }\n            }\n        }, _callee, null, [\n            [\n                2,\n                16\n            ]\n        ]);\n    }));\n    return _fetchData.apply(this, arguments);\n}\nfunction apiBaseUrl(__NEXTAUTH) {\n    if (true) {\n        return \"\".concat(__NEXTAUTH.baseUrlServer).concat(__NEXTAUTH.basePathServer);\n    }\n    return __NEXTAUTH.basePath;\n}\nfunction now() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction BroadcastChannel() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"nextauth.message\";\n    return {\n        receive: function receive(onReceive) {\n            var handler = function handler(event) {\n                var _event$newValue;\n                if (event.key !== name) return;\n                var message = JSON.parse((_event$newValue = event.newValue) !== null && _event$newValue !== void 0 ? _event$newValue : \"{}\");\n                if ((message === null || message === void 0 ? void 0 : message.event) !== \"session\" || !(message !== null && message !== void 0 && message.data)) return;\n                onReceive(message);\n            };\n            window.addEventListener(\"storage\", handler);\n            return function() {\n                return window.removeEventListener(\"storage\", handler);\n            };\n        },\n        post: function post(message) {\n            if (true) return;\n            try {\n                localStorage.setItem(name, JSON.stringify(_objectSpread(_objectSpread({}, message), {}, {\n                    timestamp: now()\n                })));\n            } catch (_unused) {}\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/client/_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(ssr)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(ssr)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf2.default)(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nvar UnknownError = function(_Error) {\n    (0, _inherits2.default)(UnknownError, _Error);\n    var _super = _createSuper(UnknownError);\n    function UnknownError(error) {\n        var _message;\n        var _this;\n        (0, _classCallCheck2.default)(this, UnknownError);\n        _this = _super.call(this, (_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error);\n        _this.name = \"UnknownError\";\n        _this.code = error.code;\n        if (error instanceof Error) {\n            _this.stack = error.stack;\n        }\n        return _this;\n    }\n    (0, _createClass2.default)(UnknownError, [\n        {\n            key: \"toJSON\",\n            value: function toJSON() {\n                return {\n                    name: this.name,\n                    message: this.message,\n                    stack: this.stack\n                };\n            }\n        }\n    ]);\n    return UnknownError;\n}((0, _wrapNativeSuper2.default)(Error));\nexports.UnknownError = UnknownError;\nvar OAuthCallbackError = function(_UnknownError) {\n    (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n    var _super2 = _createSuper(OAuthCallbackError);\n    function OAuthCallbackError() {\n        var _this2;\n        (0, _classCallCheck2.default)(this, OAuthCallbackError);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this2 = _super2.call.apply(_super2, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"name\", \"OAuthCallbackError\");\n        return _this2;\n    }\n    return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nexports.OAuthCallbackError = OAuthCallbackError;\nvar AccountNotLinkedError = function(_UnknownError2) {\n    (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n    var _super3 = _createSuper(AccountNotLinkedError);\n    function AccountNotLinkedError() {\n        var _this3;\n        (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        _this3 = _super3.call.apply(_super3, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this3), \"name\", \"AccountNotLinkedError\");\n        return _this3;\n    }\n    return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nexports.AccountNotLinkedError = AccountNotLinkedError;\nvar MissingAPIRoute = function(_UnknownError3) {\n    (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n    var _super4 = _createSuper(MissingAPIRoute);\n    function MissingAPIRoute() {\n        var _this4;\n        (0, _classCallCheck2.default)(this, MissingAPIRoute);\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n            args[_key3] = arguments[_key3];\n        }\n        _this4 = _super4.call.apply(_super4, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"name\", \"MissingAPIRouteError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n        return _this4;\n    }\n    return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nexports.MissingAPIRoute = MissingAPIRoute;\nvar MissingSecret = function(_UnknownError4) {\n    (0, _inherits2.default)(MissingSecret, _UnknownError4);\n    var _super5 = _createSuper(MissingSecret);\n    function MissingSecret() {\n        var _this5;\n        (0, _classCallCheck2.default)(this, MissingSecret);\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        _this5 = _super5.call.apply(_super5, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"name\", \"MissingSecretError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"code\", \"NO_SECRET\");\n        return _this5;\n    }\n    return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nexports.MissingSecret = MissingSecret;\nvar MissingAuthorize = function(_UnknownError5) {\n    (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n    var _super6 = _createSuper(MissingAuthorize);\n    function MissingAuthorize() {\n        var _this6;\n        (0, _classCallCheck2.default)(this, MissingAuthorize);\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n            args[_key5] = arguments[_key5];\n        }\n        _this6 = _super6.call.apply(_super6, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"name\", \"MissingAuthorizeError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n        return _this6;\n    }\n    return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nexports.MissingAuthorize = MissingAuthorize;\nvar MissingAdapter = function(_UnknownError6) {\n    (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n    var _super7 = _createSuper(MissingAdapter);\n    function MissingAdapter() {\n        var _this7;\n        (0, _classCallCheck2.default)(this, MissingAdapter);\n        for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++){\n            args[_key6] = arguments[_key6];\n        }\n        _this7 = _super7.call.apply(_super7, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"name\", \"MissingAdapterError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n        return _this7;\n    }\n    return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nexports.MissingAdapter = MissingAdapter;\nvar MissingAdapterMethods = function(_UnknownError7) {\n    (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n    var _super8 = _createSuper(MissingAdapterMethods);\n    function MissingAdapterMethods() {\n        var _this8;\n        (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n        for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n            args[_key7] = arguments[_key7];\n        }\n        _this8 = _super8.call.apply(_super8, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"name\", \"MissingAdapterMethodsError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n        return _this8;\n    }\n    return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nexports.MissingAdapterMethods = MissingAdapterMethods;\nvar UnsupportedStrategy = function(_UnknownError8) {\n    (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n    var _super9 = _createSuper(UnsupportedStrategy);\n    function UnsupportedStrategy() {\n        var _this9;\n        (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n        for(var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++){\n            args[_key8] = arguments[_key8];\n        }\n        _this9 = _super9.call.apply(_super9, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"name\", \"UnsupportedStrategyError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n        return _this9;\n    }\n    return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nexports.UnsupportedStrategy = UnsupportedStrategy;\nvar InvalidCallbackUrl = function(_UnknownError9) {\n    (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n    var _super10 = _createSuper(InvalidCallbackUrl);\n    function InvalidCallbackUrl() {\n        var _this10;\n        (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n        for(var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++){\n            args[_key9] = arguments[_key9];\n        }\n        _this10 = _super10.call.apply(_super10, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"name\", \"InvalidCallbackUrl\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n        return _this10;\n    }\n    return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nexports.InvalidCallbackUrl = InvalidCallbackUrl;\nfunction upperSnake(s) {\n    return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n    return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var method, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _context.prev = 0;\n                            method = methods[name];\n                            _context.next = 4;\n                            return method.apply(void 0, _args);\n                        case 4:\n                            return _context.abrupt(\"return\", _context.sent);\n                        case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](0);\n                            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n                        case 10:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    7\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n            var _len10, args, _key10, method, e, _args2 = arguments;\n            return _regenerator.default.wrap(function _callee2$(_context2) {\n                while(1){\n                    switch(_context2.prev = _context2.next){\n                        case 0:\n                            _context2.prev = 0;\n                            for(_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++){\n                                args[_key10] = _args2[_key10];\n                            }\n                            logger.debug(\"adapter_\".concat(name), {\n                                args: args\n                            });\n                            method = adapter[name];\n                            _context2.next = 6;\n                            return method.apply(void 0, args);\n                        case 6:\n                            return _context2.abrupt(\"return\", _context2.sent);\n                        case 9:\n                            _context2.prev = 9;\n                            _context2.t0 = _context2[\"catch\"](0);\n                            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n                            e = new UnknownError(_context2.t0);\n                            e.name = \"\".concat(capitalize(name), \"Error\");\n                            throw e;\n                        case 15:\n                        case \"end\":\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, null, [\n                [\n                    0,\n                    9\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react/index.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {\n    SessionContext: true,\n    useSession: true,\n    getSession: true,\n    getCsrfToken: true,\n    getProviders: true,\n    signIn: true,\n    signOut: true,\n    SessionProvider: true\n};\nexports.SessionContext = void 0;\nexports.SessionProvider = SessionProvider;\nexports.getCsrfToken = getCsrfToken;\nexports.getProviders = getProviders;\nexports.getSession = getSession;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.useSession = useSession;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _logger2 = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(ssr)/./node_modules/next-auth/utils/logger.js\"));\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(ssr)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _utils = __webpack_require__(/*! ../client/_utils */ \"(ssr)/./node_modules/next-auth/client/_utils.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/next-auth/react/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _types[key];\n        }\n    });\n});\nvar _process$env$NEXTAUTH, _ref, _process$env$NEXTAUTH2, _process$env$NEXTAUTH3, _React$createContext;\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nvar __NEXTAUTH = {\n    baseUrl: (0, _parseUrl.default)((_process$env$NEXTAUTH = process.env.NEXTAUTH_URL) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : process.env.VERCEL_URL).origin,\n    basePath: (0, _parseUrl.default)(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: (0, _parseUrl.default)((_ref = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH2 !== void 0 ? _process$env$NEXTAUTH2 : process.env.NEXTAUTH_URL) !== null && _ref !== void 0 ? _ref : process.env.VERCEL_URL).origin,\n    basePathServer: (0, _parseUrl.default)((_process$env$NEXTAUTH3 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH3 !== void 0 ? _process$env$NEXTAUTH3 : process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: function _getSession() {}\n};\nvar broadcast = (0, _utils.BroadcastChannel)();\nvar logger = (0, _logger2.proxyLogger)(_logger2.default, __NEXTAUTH.basePath);\nfunction useOnline() {\n    var _React$useState = React.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false), _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2), isOnline = _React$useState2[0], setIsOnline = _React$useState2[1];\n    var setOnline = function setOnline() {\n        return setIsOnline(true);\n    };\n    var setOffline = function setOffline() {\n        return setIsOnline(false);\n    };\n    React.useEffect(function() {\n        window.addEventListener(\"online\", setOnline);\n        window.addEventListener(\"offline\", setOffline);\n        return function() {\n            window.removeEventListener(\"online\", setOnline);\n            window.removeEventListener(\"offline\", setOffline);\n        };\n    }, []);\n    return isOnline;\n}\nvar SessionContext = (_React$createContext = React.createContext) === null || _React$createContext === void 0 ? void 0 : _React$createContext.call(React, undefined);\nexports.SessionContext = SessionContext;\nfunction useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var value = React.useContext(SessionContext);\n    if (!value && \"development\" !== \"production\") {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    var _ref2 = options !== null && options !== void 0 ? options : {}, required = _ref2.required, onUnauthenticated = _ref2.onUnauthenticated;\n    var requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    React.useEffect(function() {\n        if (requiredAndNotLoading) {\n            var url = \"/api/auth/signin?\".concat(new URLSearchParams({\n                error: \"SessionRequired\",\n                callbackUrl: window.location.href\n            }));\n            if (onUnauthenticated) onUnauthenticated();\n            else window.location.href = url;\n        }\n    }, [\n        requiredAndNotLoading,\n        onUnauthenticated\n    ]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\"\n        };\n    }\n    return value;\n}\nfunction getSession(_x) {\n    return _getSession2.apply(this, arguments);\n}\nfunction _getSession2() {\n    _getSession2 = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(params) {\n        var _params$broadcast;\n        var session;\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n            while(1){\n                switch(_context3.prev = _context3.next){\n                    case 0:\n                        _context3.next = 2;\n                        return (0, _utils.fetchData)(\"session\", __NEXTAUTH, logger, params);\n                    case 2:\n                        session = _context3.sent;\n                        if ((_params$broadcast = params === null || params === void 0 ? void 0 : params.broadcast) !== null && _params$broadcast !== void 0 ? _params$broadcast : true) {\n                            broadcast.post({\n                                event: \"session\",\n                                data: {\n                                    trigger: \"getSession\"\n                                }\n                            });\n                        }\n                        return _context3.abrupt(\"return\", session);\n                    case 5:\n                    case \"end\":\n                        return _context3.stop();\n                }\n            }\n        }, _callee3);\n    }));\n    return _getSession2.apply(this, arguments);\n}\nfunction getCsrfToken(_x2) {\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction _getCsrfToken() {\n    _getCsrfToken = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(params) {\n        var response;\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n            while(1){\n                switch(_context4.prev = _context4.next){\n                    case 0:\n                        _context4.next = 2;\n                        return (0, _utils.fetchData)(\"csrf\", __NEXTAUTH, logger, params);\n                    case 2:\n                        response = _context4.sent;\n                        return _context4.abrupt(\"return\", response === null || response === void 0 ? void 0 : response.csrfToken);\n                    case 4:\n                    case \"end\":\n                        return _context4.stop();\n                }\n            }\n        }, _callee4);\n    }));\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction getProviders() {\n    return _getProviders.apply(this, arguments);\n}\nfunction _getProviders() {\n    _getProviders = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5() {\n        return _regenerator.default.wrap(function _callee5$(_context5) {\n            while(1){\n                switch(_context5.prev = _context5.next){\n                    case 0:\n                        _context5.next = 2;\n                        return (0, _utils.fetchData)(\"providers\", __NEXTAUTH, logger);\n                    case 2:\n                        return _context5.abrupt(\"return\", _context5.sent);\n                    case 3:\n                    case \"end\":\n                        return _context5.stop();\n                }\n            }\n        }, _callee5);\n    }));\n    return _getProviders.apply(this, arguments);\n}\nfunction signIn(_x3, _x4, _x5) {\n    return _signIn.apply(this, arguments);\n}\nfunction _signIn() {\n    _signIn = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(provider, options, authorizationParams) {\n        var _ref5, _ref5$callbackUrl, callbackUrl, _ref5$redirect, redirect, baseUrl, providers, isCredentials, isEmail, isSupportingReturn, signInUrl, _signInUrl, res, data, _data$url, url, error;\n        return _regenerator.default.wrap(function _callee6$(_context6) {\n            while(1){\n                switch(_context6.prev = _context6.next){\n                    case 0:\n                        _ref5 = options !== null && options !== void 0 ? options : {}, _ref5$callbackUrl = _ref5.callbackUrl, callbackUrl = _ref5$callbackUrl === void 0 ? window.location.href : _ref5$callbackUrl, _ref5$redirect = _ref5.redirect, redirect = _ref5$redirect === void 0 ? true : _ref5$redirect;\n                        baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n                        _context6.next = 4;\n                        return getProviders();\n                    case 4:\n                        providers = _context6.sent;\n                        if (providers) {\n                            _context6.next = 8;\n                            break;\n                        }\n                        window.location.href = \"\".concat(baseUrl, \"/error\");\n                        return _context6.abrupt(\"return\");\n                    case 8:\n                        if (!(!provider || !(provider in providers))) {\n                            _context6.next = 11;\n                            break;\n                        }\n                        window.location.href = \"\".concat(baseUrl, \"/signin?\").concat(new URLSearchParams({\n                            callbackUrl: callbackUrl\n                        }));\n                        return _context6.abrupt(\"return\");\n                    case 11:\n                        isCredentials = providers[provider].type === \"credentials\";\n                        isEmail = providers[provider].type === \"email\";\n                        isSupportingReturn = isCredentials || isEmail;\n                        signInUrl = \"\".concat(baseUrl, \"/\").concat(isCredentials ? \"callback\" : \"signin\", \"/\").concat(provider);\n                        _signInUrl = \"\".concat(signInUrl, \"?\").concat(new URLSearchParams(authorizationParams));\n                        _context6.t0 = fetch;\n                        _context6.t1 = _signInUrl;\n                        _context6.t2 = {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        };\n                        _context6.t3 = URLSearchParams;\n                        _context6.t4 = _objectSpread;\n                        _context6.t5 = _objectSpread({}, options);\n                        _context6.t6 = {};\n                        _context6.next = 25;\n                        return getCsrfToken();\n                    case 25:\n                        _context6.t7 = _context6.sent;\n                        _context6.t8 = callbackUrl;\n                        _context6.t9 = {\n                            csrfToken: _context6.t7,\n                            callbackUrl: _context6.t8,\n                            json: true\n                        };\n                        _context6.t10 = (0, _context6.t4)(_context6.t5, _context6.t6, _context6.t9);\n                        _context6.t11 = new _context6.t3(_context6.t10);\n                        _context6.t12 = {\n                            method: \"post\",\n                            headers: _context6.t2,\n                            body: _context6.t11\n                        };\n                        _context6.next = 33;\n                        return (0, _context6.t0)(_context6.t1, _context6.t12);\n                    case 33:\n                        res = _context6.sent;\n                        _context6.next = 36;\n                        return res.json();\n                    case 36:\n                        data = _context6.sent;\n                        if (!(redirect || !isSupportingReturn)) {\n                            _context6.next = 42;\n                            break;\n                        }\n                        url = (_data$url = data.url) !== null && _data$url !== void 0 ? _data$url : callbackUrl;\n                        window.location.href = url;\n                        if (url.includes(\"#\")) window.location.reload();\n                        return _context6.abrupt(\"return\");\n                    case 42:\n                        error = new URL(data.url).searchParams.get(\"error\");\n                        if (!res.ok) {\n                            _context6.next = 46;\n                            break;\n                        }\n                        _context6.next = 46;\n                        return __NEXTAUTH._getSession({\n                            event: \"storage\"\n                        });\n                    case 46:\n                        return _context6.abrupt(\"return\", {\n                            error: error,\n                            status: res.status,\n                            ok: res.ok,\n                            url: error ? null : data.url\n                        });\n                    case 47:\n                    case \"end\":\n                        return _context6.stop();\n                }\n            }\n        }, _callee6);\n    }));\n    return _signIn.apply(this, arguments);\n}\nfunction signOut(_x6) {\n    return _signOut.apply(this, arguments);\n}\nfunction _signOut() {\n    _signOut = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee7(options) {\n        var _options$redirect;\n        var _ref6, _ref6$callbackUrl, callbackUrl, baseUrl, fetchOptions, res, data, _data$url2, url;\n        return _regenerator.default.wrap(function _callee7$(_context7) {\n            while(1){\n                switch(_context7.prev = _context7.next){\n                    case 0:\n                        _ref6 = options !== null && options !== void 0 ? options : {}, _ref6$callbackUrl = _ref6.callbackUrl, callbackUrl = _ref6$callbackUrl === void 0 ? window.location.href : _ref6$callbackUrl;\n                        baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n                        _context7.t0 = {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        };\n                        _context7.t1 = URLSearchParams;\n                        _context7.next = 6;\n                        return getCsrfToken();\n                    case 6:\n                        _context7.t2 = _context7.sent;\n                        _context7.t3 = callbackUrl;\n                        _context7.t4 = {\n                            csrfToken: _context7.t2,\n                            callbackUrl: _context7.t3,\n                            json: true\n                        };\n                        _context7.t5 = new _context7.t1(_context7.t4);\n                        fetchOptions = {\n                            method: \"post\",\n                            headers: _context7.t0,\n                            body: _context7.t5\n                        };\n                        _context7.next = 13;\n                        return fetch(\"\".concat(baseUrl, \"/signout\"), fetchOptions);\n                    case 13:\n                        res = _context7.sent;\n                        _context7.next = 16;\n                        return res.json();\n                    case 16:\n                        data = _context7.sent;\n                        broadcast.post({\n                            event: \"session\",\n                            data: {\n                                trigger: \"signout\"\n                            }\n                        });\n                        if (!((_options$redirect = options === null || options === void 0 ? void 0 : options.redirect) !== null && _options$redirect !== void 0 ? _options$redirect : true)) {\n                            _context7.next = 23;\n                            break;\n                        }\n                        url = (_data$url2 = data.url) !== null && _data$url2 !== void 0 ? _data$url2 : callbackUrl;\n                        window.location.href = url;\n                        if (url.includes(\"#\")) window.location.reload();\n                        return _context7.abrupt(\"return\");\n                    case 23:\n                        _context7.next = 25;\n                        return __NEXTAUTH._getSession({\n                            event: \"storage\"\n                        });\n                    case 25:\n                        return _context7.abrupt(\"return\", data);\n                    case 26:\n                    case \"end\":\n                        return _context7.stop();\n                }\n            }\n        }, _callee7);\n    }));\n    return _signOut.apply(this, arguments);\n}\nfunction SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var children = props.children, basePath = props.basePath, refetchInterval = props.refetchInterval, refetchWhenOffline = props.refetchWhenOffline;\n    if (basePath) __NEXTAUTH.basePath = basePath;\n    var hasInitialSession = props.session !== undefined;\n    __NEXTAUTH._lastSync = hasInitialSession ? (0, _utils.now)() : 0;\n    var _React$useState3 = React.useState(function() {\n        if (hasInitialSession) __NEXTAUTH._session = props.session;\n        return props.session;\n    }), _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2), session = _React$useState4[0], setSession = _React$useState4[1];\n    var _React$useState5 = React.useState(!hasInitialSession), _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2), loading = _React$useState6[0], setLoading = _React$useState6[1];\n    React.useEffect(function() {\n        __NEXTAUTH._getSession = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var _ref4, event, storageEvent, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _ref4 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, event = _ref4.event;\n                            _context.prev = 1;\n                            storageEvent = event === \"storage\";\n                            if (!(storageEvent || __NEXTAUTH._session === undefined)) {\n                                _context.next = 10;\n                                break;\n                            }\n                            __NEXTAUTH._lastSync = (0, _utils.now)();\n                            _context.next = 7;\n                            return getSession({\n                                broadcast: !storageEvent\n                            });\n                        case 7:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            return _context.abrupt(\"return\");\n                        case 10:\n                            if (!(!event || __NEXTAUTH._session === null || (0, _utils.now)() < __NEXTAUTH._lastSync)) {\n                                _context.next = 12;\n                                break;\n                            }\n                            return _context.abrupt(\"return\");\n                        case 12:\n                            __NEXTAUTH._lastSync = (0, _utils.now)();\n                            _context.next = 15;\n                            return getSession();\n                        case 15:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            _context.next = 22;\n                            break;\n                        case 19:\n                            _context.prev = 19;\n                            _context.t0 = _context[\"catch\"](1);\n                            logger.error(\"CLIENT_SESSION_ERROR\", _context.t0);\n                        case 22:\n                            _context.prev = 22;\n                            setLoading(false);\n                            return _context.finish(22);\n                        case 25:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    1,\n                    19,\n                    22,\n                    25\n                ]\n            ]);\n        }));\n        __NEXTAUTH._getSession();\n        return function() {\n            __NEXTAUTH._lastSync = 0;\n            __NEXTAUTH._session = undefined;\n            __NEXTAUTH._getSession = function() {};\n        };\n    }, []);\n    React.useEffect(function() {\n        var unsubscribe = broadcast.receive(function() {\n            return __NEXTAUTH._getSession({\n                event: \"storage\"\n            });\n        });\n        return function() {\n            return unsubscribe();\n        };\n    }, []);\n    React.useEffect(function() {\n        var _props$refetchOnWindo = props.refetchOnWindowFocus, refetchOnWindowFocus = _props$refetchOnWindo === void 0 ? true : _props$refetchOnWindo;\n        var visibilityHandler = function visibilityHandler() {\n            if (refetchOnWindowFocus && document.visibilityState === \"visible\") __NEXTAUTH._getSession({\n                event: \"visibilitychange\"\n            });\n        };\n        document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n        return function() {\n            return document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n        };\n    }, [\n        props.refetchOnWindowFocus\n    ]);\n    var isOnline = useOnline();\n    var shouldRefetch = refetchWhenOffline !== false || isOnline;\n    React.useEffect(function() {\n        if (refetchInterval && shouldRefetch) {\n            var refetchIntervalTimer = setInterval(function() {\n                if (__NEXTAUTH._session) {\n                    __NEXTAUTH._getSession({\n                        event: \"poll\"\n                    });\n                }\n            }, refetchInterval * 1000);\n            return function() {\n                return clearInterval(refetchIntervalTimer);\n            };\n        }\n    }, [\n        refetchInterval,\n        shouldRefetch\n    ]);\n    var value = React.useMemo(function() {\n        return {\n            data: session,\n            status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n            update: function update(data) {\n                return (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n                    var newSession;\n                    return _regenerator.default.wrap(function _callee2$(_context2) {\n                        while(1){\n                            switch(_context2.prev = _context2.next){\n                                case 0:\n                                    if (!(loading || !session)) {\n                                        _context2.next = 2;\n                                        break;\n                                    }\n                                    return _context2.abrupt(\"return\");\n                                case 2:\n                                    setLoading(true);\n                                    _context2.t0 = _utils.fetchData;\n                                    _context2.t1 = __NEXTAUTH;\n                                    _context2.t2 = logger;\n                                    _context2.next = 8;\n                                    return getCsrfToken();\n                                case 8:\n                                    _context2.t3 = _context2.sent;\n                                    _context2.t4 = data;\n                                    _context2.t5 = {\n                                        csrfToken: _context2.t3,\n                                        data: _context2.t4\n                                    };\n                                    _context2.t6 = {\n                                        body: _context2.t5\n                                    };\n                                    _context2.t7 = {\n                                        req: _context2.t6\n                                    };\n                                    _context2.next = 15;\n                                    return (0, _context2.t0)(\"session\", _context2.t1, _context2.t2, _context2.t7);\n                                case 15:\n                                    newSession = _context2.sent;\n                                    setLoading(false);\n                                    if (newSession) {\n                                        setSession(newSession);\n                                        broadcast.post({\n                                            event: \"session\",\n                                            data: {\n                                                trigger: \"getSession\"\n                                            }\n                                        });\n                                    }\n                                    return _context2.abrupt(\"return\", newSession);\n                                case 19:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2);\n                }))();\n            }\n        };\n    }, [\n        session,\n        loading\n    ]);\n    return (0, _jsxRuntime.jsx)(SessionContext.Provider, {\n        value: value,\n        children: children\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react/types.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/types.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcmVhY3QvdHlwZXMuanM/MWU1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(ssr)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction formatError(o) {\n    if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n        return {\n            message: o.message,\n            stack: o.stack,\n            name: o.name\n        };\n    }\n    if (hasErrorProperty(o)) {\n        var _o$message;\n        o.error = formatError(o.error);\n        o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n    }\n    return o;\n}\nfunction hasErrorProperty(x) {\n    return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n    error: function error(code, metadata) {\n        metadata = formatError(metadata);\n        console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n    },\n    warn: function warn(code) {\n        console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n    },\n    debug: function debug(code, metadata) {\n        console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n    }\n};\nfunction setLogger() {\n    var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var debug = arguments.length > 1 ? arguments[1] : undefined;\n    if (!debug) _logger.debug = function() {};\n    if (newLogger.error) _logger.error = newLogger.error;\n    if (newLogger.warn) _logger.warn = newLogger.warn;\n    if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = _logger;\nexports[\"default\"] = _default;\nfunction proxyLogger() {\n    var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n    var basePath = arguments.length > 1 ? arguments[1] : undefined;\n    try {\n        if (true) {\n            return logger;\n        }\n        var clientLogger = {};\n        var _loop = function _loop(level) {\n            clientLogger[level] = function(code, metadata) {\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                    metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                var url = \"\".concat(basePath, \"/_log\");\n                var body = new URLSearchParams(_objectSpread({\n                    level: level,\n                    code: code\n                }, metadata));\n                if (navigator.sendBeacon) {\n                    return navigator.sendBeacon(url, body);\n                }\n                return fetch(url, {\n                    method: \"POST\",\n                    body: body,\n                    keepalive: true\n                });\n            };\n        };\n        for(var level in logger){\n            _loop(level);\n        }\n        return clientLogger;\n    } catch (_unused) {\n        return _logger;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n    var _url2;\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: ()=>base\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsU0FBU0EsU0FBU0MsR0FBRztJQUNuQixJQUFJQztJQUVKLE1BQU1DLGFBQWEsSUFBSUMsSUFBSTtJQUUzQixJQUFJSCxPQUFPLENBQUNBLElBQUlJLFVBQVUsQ0FBQyxTQUFTO1FBQ2xDSixNQUFNLENBQUMsUUFBUSxFQUFFQSxJQUFJLENBQUM7SUFDeEI7SUFFQSxNQUFNSyxPQUFPLElBQUlGLElBQUksQ0FBQ0YsUUFBUUQsR0FBRSxNQUFPLFFBQVFDLFVBQVUsS0FBSyxJQUFJQSxRQUFRQztJQUUxRSxNQUFNSSxPQUFPLENBQUNELEtBQUtFLFFBQVEsS0FBSyxNQUFNTCxXQUFXSyxRQUFRLEdBQUdGLEtBQUtFLFFBQVEsRUFBRUMsT0FBTyxDQUFDLE9BQU87SUFDMUYsTUFBTUMsT0FBTyxDQUFDLEVBQUVKLEtBQUtLLE1BQU0sQ0FBQyxFQUFFSixLQUFLLENBQUM7SUFDcEMsT0FBTztRQUNMSSxRQUFRTCxLQUFLSyxNQUFNO1FBQ25CQyxNQUFNTixLQUFLTSxJQUFJO1FBQ2ZMO1FBQ0FHO1FBQ0FHLFVBQVUsSUFBTUg7SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvdXRpbHMvcGFyc2UtdXJsLmpzP2MzMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwYXJzZVVybDtcblxuZnVuY3Rpb24gcGFyc2VVcmwodXJsKSB7XG4gIHZhciBfdXJsMjtcblxuICBjb25zdCBkZWZhdWx0VXJsID0gbmV3IFVSTChcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvYXV0aFwiKTtcblxuICBpZiAodXJsICYmICF1cmwuc3RhcnRzV2l0aChcImh0dHBcIikpIHtcbiAgICB1cmwgPSBgaHR0cHM6Ly8ke3VybH1gO1xuICB9XG5cbiAgY29uc3QgX3VybCA9IG5ldyBVUkwoKF91cmwyID0gdXJsKSAhPT0gbnVsbCAmJiBfdXJsMiAhPT0gdm9pZCAwID8gX3VybDIgOiBkZWZhdWx0VXJsKTtcblxuICBjb25zdCBwYXRoID0gKF91cmwucGF0aG5hbWUgPT09IFwiL1wiID8gZGVmYXVsdFVybC5wYXRobmFtZSA6IF91cmwucGF0aG5hbWUpLnJlcGxhY2UoL1xcLyQvLCBcIlwiKTtcbiAgY29uc3QgYmFzZSA9IGAke191cmwub3JpZ2lufSR7cGF0aH1gO1xuICByZXR1cm4ge1xuICAgIG9yaWdpbjogX3VybC5vcmlnaW4sXG4gICAgaG9zdDogX3VybC5ob3N0LFxuICAgIHBhdGgsXG4gICAgYmFzZSxcbiAgICB0b1N0cmluZzogKCkgPT4gYmFzZVxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJwYXJzZVVybCIsInVybCIsIl91cmwyIiwiZGVmYXVsdFVybCIsIlVSTCIsInN0YXJ0c1dpdGgiLCJfdXJsIiwicGF0aCIsInBhdGhuYW1lIiwicmVwbGFjZSIsImJhc2UiLCJvcmlnaW4iLCJob3N0IiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(rsc)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(rsc)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(rsc)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(rsc)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(rsc)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(rsc)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(rsc)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(rsc)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(rsc)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(rsc)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf2.default)(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nvar UnknownError = function(_Error) {\n    (0, _inherits2.default)(UnknownError, _Error);\n    var _super = _createSuper(UnknownError);\n    function UnknownError(error) {\n        var _message;\n        var _this;\n        (0, _classCallCheck2.default)(this, UnknownError);\n        _this = _super.call(this, (_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error);\n        _this.name = \"UnknownError\";\n        _this.code = error.code;\n        if (error instanceof Error) {\n            _this.stack = error.stack;\n        }\n        return _this;\n    }\n    (0, _createClass2.default)(UnknownError, [\n        {\n            key: \"toJSON\",\n            value: function toJSON() {\n                return {\n                    name: this.name,\n                    message: this.message,\n                    stack: this.stack\n                };\n            }\n        }\n    ]);\n    return UnknownError;\n}((0, _wrapNativeSuper2.default)(Error));\nexports.UnknownError = UnknownError;\nvar OAuthCallbackError = function(_UnknownError) {\n    (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n    var _super2 = _createSuper(OAuthCallbackError);\n    function OAuthCallbackError() {\n        var _this2;\n        (0, _classCallCheck2.default)(this, OAuthCallbackError);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this2 = _super2.call.apply(_super2, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"name\", \"OAuthCallbackError\");\n        return _this2;\n    }\n    return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nexports.OAuthCallbackError = OAuthCallbackError;\nvar AccountNotLinkedError = function(_UnknownError2) {\n    (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n    var _super3 = _createSuper(AccountNotLinkedError);\n    function AccountNotLinkedError() {\n        var _this3;\n        (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        _this3 = _super3.call.apply(_super3, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this3), \"name\", \"AccountNotLinkedError\");\n        return _this3;\n    }\n    return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nexports.AccountNotLinkedError = AccountNotLinkedError;\nvar MissingAPIRoute = function(_UnknownError3) {\n    (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n    var _super4 = _createSuper(MissingAPIRoute);\n    function MissingAPIRoute() {\n        var _this4;\n        (0, _classCallCheck2.default)(this, MissingAPIRoute);\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n            args[_key3] = arguments[_key3];\n        }\n        _this4 = _super4.call.apply(_super4, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"name\", \"MissingAPIRouteError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n        return _this4;\n    }\n    return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nexports.MissingAPIRoute = MissingAPIRoute;\nvar MissingSecret = function(_UnknownError4) {\n    (0, _inherits2.default)(MissingSecret, _UnknownError4);\n    var _super5 = _createSuper(MissingSecret);\n    function MissingSecret() {\n        var _this5;\n        (0, _classCallCheck2.default)(this, MissingSecret);\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        _this5 = _super5.call.apply(_super5, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"name\", \"MissingSecretError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"code\", \"NO_SECRET\");\n        return _this5;\n    }\n    return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nexports.MissingSecret = MissingSecret;\nvar MissingAuthorize = function(_UnknownError5) {\n    (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n    var _super6 = _createSuper(MissingAuthorize);\n    function MissingAuthorize() {\n        var _this6;\n        (0, _classCallCheck2.default)(this, MissingAuthorize);\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n            args[_key5] = arguments[_key5];\n        }\n        _this6 = _super6.call.apply(_super6, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"name\", \"MissingAuthorizeError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n        return _this6;\n    }\n    return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nexports.MissingAuthorize = MissingAuthorize;\nvar MissingAdapter = function(_UnknownError6) {\n    (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n    var _super7 = _createSuper(MissingAdapter);\n    function MissingAdapter() {\n        var _this7;\n        (0, _classCallCheck2.default)(this, MissingAdapter);\n        for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++){\n            args[_key6] = arguments[_key6];\n        }\n        _this7 = _super7.call.apply(_super7, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"name\", \"MissingAdapterError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n        return _this7;\n    }\n    return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nexports.MissingAdapter = MissingAdapter;\nvar MissingAdapterMethods = function(_UnknownError7) {\n    (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n    var _super8 = _createSuper(MissingAdapterMethods);\n    function MissingAdapterMethods() {\n        var _this8;\n        (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n        for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n            args[_key7] = arguments[_key7];\n        }\n        _this8 = _super8.call.apply(_super8, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"name\", \"MissingAdapterMethodsError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n        return _this8;\n    }\n    return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nexports.MissingAdapterMethods = MissingAdapterMethods;\nvar UnsupportedStrategy = function(_UnknownError8) {\n    (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n    var _super9 = _createSuper(UnsupportedStrategy);\n    function UnsupportedStrategy() {\n        var _this9;\n        (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n        for(var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++){\n            args[_key8] = arguments[_key8];\n        }\n        _this9 = _super9.call.apply(_super9, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"name\", \"UnsupportedStrategyError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n        return _this9;\n    }\n    return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nexports.UnsupportedStrategy = UnsupportedStrategy;\nvar InvalidCallbackUrl = function(_UnknownError9) {\n    (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n    var _super10 = _createSuper(InvalidCallbackUrl);\n    function InvalidCallbackUrl() {\n        var _this10;\n        (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n        for(var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++){\n            args[_key9] = arguments[_key9];\n        }\n        _this10 = _super10.call.apply(_super10, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"name\", \"InvalidCallbackUrl\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n        return _this10;\n    }\n    return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nexports.InvalidCallbackUrl = InvalidCallbackUrl;\nfunction upperSnake(s) {\n    return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n    return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var method, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _context.prev = 0;\n                            method = methods[name];\n                            _context.next = 4;\n                            return method.apply(void 0, _args);\n                        case 4:\n                            return _context.abrupt(\"return\", _context.sent);\n                        case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](0);\n                            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n                        case 10:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    7\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n            var _len10, args, _key10, method, e, _args2 = arguments;\n            return _regenerator.default.wrap(function _callee2$(_context2) {\n                while(1){\n                    switch(_context2.prev = _context2.next){\n                        case 0:\n                            _context2.prev = 0;\n                            for(_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++){\n                                args[_key10] = _args2[_key10];\n                            }\n                            logger.debug(\"adapter_\".concat(name), {\n                                args: args\n                            });\n                            method = adapter[name];\n                            _context2.next = 6;\n                            return method.apply(void 0, args);\n                        case 6:\n                            return _context2.abrupt(\"return\", _context2.sent);\n                        case 9:\n                            _context2.prev = 9;\n                            _context2.t0 = _context2[\"catch\"](0);\n                            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n                            e = new UnknownError(_context2.t0);\n                            e.name = \"\".concat(capitalize(name), \"Error\");\n                            throw e;\n                        case 15:\n                        case \"end\":\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, null, [\n                [\n                    0,\n                    9\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthHandler = AuthHandler;\nvar _logger = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(rsc)/./node_modules/next-auth/utils/logger.js\"));\nvar _detectOrigin = __webpack_require__(/*! ../utils/detect-origin */ \"(rsc)/./node_modules/next-auth/utils/detect-origin.js\");\nvar routes = _interopRequireWildcard(__webpack_require__(/*! ./routes */ \"(rsc)/./node_modules/next-auth/core/routes/index.js\"));\nvar _pages = _interopRequireDefault(__webpack_require__(/*! ./pages */ \"(rsc)/./node_modules/next-auth/core/pages/index.js\"));\nvar _init = __webpack_require__(/*! ./init */ \"(rsc)/./node_modules/next-auth/core/init.js\");\nvar _assert = __webpack_require__(/*! ./lib/assert */ \"(rsc)/./node_modules/next-auth/core/lib/assert.js\");\nvar _cookie = __webpack_require__(/*! ./lib/cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _cookie2 = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function getBody(req) {\n    try {\n        return await req.json();\n    } catch (_unused) {}\n}\nasync function toInternalRequest(req) {\n    var _headers$xForwarded2;\n    if (req instanceof Request) {\n        var _req$headers$get, _url$searchParams$get, _headers$xForwarded;\n        const url = new URL(req.url);\n        const nextauth = url.pathname.split(\"/\").slice(3);\n        const headers = Object.fromEntries(req.headers);\n        const query = Object.fromEntries(url.searchParams);\n        query.nextauth = nextauth;\n        return {\n            action: nextauth[0],\n            method: req.method,\n            headers,\n            body: await getBody(req),\n            cookies: (0, _cookie2.parse)((_req$headers$get = req.headers.get(\"cookie\")) !== null && _req$headers$get !== void 0 ? _req$headers$get : \"\"),\n            providerId: nextauth[1],\n            error: (_url$searchParams$get = url.searchParams.get(\"error\")) !== null && _url$searchParams$get !== void 0 ? _url$searchParams$get : nextauth[1],\n            origin: (0, _detectOrigin.detectOrigin)((_headers$xForwarded = headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded !== void 0 ? _headers$xForwarded : headers.host, headers[\"x-forwarded-proto\"]),\n            query\n        };\n    }\n    const { headers } = req;\n    const host = (_headers$xForwarded2 = headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded2 !== void 0 ? _headers$xForwarded2 : headers === null || headers === void 0 ? void 0 : headers.host;\n    req.origin = (0, _detectOrigin.detectOrigin)(host, headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-proto\"]);\n    return req;\n}\nasync function AuthHandler(params) {\n    var _req$body$callbackUrl, _req$body, _req$query2, _req$body2;\n    const { options: authOptions, req: incomingRequest } = params;\n    const req = await toInternalRequest(incomingRequest);\n    (0, _logger.setLogger)(authOptions.logger, authOptions.debug);\n    const assertionResult = (0, _assert.assertConfig)({\n        options: authOptions,\n        req\n    });\n    if (Array.isArray(assertionResult)) {\n        assertionResult.forEach(_logger.default.warn);\n    } else if (assertionResult instanceof Error) {\n        var _req$query, _req$query$callbackUr;\n        _logger.default.error(assertionResult.code, assertionResult);\n        const htmlPages = [\n            \"signin\",\n            \"signout\",\n            \"error\",\n            \"verify-request\"\n        ];\n        if (!htmlPages.includes(req.action) || req.method !== \"GET\") {\n            const message = `There is a problem with the server configuration. Check the server logs for more information.`;\n            return {\n                status: 500,\n                headers: [\n                    {\n                        key: \"Content-Type\",\n                        value: \"application/json\"\n                    }\n                ],\n                body: {\n                    message\n                }\n            };\n        }\n        const { pages, theme } = authOptions;\n        const authOnErrorPage = (pages === null || pages === void 0 ? void 0 : pages.error) && ((_req$query = req.query) === null || _req$query === void 0 ? void 0 : (_req$query$callbackUr = _req$query.callbackUrl) === null || _req$query$callbackUr === void 0 ? void 0 : _req$query$callbackUr.startsWith(pages.error));\n        if (!(pages !== null && pages !== void 0 && pages.error) || authOnErrorPage) {\n            if (authOnErrorPage) {\n                _logger.default.error(\"AUTH_ON_ERROR_PAGE_ERROR\", new Error(`The error page ${pages === null || pages === void 0 ? void 0 : pages.error} should not require authentication`));\n            }\n            const render = (0, _pages.default)({\n                theme\n            });\n            return render.error({\n                error: \"configuration\"\n            });\n        }\n        return {\n            redirect: `${pages.error}?error=Configuration`\n        };\n    }\n    const { action, providerId, error, method = \"GET\" } = req;\n    const { options, cookies } = await (0, _init.init)({\n        authOptions,\n        action,\n        providerId,\n        origin: req.origin,\n        callbackUrl: (_req$body$callbackUrl = (_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.callbackUrl) !== null && _req$body$callbackUrl !== void 0 ? _req$body$callbackUrl : (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl,\n        csrfToken: (_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.csrfToken,\n        cookies: req.cookies,\n        isPost: method === \"POST\"\n    });\n    const sessionStore = new _cookie.SessionStore(options.cookies.sessionToken, req, options.logger);\n    if (method === \"GET\") {\n        const render = (0, _pages.default)({\n            ...options,\n            query: req.query,\n            cookies\n        });\n        const { pages } = options;\n        switch(action){\n            case \"providers\":\n                return await routes.providers(options.providers);\n            case \"session\":\n                {\n                    const session = await routes.session({\n                        options,\n                        sessionStore\n                    });\n                    if (session.cookies) cookies.push(...session.cookies);\n                    return {\n                        ...session,\n                        cookies\n                    };\n                }\n            case \"csrf\":\n                return {\n                    headers: [\n                        {\n                            key: \"Content-Type\",\n                            value: \"application/json\"\n                        }\n                    ],\n                    body: {\n                        csrfToken: options.csrfToken\n                    },\n                    cookies\n                };\n            case \"signin\":\n                if (pages.signIn) {\n                    let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(options.callbackUrl)}`;\n                    if (error) signinUrl = `${signinUrl}&error=${encodeURIComponent(error)}`;\n                    return {\n                        redirect: signinUrl,\n                        cookies\n                    };\n                }\n                return render.signin();\n            case \"signout\":\n                if (pages.signOut) return {\n                    redirect: pages.signOut,\n                    cookies\n                };\n                return render.signout();\n            case \"callback\":\n                if (options.provider) {\n                    const callback = await routes.callback({\n                        body: req.body,\n                        query: req.query,\n                        headers: req.headers,\n                        cookies: req.cookies,\n                        method,\n                        options,\n                        sessionStore\n                    });\n                    if (callback.cookies) cookies.push(...callback.cookies);\n                    return {\n                        ...callback,\n                        cookies\n                    };\n                }\n                break;\n            case \"verify-request\":\n                if (pages.verifyRequest) {\n                    return {\n                        redirect: pages.verifyRequest,\n                        cookies\n                    };\n                }\n                return render.verifyRequest();\n            case \"error\":\n                if ([\n                    \"Signin\",\n                    \"OAuthSignin\",\n                    \"OAuthCallback\",\n                    \"OAuthCreateAccount\",\n                    \"EmailCreateAccount\",\n                    \"Callback\",\n                    \"OAuthAccountNotLinked\",\n                    \"EmailSignin\",\n                    \"CredentialsSignin\",\n                    \"SessionRequired\"\n                ].includes(error)) {\n                    return {\n                        redirect: `${options.url}/signin?error=${error}`,\n                        cookies\n                    };\n                }\n                if (pages.error) {\n                    return {\n                        redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                        cookies\n                    };\n                }\n                return render.error({\n                    error: error\n                });\n            default:\n        }\n    } else if (method === \"POST\") {\n        switch(action){\n            case \"signin\":\n                if (options.csrfTokenVerified && options.provider) {\n                    const signin = await routes.signin({\n                        query: req.query,\n                        body: req.body,\n                        options\n                    });\n                    if (signin.cookies) cookies.push(...signin.cookies);\n                    return {\n                        ...signin,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: `${options.url}/signin?csrf=true`,\n                    cookies\n                };\n            case \"signout\":\n                if (options.csrfTokenVerified) {\n                    const signout = await routes.signout({\n                        options,\n                        sessionStore\n                    });\n                    if (signout.cookies) cookies.push(...signout.cookies);\n                    return {\n                        ...signout,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: `${options.url}/signout?csrf=true`,\n                    cookies\n                };\n            case \"callback\":\n                if (options.provider) {\n                    if (options.provider.type === \"credentials\" && !options.csrfTokenVerified) {\n                        return {\n                            redirect: `${options.url}/signin?csrf=true`,\n                            cookies\n                        };\n                    }\n                    const callback = await routes.callback({\n                        body: req.body,\n                        query: req.query,\n                        headers: req.headers,\n                        cookies: req.cookies,\n                        method,\n                        options,\n                        sessionStore\n                    });\n                    if (callback.cookies) cookies.push(...callback.cookies);\n                    return {\n                        ...callback,\n                        cookies\n                    };\n                }\n                break;\n            case \"_log\":\n                {\n                    if (authOptions.logger) {\n                        try {\n                            var _req$body3;\n                            const { code, level, ...metadata } = (_req$body3 = req.body) !== null && _req$body3 !== void 0 ? _req$body3 : {};\n                            _logger.default[level](code, metadata);\n                        } catch (error) {\n                            _logger.default.error(\"LOGGER_ERROR\", error);\n                        }\n                    }\n                    return {};\n                }\n            case \"session\":\n                {\n                    if (options.csrfTokenVerified) {\n                        var _req$body4;\n                        const session = await routes.session({\n                            options,\n                            sessionStore,\n                            newSession: (_req$body4 = req.body) === null || _req$body4 === void 0 ? void 0 : _req$body4.data,\n                            isUpdate: true\n                        });\n                        if (session.cookies) cookies.push(...session.cookies);\n                        return {\n                            ...session,\n                            cookies\n                        };\n                    }\n                    return {\n                        status: 400,\n                        body: {},\n                        cookies\n                    };\n                }\n            default:\n        }\n    }\n    return {\n        status: 400,\n        body: `Error: This action with HTTP ${method} is not supported by NextAuth.js`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLDBIQUE4QztBQUVuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG1CQUFtQixHQUFHRTtBQUV0QixJQUFJQyxVQUFVQyx3QkFBd0JQLG1CQUFPQSxDQUFDLHVFQUFpQjtBQUUvRCxJQUFJUSxnQkFBZ0JSLG1CQUFPQSxDQUFDLHFGQUF3QjtBQUVwRCxJQUFJUyxTQUFTRix3QkFBd0JQLG1CQUFPQSxDQUFDLHFFQUFVO0FBRXZELElBQUlVLFNBQVNYLHVCQUF1QkMsbUJBQU9BLENBQUMsbUVBQVM7QUFFckQsSUFBSVcsUUFBUVgsbUJBQU9BLENBQUMsMkRBQVE7QUFFNUIsSUFBSVksVUFBVVosbUJBQU9BLENBQUMsdUVBQWM7QUFFcEMsSUFBSWEsVUFBVWIsbUJBQU9BLENBQUMsdUVBQWM7QUFFcEMsSUFBSWMsV0FBV2QsbUJBQU9BLENBQUMsb0RBQVE7QUFFL0IsU0FBU2UseUJBQXlCQyxXQUFXO0lBQUksSUFBSSxPQUFPQyxZQUFZLFlBQVksT0FBTztJQUFNLElBQUlDLG9CQUFvQixJQUFJRDtJQUFXLElBQUlFLG1CQUFtQixJQUFJRjtJQUFXLE9BQU8sQ0FBQ0YsMkJBQTJCLFNBQVVDLFdBQVc7UUFBSSxPQUFPQSxjQUFjRyxtQkFBbUJEO0lBQW1CLEdBQUdGO0FBQWM7QUFFdFQsU0FBU1Qsd0JBQXdCYSxHQUFHLEVBQUVKLFdBQVc7SUFBSSxJQUFJLENBQUNBLGVBQWVJLE9BQU9BLElBQUlDLFVBQVUsRUFBRTtRQUFFLE9BQU9EO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRUUsU0FBU0Y7UUFBSTtJQUFHO0lBQUUsSUFBSUcsUUFBUVIseUJBQXlCQztJQUFjLElBQUlPLFNBQVNBLE1BQU1DLEdBQUcsQ0FBQ0osTUFBTTtRQUFFLE9BQU9HLE1BQU1FLEdBQUcsQ0FBQ0w7SUFBTTtJQUFFLElBQUlNLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QjFCLE9BQU9DLGNBQWMsSUFBSUQsT0FBTzJCLHdCQUF3QjtJQUFFLElBQUssSUFBSUMsT0FBT1QsSUFBSztRQUFFLElBQUlTLFFBQVEsYUFBYTVCLE9BQU82QixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixLQUFLUyxNQUFNO1lBQUUsSUFBSUksT0FBT04sd0JBQXdCMUIsT0FBTzJCLHdCQUF3QixDQUFDUixLQUFLUyxPQUFPO1lBQU0sSUFBSUksUUFBU0EsQ0FBQUEsS0FBS1IsR0FBRyxJQUFJUSxLQUFLQyxHQUFHLEdBQUc7Z0JBQUVqQyxPQUFPQyxjQUFjLENBQUN3QixRQUFRRyxLQUFLSTtZQUFPLE9BQU87Z0JBQUVQLE1BQU0sQ0FBQ0csSUFBSSxHQUFHVCxHQUFHLENBQUNTLElBQUk7WUFBRTtRQUFFO0lBQUU7SUFBRUgsT0FBT0osT0FBTyxHQUFHRjtJQUFLLElBQUlHLE9BQU87UUFBRUEsTUFBTVcsR0FBRyxDQUFDZCxLQUFLTTtJQUFTO0lBQUUsT0FBT0E7QUFBUTtBQUVueUIsZUFBZVMsUUFBUUMsR0FBRztJQUN4QixJQUFJO1FBQ0YsT0FBTyxNQUFNQSxJQUFJQyxJQUFJO0lBQ3ZCLEVBQUUsT0FBT0MsU0FBUyxDQUFDO0FBQ3JCO0FBRUEsZUFBZUMsa0JBQWtCSCxHQUFHO0lBQ2xDLElBQUlJO0lBRUosSUFBSUosZUFBZUssU0FBUztRQUMxQixJQUFJQyxrQkFBa0JDLHVCQUF1QkM7UUFFN0MsTUFBTUMsTUFBTSxJQUFJQyxJQUFJVixJQUFJUyxHQUFHO1FBQzNCLE1BQU1FLFdBQVdGLElBQUlHLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLEtBQUtDLEtBQUssQ0FBQztRQUMvQyxNQUFNQyxVQUFVbEQsT0FBT21ELFdBQVcsQ0FBQ2hCLElBQUllLE9BQU87UUFDOUMsTUFBTUUsUUFBUXBELE9BQU9tRCxXQUFXLENBQUNQLElBQUlTLFlBQVk7UUFDakRELE1BQU1OLFFBQVEsR0FBR0E7UUFDakIsT0FBTztZQUNMUSxRQUFRUixRQUFRLENBQUMsRUFBRTtZQUNuQlMsUUFBUXBCLElBQUlvQixNQUFNO1lBQ2xCTDtZQUNBTSxNQUFNLE1BQU10QixRQUFRQztZQUNwQnNCLFNBQVMsQ0FBQyxHQUFHNUMsU0FBUzZDLEtBQUssRUFBRSxDQUFDakIsbUJBQW1CTixJQUFJZSxPQUFPLENBQUMxQixHQUFHLENBQUMsU0FBUSxNQUFPLFFBQVFpQixxQkFBcUIsS0FBSyxJQUFJQSxtQkFBbUI7WUFDeklrQixZQUFZYixRQUFRLENBQUMsRUFBRTtZQUN2QmMsT0FBTyxDQUFDbEIsd0JBQXdCRSxJQUFJUyxZQUFZLENBQUM3QixHQUFHLENBQUMsUUFBTyxNQUFPLFFBQVFrQiwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0JJLFFBQVEsQ0FBQyxFQUFFO1lBQ2pKZSxRQUFRLENBQUMsR0FBR3RELGNBQWN1RCxZQUFZLEVBQUUsQ0FBQ25CLHNCQUFzQk8sT0FBTyxDQUFDLG1CQUFtQixNQUFNLFFBQVFQLHdCQUF3QixLQUFLLElBQUlBLHNCQUFzQk8sUUFBUWEsSUFBSSxFQUFFYixPQUFPLENBQUMsb0JBQW9CO1lBQ3pNRTtRQUNGO0lBQ0Y7SUFFQSxNQUFNLEVBQ0pGLE9BQU8sRUFDUixHQUFHZjtJQUNKLE1BQU00QixPQUFPLENBQUN4Qix1QkFBdUJXLFlBQVksUUFBUUEsWUFBWSxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPLENBQUMsbUJBQW1CLE1BQU0sUUFBUVgseUJBQXlCLEtBQUssSUFBSUEsdUJBQXVCVyxZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUWEsSUFBSTtJQUN2UDVCLElBQUkwQixNQUFNLEdBQUcsQ0FBQyxHQUFHdEQsY0FBY3VELFlBQVksRUFBRUMsTUFBTWIsWUFBWSxRQUFRQSxZQUFZLEtBQUssSUFBSSxLQUFLLElBQUlBLE9BQU8sQ0FBQyxvQkFBb0I7SUFDakksT0FBT2Y7QUFDVDtBQUVBLGVBQWUvQixZQUFZNEQsTUFBTTtJQUMvQixJQUFJQyx1QkFBdUJDLFdBQVdDLGFBQWFDO0lBRW5ELE1BQU0sRUFDSkMsU0FBU0MsV0FBVyxFQUNwQm5DLEtBQUtvQyxlQUFlLEVBQ3JCLEdBQUdQO0lBQ0osTUFBTTdCLE1BQU0sTUFBTUcsa0JBQWtCaUM7SUFDbkMsSUFBR2xFLFFBQVFtRSxTQUFTLEVBQUVGLFlBQVlHLE1BQU0sRUFBRUgsWUFBWUksS0FBSztJQUM1RCxNQUFNQyxrQkFBa0IsQ0FBQyxHQUFHaEUsUUFBUWlFLFlBQVksRUFBRTtRQUNoRFAsU0FBU0M7UUFDVG5DO0lBQ0Y7SUFFQSxJQUFJMEMsTUFBTUMsT0FBTyxDQUFDSCxrQkFBa0I7UUFDbENBLGdCQUFnQkksT0FBTyxDQUFDMUUsUUFBUWdCLE9BQU8sQ0FBQzJELElBQUk7SUFDOUMsT0FBTyxJQUFJTCwyQkFBMkJNLE9BQU87UUFDM0MsSUFBSUMsWUFBWUM7UUFFaEI5RSxRQUFRZ0IsT0FBTyxDQUFDdUMsS0FBSyxDQUFDZSxnQkFBZ0JTLElBQUksRUFBRVQ7UUFFNUMsTUFBTVUsWUFBWTtZQUFDO1lBQVU7WUFBVztZQUFTO1NBQWlCO1FBRWxFLElBQUksQ0FBQ0EsVUFBVUMsUUFBUSxDQUFDbkQsSUFBSW1CLE1BQU0sS0FBS25CLElBQUlvQixNQUFNLEtBQUssT0FBTztZQUMzRCxNQUFNZ0MsVUFBVSxDQUFDLDZGQUE2RixDQUFDO1lBQy9HLE9BQU87Z0JBQ0xDLFFBQVE7Z0JBQ1J0QyxTQUFTO29CQUFDO3dCQUNSdEIsS0FBSzt3QkFDTHpCLE9BQU87b0JBQ1Q7aUJBQUU7Z0JBQ0ZxRCxNQUFNO29CQUNKK0I7Z0JBQ0Y7WUFDRjtRQUNGO1FBRUEsTUFBTSxFQUNKRSxLQUFLLEVBQ0xDLEtBQUssRUFDTixHQUFHcEI7UUFDSixNQUFNcUIsa0JBQWtCLENBQUNGLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNN0IsS0FBSyxLQUFNLEVBQUNzQixhQUFhL0MsSUFBSWlCLEtBQUssTUFBTSxRQUFROEIsZUFBZSxLQUFLLElBQUksS0FBSyxJQUFJLENBQUNDLHdCQUF3QkQsV0FBV1UsV0FBVyxNQUFNLFFBQVFULDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JVLFVBQVUsQ0FBQ0osTUFBTTdCLEtBQUs7UUFFblQsSUFBSSxDQUFFNkIsQ0FBQUEsVUFBVSxRQUFRQSxVQUFVLEtBQUssS0FBS0EsTUFBTTdCLEtBQUssS0FBSytCLGlCQUFpQjtZQUMzRSxJQUFJQSxpQkFBaUI7Z0JBQ25CdEYsUUFBUWdCLE9BQU8sQ0FBQ3VDLEtBQUssQ0FBQyw0QkFBNEIsSUFBSXFCLE1BQU0sQ0FBQyxlQUFlLEVBQUVRLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNN0IsS0FBSyxDQUFDLGtDQUFrQyxDQUFDO1lBQzdLO1lBRUEsTUFBTWtDLFNBQVMsQ0FBQyxHQUFHckYsT0FBT1ksT0FBTyxFQUFFO2dCQUNqQ3FFO1lBQ0Y7WUFDQSxPQUFPSSxPQUFPbEMsS0FBSyxDQUFDO2dCQUNsQkEsT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPO1lBQ0xtQyxVQUFVLENBQUMsRUFBRU4sTUFBTTdCLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQztRQUNoRDtJQUNGO0lBRUEsTUFBTSxFQUNKTixNQUFNLEVBQ05LLFVBQVUsRUFDVkMsS0FBSyxFQUNMTCxTQUFTLEtBQUssRUFDZixHQUFHcEI7SUFDSixNQUFNLEVBQ0prQyxPQUFPLEVBQ1BaLE9BQU8sRUFDUixHQUFHLE1BQU0sQ0FBQyxHQUFHL0MsTUFBTXNGLElBQUksRUFBRTtRQUN4QjFCO1FBQ0FoQjtRQUNBSztRQUNBRSxRQUFRMUIsSUFBSTBCLE1BQU07UUFDbEIrQixhQUFhLENBQUMzQix3QkFBd0IsQ0FBQ0MsWUFBWS9CLElBQUlxQixJQUFJLE1BQU0sUUFBUVUsY0FBYyxLQUFLLElBQUksS0FBSyxJQUFJQSxVQUFVMEIsV0FBVyxNQUFNLFFBQVEzQiwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0IsQ0FBQ0UsY0FBY2hDLElBQUlpQixLQUFLLE1BQU0sUUFBUWUsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVl5QixXQUFXO1FBQ3RTSyxXQUFXLENBQUM3QixhQUFhakMsSUFBSXFCLElBQUksTUFBTSxRQUFRWSxlQUFlLEtBQUssSUFBSSxLQUFLLElBQUlBLFdBQVc2QixTQUFTO1FBQ3BHeEMsU0FBU3RCLElBQUlzQixPQUFPO1FBQ3BCeUMsUUFBUTNDLFdBQVc7SUFDckI7SUFDQSxNQUFNNEMsZUFBZSxJQUFJdkYsUUFBUXdGLFlBQVksQ0FBQy9CLFFBQVFaLE9BQU8sQ0FBQzRDLFlBQVksRUFBRWxFLEtBQUtrQyxRQUFRSSxNQUFNO0lBRS9GLElBQUlsQixXQUFXLE9BQU87UUFDcEIsTUFBTXVDLFNBQVMsQ0FBQyxHQUFHckYsT0FBT1ksT0FBTyxFQUFFO1lBQUUsR0FBR2dELE9BQU87WUFDN0NqQixPQUFPakIsSUFBSWlCLEtBQUs7WUFDaEJLO1FBQ0Y7UUFDQSxNQUFNLEVBQ0pnQyxLQUFLLEVBQ04sR0FBR3BCO1FBRUosT0FBUWY7WUFDTixLQUFLO2dCQUNILE9BQU8sTUFBTTlDLE9BQU84RixTQUFTLENBQUNqQyxRQUFRaUMsU0FBUztZQUVqRCxLQUFLO2dCQUNIO29CQUNFLE1BQU1DLFVBQVUsTUFBTS9GLE9BQU8rRixPQUFPLENBQUM7d0JBQ25DbEM7d0JBQ0E4QjtvQkFDRjtvQkFDQSxJQUFJSSxRQUFROUMsT0FBTyxFQUFFQSxRQUFRK0MsSUFBSSxJQUFJRCxRQUFROUMsT0FBTztvQkFDcEQsT0FBTzt3QkFBRSxHQUFHOEMsT0FBTzt3QkFDakI5QztvQkFDRjtnQkFDRjtZQUVGLEtBQUs7Z0JBQ0gsT0FBTztvQkFDTFAsU0FBUzt3QkFBQzs0QkFDUnRCLEtBQUs7NEJBQ0x6QixPQUFPO3dCQUNUO3FCQUFFO29CQUNGcUQsTUFBTTt3QkFDSnlDLFdBQVc1QixRQUFRNEIsU0FBUztvQkFDOUI7b0JBQ0F4QztnQkFDRjtZQUVGLEtBQUs7Z0JBQ0gsSUFBSWdDLE1BQU1nQixNQUFNLEVBQUU7b0JBQ2hCLElBQUlDLFlBQVksQ0FBQyxFQUFFakIsTUFBTWdCLE1BQU0sQ0FBQyxFQUFFaEIsTUFBTWdCLE1BQU0sQ0FBQ25CLFFBQVEsQ0FBQyxPQUFPLE1BQU0sSUFBSSxZQUFZLEVBQUVxQixtQkFBbUJ0QyxRQUFRdUIsV0FBVyxFQUFFLENBQUM7b0JBQ2hJLElBQUloQyxPQUFPOEMsWUFBWSxDQUFDLEVBQUVBLFVBQVUsT0FBTyxFQUFFQyxtQkFBbUIvQyxPQUFPLENBQUM7b0JBQ3hFLE9BQU87d0JBQ0xtQyxVQUFVVzt3QkFDVmpEO29CQUNGO2dCQUNGO2dCQUVBLE9BQU9xQyxPQUFPYyxNQUFNO1lBRXRCLEtBQUs7Z0JBQ0gsSUFBSW5CLE1BQU1vQixPQUFPLEVBQUUsT0FBTztvQkFDeEJkLFVBQVVOLE1BQU1vQixPQUFPO29CQUN2QnBEO2dCQUNGO2dCQUNBLE9BQU9xQyxPQUFPZ0IsT0FBTztZQUV2QixLQUFLO2dCQUNILElBQUl6QyxRQUFRMEMsUUFBUSxFQUFFO29CQUNwQixNQUFNQyxXQUFXLE1BQU14RyxPQUFPd0csUUFBUSxDQUFDO3dCQUNyQ3hELE1BQU1yQixJQUFJcUIsSUFBSTt3QkFDZEosT0FBT2pCLElBQUlpQixLQUFLO3dCQUNoQkYsU0FBU2YsSUFBSWUsT0FBTzt3QkFDcEJPLFNBQVN0QixJQUFJc0IsT0FBTzt3QkFDcEJGO3dCQUNBYzt3QkFDQThCO29CQUNGO29CQUNBLElBQUlhLFNBQVN2RCxPQUFPLEVBQUVBLFFBQVErQyxJQUFJLElBQUlRLFNBQVN2RCxPQUFPO29CQUN0RCxPQUFPO3dCQUFFLEdBQUd1RCxRQUFRO3dCQUNsQnZEO29CQUNGO2dCQUNGO2dCQUVBO1lBRUYsS0FBSztnQkFDSCxJQUFJZ0MsTUFBTXdCLGFBQWEsRUFBRTtvQkFDdkIsT0FBTzt3QkFDTGxCLFVBQVVOLE1BQU13QixhQUFhO3dCQUM3QnhEO29CQUNGO2dCQUNGO2dCQUVBLE9BQU9xQyxPQUFPbUIsYUFBYTtZQUU3QixLQUFLO2dCQUNILElBQUk7b0JBQUM7b0JBQVU7b0JBQWU7b0JBQWlCO29CQUFzQjtvQkFBc0I7b0JBQVk7b0JBQXlCO29CQUFlO29CQUFxQjtpQkFBa0IsQ0FBQzNCLFFBQVEsQ0FBQzFCLFFBQVE7b0JBQ3RNLE9BQU87d0JBQ0xtQyxVQUFVLENBQUMsRUFBRTFCLFFBQVF6QixHQUFHLENBQUMsY0FBYyxFQUFFZ0IsTUFBTSxDQUFDO3dCQUNoREg7b0JBQ0Y7Z0JBQ0Y7Z0JBRUEsSUFBSWdDLE1BQU03QixLQUFLLEVBQUU7b0JBQ2YsT0FBTzt3QkFDTG1DLFVBQVUsQ0FBQyxFQUFFTixNQUFNN0IsS0FBSyxDQUFDLEVBQUU2QixNQUFNN0IsS0FBSyxDQUFDMEIsUUFBUSxDQUFDLE9BQU8sTUFBTSxJQUFJLE1BQU0sRUFBRTFCLE1BQU0sQ0FBQzt3QkFDaEZIO29CQUNGO2dCQUNGO2dCQUVBLE9BQU9xQyxPQUFPbEMsS0FBSyxDQUFDO29CQUNsQkEsT0FBT0E7Z0JBQ1Q7WUFFRjtRQUNGO0lBQ0YsT0FBTyxJQUFJTCxXQUFXLFFBQVE7UUFDNUIsT0FBUUQ7WUFDTixLQUFLO2dCQUNILElBQUllLFFBQVE2QyxpQkFBaUIsSUFBSTdDLFFBQVEwQyxRQUFRLEVBQUU7b0JBQ2pELE1BQU1ILFNBQVMsTUFBTXBHLE9BQU9vRyxNQUFNLENBQUM7d0JBQ2pDeEQsT0FBT2pCLElBQUlpQixLQUFLO3dCQUNoQkksTUFBTXJCLElBQUlxQixJQUFJO3dCQUNkYTtvQkFDRjtvQkFDQSxJQUFJdUMsT0FBT25ELE9BQU8sRUFBRUEsUUFBUStDLElBQUksSUFBSUksT0FBT25ELE9BQU87b0JBQ2xELE9BQU87d0JBQUUsR0FBR21ELE1BQU07d0JBQ2hCbkQ7b0JBQ0Y7Z0JBQ0Y7Z0JBRUEsT0FBTztvQkFDTHNDLFVBQVUsQ0FBQyxFQUFFMUIsUUFBUXpCLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQztvQkFDM0NhO2dCQUNGO1lBRUYsS0FBSztnQkFDSCxJQUFJWSxRQUFRNkMsaUJBQWlCLEVBQUU7b0JBQzdCLE1BQU1KLFVBQVUsTUFBTXRHLE9BQU9zRyxPQUFPLENBQUM7d0JBQ25DekM7d0JBQ0E4QjtvQkFDRjtvQkFDQSxJQUFJVyxRQUFRckQsT0FBTyxFQUFFQSxRQUFRK0MsSUFBSSxJQUFJTSxRQUFRckQsT0FBTztvQkFDcEQsT0FBTzt3QkFBRSxHQUFHcUQsT0FBTzt3QkFDakJyRDtvQkFDRjtnQkFDRjtnQkFFQSxPQUFPO29CQUNMc0MsVUFBVSxDQUFDLEVBQUUxQixRQUFRekIsR0FBRyxDQUFDLGtCQUFrQixDQUFDO29CQUM1Q2E7Z0JBQ0Y7WUFFRixLQUFLO2dCQUNILElBQUlZLFFBQVEwQyxRQUFRLEVBQUU7b0JBQ3BCLElBQUkxQyxRQUFRMEMsUUFBUSxDQUFDSSxJQUFJLEtBQUssaUJBQWlCLENBQUM5QyxRQUFRNkMsaUJBQWlCLEVBQUU7d0JBQ3pFLE9BQU87NEJBQ0xuQixVQUFVLENBQUMsRUFBRTFCLFFBQVF6QixHQUFHLENBQUMsaUJBQWlCLENBQUM7NEJBQzNDYTt3QkFDRjtvQkFDRjtvQkFFQSxNQUFNdUQsV0FBVyxNQUFNeEcsT0FBT3dHLFFBQVEsQ0FBQzt3QkFDckN4RCxNQUFNckIsSUFBSXFCLElBQUk7d0JBQ2RKLE9BQU9qQixJQUFJaUIsS0FBSzt3QkFDaEJGLFNBQVNmLElBQUllLE9BQU87d0JBQ3BCTyxTQUFTdEIsSUFBSXNCLE9BQU87d0JBQ3BCRjt3QkFDQWM7d0JBQ0E4QjtvQkFDRjtvQkFDQSxJQUFJYSxTQUFTdkQsT0FBTyxFQUFFQSxRQUFRK0MsSUFBSSxJQUFJUSxTQUFTdkQsT0FBTztvQkFDdEQsT0FBTzt3QkFBRSxHQUFHdUQsUUFBUTt3QkFDbEJ2RDtvQkFDRjtnQkFDRjtnQkFFQTtZQUVGLEtBQUs7Z0JBQ0g7b0JBQ0UsSUFBSWEsWUFBWUcsTUFBTSxFQUFFO3dCQUN0QixJQUFJOzRCQUNGLElBQUkyQzs0QkFFSixNQUFNLEVBQ0poQyxJQUFJLEVBQ0ppQyxLQUFLLEVBQ0wsR0FBR0MsVUFDSixHQUFHLENBQUNGLGFBQWFqRixJQUFJcUIsSUFBSSxNQUFNLFFBQVE0RCxlQUFlLEtBQUssSUFBSUEsYUFBYSxDQUFDOzRCQUU5RS9HLFFBQVFnQixPQUFPLENBQUNnRyxNQUFNLENBQUNqQyxNQUFNa0M7d0JBQy9CLEVBQUUsT0FBTzFELE9BQU87NEJBQ2R2RCxRQUFRZ0IsT0FBTyxDQUFDdUMsS0FBSyxDQUFDLGdCQUFnQkE7d0JBQ3hDO29CQUNGO29CQUVBLE9BQU8sQ0FBQztnQkFDVjtZQUVGLEtBQUs7Z0JBQ0g7b0JBQ0UsSUFBSVMsUUFBUTZDLGlCQUFpQixFQUFFO3dCQUM3QixJQUFJSzt3QkFFSixNQUFNaEIsVUFBVSxNQUFNL0YsT0FBTytGLE9BQU8sQ0FBQzs0QkFDbkNsQzs0QkFDQThCOzRCQUNBcUIsWUFBWSxDQUFDRCxhQUFhcEYsSUFBSXFCLElBQUksTUFBTSxRQUFRK0QsZUFBZSxLQUFLLElBQUksS0FBSyxJQUFJQSxXQUFXRSxJQUFJOzRCQUNoR0MsVUFBVTt3QkFDWjt3QkFDQSxJQUFJbkIsUUFBUTlDLE9BQU8sRUFBRUEsUUFBUStDLElBQUksSUFBSUQsUUFBUTlDLE9BQU87d0JBQ3BELE9BQU87NEJBQUUsR0FBRzhDLE9BQU87NEJBQ2pCOUM7d0JBQ0Y7b0JBQ0Y7b0JBRUEsT0FBTzt3QkFDTCtCLFFBQVE7d0JBQ1JoQyxNQUFNLENBQUM7d0JBQ1BDO29CQUNGO2dCQUNGO1lBRUY7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUNMK0IsUUFBUTtRQUNSaEMsTUFBTSxDQUFDLDZCQUE2QixFQUFFRCxPQUFPLGdDQUFnQyxDQUFDO0lBQ2hGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvaW5kZXguanM/NTAyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkF1dGhIYW5kbGVyID0gQXV0aEhhbmRsZXI7XG5cbnZhciBfbG9nZ2VyID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4uL3V0aWxzL2xvZ2dlclwiKSk7XG5cbnZhciBfZGV0ZWN0T3JpZ2luID0gcmVxdWlyZShcIi4uL3V0aWxzL2RldGVjdC1vcmlnaW5cIik7XG5cbnZhciByb3V0ZXMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9yb3V0ZXNcIikpO1xuXG52YXIgX3BhZ2VzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wYWdlc1wiKSk7XG5cbnZhciBfaW5pdCA9IHJlcXVpcmUoXCIuL2luaXRcIik7XG5cbnZhciBfYXNzZXJ0ID0gcmVxdWlyZShcIi4vbGliL2Fzc2VydFwiKTtcblxudmFyIF9jb29raWUgPSByZXF1aXJlKFwiLi9saWIvY29va2llXCIpO1xuXG52YXIgX2Nvb2tpZTIgPSByZXF1aXJlKFwiY29va2llXCIpO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHsgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IGRlZmF1bHQ6IG9iaiB9OyB9IHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKGtleSAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuXG5hc3luYyBmdW5jdGlvbiBnZXRCb2R5KHJlcSkge1xuICB0cnkge1xuICAgIHJldHVybiBhd2FpdCByZXEuanNvbigpO1xuICB9IGNhdGNoIChfdW51c2VkKSB7fVxufVxuXG5hc3luYyBmdW5jdGlvbiB0b0ludGVybmFsUmVxdWVzdChyZXEpIHtcbiAgdmFyIF9oZWFkZXJzJHhGb3J3YXJkZWQyO1xuXG4gIGlmIChyZXEgaW5zdGFuY2VvZiBSZXF1ZXN0KSB7XG4gICAgdmFyIF9yZXEkaGVhZGVycyRnZXQsIF91cmwkc2VhcmNoUGFyYW1zJGdldCwgX2hlYWRlcnMkeEZvcndhcmRlZDtcblxuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxLnVybCk7XG4gICAgY29uc3QgbmV4dGF1dGggPSB1cmwucGF0aG5hbWUuc3BsaXQoXCIvXCIpLnNsaWNlKDMpO1xuICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuZnJvbUVudHJpZXMocmVxLmhlYWRlcnMpO1xuICAgIGNvbnN0IHF1ZXJ5ID0gT2JqZWN0LmZyb21FbnRyaWVzKHVybC5zZWFyY2hQYXJhbXMpO1xuICAgIHF1ZXJ5Lm5leHRhdXRoID0gbmV4dGF1dGg7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGlvbjogbmV4dGF1dGhbMF0sXG4gICAgICBtZXRob2Q6IHJlcS5tZXRob2QsXG4gICAgICBoZWFkZXJzLFxuICAgICAgYm9keTogYXdhaXQgZ2V0Qm9keShyZXEpLFxuICAgICAgY29va2llczogKDAsIF9jb29raWUyLnBhcnNlKSgoX3JlcSRoZWFkZXJzJGdldCA9IHJlcS5oZWFkZXJzLmdldChcImNvb2tpZVwiKSkgIT09IG51bGwgJiYgX3JlcSRoZWFkZXJzJGdldCAhPT0gdm9pZCAwID8gX3JlcSRoZWFkZXJzJGdldCA6IFwiXCIpLFxuICAgICAgcHJvdmlkZXJJZDogbmV4dGF1dGhbMV0sXG4gICAgICBlcnJvcjogKF91cmwkc2VhcmNoUGFyYW1zJGdldCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KFwiZXJyb3JcIikpICE9PSBudWxsICYmIF91cmwkc2VhcmNoUGFyYW1zJGdldCAhPT0gdm9pZCAwID8gX3VybCRzZWFyY2hQYXJhbXMkZ2V0IDogbmV4dGF1dGhbMV0sXG4gICAgICBvcmlnaW46ICgwLCBfZGV0ZWN0T3JpZ2luLmRldGVjdE9yaWdpbikoKF9oZWFkZXJzJHhGb3J3YXJkZWQgPSBoZWFkZXJzW1wieC1mb3J3YXJkZWQtaG9zdFwiXSkgIT09IG51bGwgJiYgX2hlYWRlcnMkeEZvcndhcmRlZCAhPT0gdm9pZCAwID8gX2hlYWRlcnMkeEZvcndhcmRlZCA6IGhlYWRlcnMuaG9zdCwgaGVhZGVyc1tcIngtZm9yd2FyZGVkLXByb3RvXCJdKSxcbiAgICAgIHF1ZXJ5XG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IHtcbiAgICBoZWFkZXJzXG4gIH0gPSByZXE7XG4gIGNvbnN0IGhvc3QgPSAoX2hlYWRlcnMkeEZvcndhcmRlZDIgPSBoZWFkZXJzID09PSBudWxsIHx8IGhlYWRlcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGhlYWRlcnNbXCJ4LWZvcndhcmRlZC1ob3N0XCJdKSAhPT0gbnVsbCAmJiBfaGVhZGVycyR4Rm9yd2FyZGVkMiAhPT0gdm9pZCAwID8gX2hlYWRlcnMkeEZvcndhcmRlZDIgOiBoZWFkZXJzID09PSBudWxsIHx8IGhlYWRlcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGhlYWRlcnMuaG9zdDtcbiAgcmVxLm9yaWdpbiA9ICgwLCBfZGV0ZWN0T3JpZ2luLmRldGVjdE9yaWdpbikoaG9zdCwgaGVhZGVycyA9PT0gbnVsbCB8fCBoZWFkZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBoZWFkZXJzW1wieC1mb3J3YXJkZWQtcHJvdG9cIl0pO1xuICByZXR1cm4gcmVxO1xufVxuXG5hc3luYyBmdW5jdGlvbiBBdXRoSGFuZGxlcihwYXJhbXMpIHtcbiAgdmFyIF9yZXEkYm9keSRjYWxsYmFja1VybCwgX3JlcSRib2R5LCBfcmVxJHF1ZXJ5MiwgX3JlcSRib2R5MjtcblxuICBjb25zdCB7XG4gICAgb3B0aW9uczogYXV0aE9wdGlvbnMsXG4gICAgcmVxOiBpbmNvbWluZ1JlcXVlc3RcbiAgfSA9IHBhcmFtcztcbiAgY29uc3QgcmVxID0gYXdhaXQgdG9JbnRlcm5hbFJlcXVlc3QoaW5jb21pbmdSZXF1ZXN0KTtcbiAgKDAsIF9sb2dnZXIuc2V0TG9nZ2VyKShhdXRoT3B0aW9ucy5sb2dnZXIsIGF1dGhPcHRpb25zLmRlYnVnKTtcbiAgY29uc3QgYXNzZXJ0aW9uUmVzdWx0ID0gKDAsIF9hc3NlcnQuYXNzZXJ0Q29uZmlnKSh7XG4gICAgb3B0aW9uczogYXV0aE9wdGlvbnMsXG4gICAgcmVxXG4gIH0pO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGFzc2VydGlvblJlc3VsdCkpIHtcbiAgICBhc3NlcnRpb25SZXN1bHQuZm9yRWFjaChfbG9nZ2VyLmRlZmF1bHQud2Fybik7XG4gIH0gZWxzZSBpZiAoYXNzZXJ0aW9uUmVzdWx0IGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICB2YXIgX3JlcSRxdWVyeSwgX3JlcSRxdWVyeSRjYWxsYmFja1VyO1xuXG4gICAgX2xvZ2dlci5kZWZhdWx0LmVycm9yKGFzc2VydGlvblJlc3VsdC5jb2RlLCBhc3NlcnRpb25SZXN1bHQpO1xuXG4gICAgY29uc3QgaHRtbFBhZ2VzID0gW1wic2lnbmluXCIsIFwic2lnbm91dFwiLCBcImVycm9yXCIsIFwidmVyaWZ5LXJlcXVlc3RcIl07XG5cbiAgICBpZiAoIWh0bWxQYWdlcy5pbmNsdWRlcyhyZXEuYWN0aW9uKSB8fCByZXEubWV0aG9kICE9PSBcIkdFVFwiKSB7XG4gICAgICBjb25zdCBtZXNzYWdlID0gYFRoZXJlIGlzIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIgY29uZmlndXJhdGlvbi4gQ2hlY2sgdGhlIHNlcnZlciBsb2dzIGZvciBtb3JlIGluZm9ybWF0aW9uLmA7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgaGVhZGVyczogW3tcbiAgICAgICAgICBrZXk6IFwiQ29udGVudC1UeXBlXCIsXG4gICAgICAgICAgdmFsdWU6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgIH1dLFxuICAgICAgICBib2R5OiB7XG4gICAgICAgICAgbWVzc2FnZVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IHtcbiAgICAgIHBhZ2VzLFxuICAgICAgdGhlbWVcbiAgICB9ID0gYXV0aE9wdGlvbnM7XG4gICAgY29uc3QgYXV0aE9uRXJyb3JQYWdlID0gKHBhZ2VzID09PSBudWxsIHx8IHBhZ2VzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYWdlcy5lcnJvcikgJiYgKChfcmVxJHF1ZXJ5ID0gcmVxLnF1ZXJ5KSA9PT0gbnVsbCB8fCBfcmVxJHF1ZXJ5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3JlcSRxdWVyeSRjYWxsYmFja1VyID0gX3JlcSRxdWVyeS5jYWxsYmFja1VybCkgPT09IG51bGwgfHwgX3JlcSRxdWVyeSRjYWxsYmFja1VyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVxJHF1ZXJ5JGNhbGxiYWNrVXIuc3RhcnRzV2l0aChwYWdlcy5lcnJvcikpO1xuXG4gICAgaWYgKCEocGFnZXMgIT09IG51bGwgJiYgcGFnZXMgIT09IHZvaWQgMCAmJiBwYWdlcy5lcnJvcikgfHwgYXV0aE9uRXJyb3JQYWdlKSB7XG4gICAgICBpZiAoYXV0aE9uRXJyb3JQYWdlKSB7XG4gICAgICAgIF9sb2dnZXIuZGVmYXVsdC5lcnJvcihcIkFVVEhfT05fRVJST1JfUEFHRV9FUlJPUlwiLCBuZXcgRXJyb3IoYFRoZSBlcnJvciBwYWdlICR7cGFnZXMgPT09IG51bGwgfHwgcGFnZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhZ2VzLmVycm9yfSBzaG91bGQgbm90IHJlcXVpcmUgYXV0aGVudGljYXRpb25gKSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlbmRlciA9ICgwLCBfcGFnZXMuZGVmYXVsdCkoe1xuICAgICAgICB0aGVtZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVuZGVyLmVycm9yKHtcbiAgICAgICAgZXJyb3I6IFwiY29uZmlndXJhdGlvblwiXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcmVkaXJlY3Q6IGAke3BhZ2VzLmVycm9yfT9lcnJvcj1Db25maWd1cmF0aW9uYFxuICAgIH07XG4gIH1cblxuICBjb25zdCB7XG4gICAgYWN0aW9uLFxuICAgIHByb3ZpZGVySWQsXG4gICAgZXJyb3IsXG4gICAgbWV0aG9kID0gXCJHRVRcIlxuICB9ID0gcmVxO1xuICBjb25zdCB7XG4gICAgb3B0aW9ucyxcbiAgICBjb29raWVzXG4gIH0gPSBhd2FpdCAoMCwgX2luaXQuaW5pdCkoe1xuICAgIGF1dGhPcHRpb25zLFxuICAgIGFjdGlvbixcbiAgICBwcm92aWRlcklkLFxuICAgIG9yaWdpbjogcmVxLm9yaWdpbixcbiAgICBjYWxsYmFja1VybDogKF9yZXEkYm9keSRjYWxsYmFja1VybCA9IChfcmVxJGJvZHkgPSByZXEuYm9keSkgPT09IG51bGwgfHwgX3JlcSRib2R5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVxJGJvZHkuY2FsbGJhY2tVcmwpICE9PSBudWxsICYmIF9yZXEkYm9keSRjYWxsYmFja1VybCAhPT0gdm9pZCAwID8gX3JlcSRib2R5JGNhbGxiYWNrVXJsIDogKF9yZXEkcXVlcnkyID0gcmVxLnF1ZXJ5KSA9PT0gbnVsbCB8fCBfcmVxJHF1ZXJ5MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlcSRxdWVyeTIuY2FsbGJhY2tVcmwsXG4gICAgY3NyZlRva2VuOiAoX3JlcSRib2R5MiA9IHJlcS5ib2R5KSA9PT0gbnVsbCB8fCBfcmVxJGJvZHkyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVxJGJvZHkyLmNzcmZUb2tlbixcbiAgICBjb29raWVzOiByZXEuY29va2llcyxcbiAgICBpc1Bvc3Q6IG1ldGhvZCA9PT0gXCJQT1NUXCJcbiAgfSk7XG4gIGNvbnN0IHNlc3Npb25TdG9yZSA9IG5ldyBfY29va2llLlNlc3Npb25TdG9yZShvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLCByZXEsIG9wdGlvbnMubG9nZ2VyKTtcblxuICBpZiAobWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgY29uc3QgcmVuZGVyID0gKDAsIF9wYWdlcy5kZWZhdWx0KSh7IC4uLm9wdGlvbnMsXG4gICAgICBxdWVyeTogcmVxLnF1ZXJ5LFxuICAgICAgY29va2llc1xuICAgIH0pO1xuICAgIGNvbnN0IHtcbiAgICAgIHBhZ2VzXG4gICAgfSA9IG9wdGlvbnM7XG5cbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgY2FzZSBcInByb3ZpZGVyc1wiOlxuICAgICAgICByZXR1cm4gYXdhaXQgcm91dGVzLnByb3ZpZGVycyhvcHRpb25zLnByb3ZpZGVycyk7XG5cbiAgICAgIGNhc2UgXCJzZXNzaW9uXCI6XG4gICAgICAgIHtcbiAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgcm91dGVzLnNlc3Npb24oe1xuICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgIHNlc3Npb25TdG9yZVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmIChzZXNzaW9uLmNvb2tpZXMpIGNvb2tpZXMucHVzaCguLi5zZXNzaW9uLmNvb2tpZXMpO1xuICAgICAgICAgIHJldHVybiB7IC4uLnNlc3Npb24sXG4gICAgICAgICAgICBjb29raWVzXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICBjYXNlIFwiY3NyZlwiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhlYWRlcnM6IFt7XG4gICAgICAgICAgICBrZXk6IFwiQ29udGVudC1UeXBlXCIsXG4gICAgICAgICAgICB2YWx1ZTogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBib2R5OiB7XG4gICAgICAgICAgICBjc3JmVG9rZW46IG9wdGlvbnMuY3NyZlRva2VuXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb29raWVzXG4gICAgICAgIH07XG5cbiAgICAgIGNhc2UgXCJzaWduaW5cIjpcbiAgICAgICAgaWYgKHBhZ2VzLnNpZ25Jbikge1xuICAgICAgICAgIGxldCBzaWduaW5VcmwgPSBgJHtwYWdlcy5zaWduSW59JHtwYWdlcy5zaWduSW4uaW5jbHVkZXMoXCI/XCIpID8gXCImXCIgOiBcIj9cIn1jYWxsYmFja1VybD0ke2VuY29kZVVSSUNvbXBvbmVudChvcHRpb25zLmNhbGxiYWNrVXJsKX1gO1xuICAgICAgICAgIGlmIChlcnJvcikgc2lnbmluVXJsID0gYCR7c2lnbmluVXJsfSZlcnJvcj0ke2VuY29kZVVSSUNvbXBvbmVudChlcnJvcil9YDtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVkaXJlY3Q6IHNpZ25pblVybCxcbiAgICAgICAgICAgIGNvb2tpZXNcbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlbmRlci5zaWduaW4oKTtcblxuICAgICAgY2FzZSBcInNpZ25vdXRcIjpcbiAgICAgICAgaWYgKHBhZ2VzLnNpZ25PdXQpIHJldHVybiB7XG4gICAgICAgICAgcmVkaXJlY3Q6IHBhZ2VzLnNpZ25PdXQsXG4gICAgICAgICAgY29va2llc1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcmVuZGVyLnNpZ25vdXQoKTtcblxuICAgICAgY2FzZSBcImNhbGxiYWNrXCI6XG4gICAgICAgIGlmIChvcHRpb25zLnByb3ZpZGVyKSB7XG4gICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSBhd2FpdCByb3V0ZXMuY2FsbGJhY2soe1xuICAgICAgICAgICAgYm9keTogcmVxLmJvZHksXG4gICAgICAgICAgICBxdWVyeTogcmVxLnF1ZXJ5LFxuICAgICAgICAgICAgaGVhZGVyczogcmVxLmhlYWRlcnMsXG4gICAgICAgICAgICBjb29raWVzOiByZXEuY29va2llcyxcbiAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmVcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAoY2FsbGJhY2suY29va2llcykgY29va2llcy5wdXNoKC4uLmNhbGxiYWNrLmNvb2tpZXMpO1xuICAgICAgICAgIHJldHVybiB7IC4uLmNhbGxiYWNrLFxuICAgICAgICAgICAgY29va2llc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcInZlcmlmeS1yZXF1ZXN0XCI6XG4gICAgICAgIGlmIChwYWdlcy52ZXJpZnlSZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZGlyZWN0OiBwYWdlcy52ZXJpZnlSZXF1ZXN0LFxuICAgICAgICAgICAgY29va2llc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVuZGVyLnZlcmlmeVJlcXVlc3QoKTtcblxuICAgICAgY2FzZSBcImVycm9yXCI6XG4gICAgICAgIGlmIChbXCJTaWduaW5cIiwgXCJPQXV0aFNpZ25pblwiLCBcIk9BdXRoQ2FsbGJhY2tcIiwgXCJPQXV0aENyZWF0ZUFjY291bnRcIiwgXCJFbWFpbENyZWF0ZUFjY291bnRcIiwgXCJDYWxsYmFja1wiLCBcIk9BdXRoQWNjb3VudE5vdExpbmtlZFwiLCBcIkVtYWlsU2lnbmluXCIsIFwiQ3JlZGVudGlhbHNTaWduaW5cIiwgXCJTZXNzaW9uUmVxdWlyZWRcIl0uaW5jbHVkZXMoZXJyb3IpKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZGlyZWN0OiBgJHtvcHRpb25zLnVybH0vc2lnbmluP2Vycm9yPSR7ZXJyb3J9YCxcbiAgICAgICAgICAgIGNvb2tpZXNcbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhZ2VzLmVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZGlyZWN0OiBgJHtwYWdlcy5lcnJvcn0ke3BhZ2VzLmVycm9yLmluY2x1ZGVzKFwiP1wiKSA/IFwiJlwiIDogXCI/XCJ9ZXJyb3I9JHtlcnJvcn1gLFxuICAgICAgICAgICAgY29va2llc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVuZGVyLmVycm9yKHtcbiAgICAgICAgICBlcnJvcjogZXJyb3JcbiAgICAgICAgfSk7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgfVxuICB9IGVsc2UgaWYgKG1ldGhvZCA9PT0gXCJQT1NUXCIpIHtcbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgY2FzZSBcInNpZ25pblwiOlxuICAgICAgICBpZiAob3B0aW9ucy5jc3JmVG9rZW5WZXJpZmllZCAmJiBvcHRpb25zLnByb3ZpZGVyKSB7XG4gICAgICAgICAgY29uc3Qgc2lnbmluID0gYXdhaXQgcm91dGVzLnNpZ25pbih7XG4gICAgICAgICAgICBxdWVyeTogcmVxLnF1ZXJ5LFxuICAgICAgICAgICAgYm9keTogcmVxLmJvZHksXG4gICAgICAgICAgICBvcHRpb25zXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgaWYgKHNpZ25pbi5jb29raWVzKSBjb29raWVzLnB1c2goLi4uc2lnbmluLmNvb2tpZXMpO1xuICAgICAgICAgIHJldHVybiB7IC4uLnNpZ25pbixcbiAgICAgICAgICAgIGNvb2tpZXNcbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICByZWRpcmVjdDogYCR7b3B0aW9ucy51cmx9L3NpZ25pbj9jc3JmPXRydWVgLFxuICAgICAgICAgIGNvb2tpZXNcbiAgICAgICAgfTtcblxuICAgICAgY2FzZSBcInNpZ25vdXRcIjpcbiAgICAgICAgaWYgKG9wdGlvbnMuY3NyZlRva2VuVmVyaWZpZWQpIHtcbiAgICAgICAgICBjb25zdCBzaWdub3V0ID0gYXdhaXQgcm91dGVzLnNpZ25vdXQoe1xuICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgIHNlc3Npb25TdG9yZVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmIChzaWdub3V0LmNvb2tpZXMpIGNvb2tpZXMucHVzaCguLi5zaWdub3V0LmNvb2tpZXMpO1xuICAgICAgICAgIHJldHVybiB7IC4uLnNpZ25vdXQsXG4gICAgICAgICAgICBjb29raWVzXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcmVkaXJlY3Q6IGAke29wdGlvbnMudXJsfS9zaWdub3V0P2NzcmY9dHJ1ZWAsXG4gICAgICAgICAgY29va2llc1xuICAgICAgICB9O1xuXG4gICAgICBjYXNlIFwiY2FsbGJhY2tcIjpcbiAgICAgICAgaWYgKG9wdGlvbnMucHJvdmlkZXIpIHtcbiAgICAgICAgICBpZiAob3B0aW9ucy5wcm92aWRlci50eXBlID09PSBcImNyZWRlbnRpYWxzXCIgJiYgIW9wdGlvbnMuY3NyZlRva2VuVmVyaWZpZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHJlZGlyZWN0OiBgJHtvcHRpb25zLnVybH0vc2lnbmluP2NzcmY9dHJ1ZWAsXG4gICAgICAgICAgICAgIGNvb2tpZXNcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSBhd2FpdCByb3V0ZXMuY2FsbGJhY2soe1xuICAgICAgICAgICAgYm9keTogcmVxLmJvZHksXG4gICAgICAgICAgICBxdWVyeTogcmVxLnF1ZXJ5LFxuICAgICAgICAgICAgaGVhZGVyczogcmVxLmhlYWRlcnMsXG4gICAgICAgICAgICBjb29raWVzOiByZXEuY29va2llcyxcbiAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmVcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAoY2FsbGJhY2suY29va2llcykgY29va2llcy5wdXNoKC4uLmNhbGxiYWNrLmNvb2tpZXMpO1xuICAgICAgICAgIHJldHVybiB7IC4uLmNhbGxiYWNrLFxuICAgICAgICAgICAgY29va2llc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcIl9sb2dcIjpcbiAgICAgICAge1xuICAgICAgICAgIGlmIChhdXRoT3B0aW9ucy5sb2dnZXIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHZhciBfcmVxJGJvZHkzO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICBjb2RlLFxuICAgICAgICAgICAgICAgIGxldmVsLFxuICAgICAgICAgICAgICAgIC4uLm1ldGFkYXRhXG4gICAgICAgICAgICAgIH0gPSAoX3JlcSRib2R5MyA9IHJlcS5ib2R5KSAhPT0gbnVsbCAmJiBfcmVxJGJvZHkzICE9PSB2b2lkIDAgPyBfcmVxJGJvZHkzIDoge307XG5cbiAgICAgICAgICAgICAgX2xvZ2dlci5kZWZhdWx0W2xldmVsXShjb2RlLCBtZXRhZGF0YSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICBfbG9nZ2VyLmRlZmF1bHQuZXJyb3IoXCJMT0dHRVJfRVJST1JcIiwgZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfVxuXG4gICAgICBjYXNlIFwic2Vzc2lvblwiOlxuICAgICAgICB7XG4gICAgICAgICAgaWYgKG9wdGlvbnMuY3NyZlRva2VuVmVyaWZpZWQpIHtcbiAgICAgICAgICAgIHZhciBfcmVxJGJvZHk0O1xuXG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgcm91dGVzLnNlc3Npb24oe1xuICAgICAgICAgICAgICBvcHRpb25zLFxuICAgICAgICAgICAgICBzZXNzaW9uU3RvcmUsXG4gICAgICAgICAgICAgIG5ld1Nlc3Npb246IChfcmVxJGJvZHk0ID0gcmVxLmJvZHkpID09PSBudWxsIHx8IF9yZXEkYm9keTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXEkYm9keTQuZGF0YSxcbiAgICAgICAgICAgICAgaXNVcGRhdGU6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHNlc3Npb24uY29va2llcykgY29va2llcy5wdXNoKC4uLnNlc3Npb24uY29va2llcyk7XG4gICAgICAgICAgICByZXR1cm4geyAuLi5zZXNzaW9uLFxuICAgICAgICAgICAgICBjb29raWVzXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICAgIGJvZHk6IHt9LFxuICAgICAgICAgICAgY29va2llc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgZGVmYXVsdDpcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHN0YXR1czogNDAwLFxuICAgIGJvZHk6IGBFcnJvcjogVGhpcyBhY3Rpb24gd2l0aCBIVFRQICR7bWV0aG9kfSBpcyBub3Qgc3VwcG9ydGVkIGJ5IE5leHRBdXRoLmpzYFxuICB9O1xufSJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQXV0aEhhbmRsZXIiLCJfbG9nZ2VyIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZGV0ZWN0T3JpZ2luIiwicm91dGVzIiwiX3BhZ2VzIiwiX2luaXQiLCJfYXNzZXJ0IiwiX2Nvb2tpZSIsIl9jb29raWUyIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJnZXRCb2R5IiwicmVxIiwianNvbiIsIl91bnVzZWQiLCJ0b0ludGVybmFsUmVxdWVzdCIsIl9oZWFkZXJzJHhGb3J3YXJkZWQyIiwiUmVxdWVzdCIsIl9yZXEkaGVhZGVycyRnZXQiLCJfdXJsJHNlYXJjaFBhcmFtcyRnZXQiLCJfaGVhZGVycyR4Rm9yd2FyZGVkIiwidXJsIiwiVVJMIiwibmV4dGF1dGgiLCJwYXRobmFtZSIsInNwbGl0Iiwic2xpY2UiLCJoZWFkZXJzIiwiZnJvbUVudHJpZXMiLCJxdWVyeSIsInNlYXJjaFBhcmFtcyIsImFjdGlvbiIsIm1ldGhvZCIsImJvZHkiLCJjb29raWVzIiwicGFyc2UiLCJwcm92aWRlcklkIiwiZXJyb3IiLCJvcmlnaW4iLCJkZXRlY3RPcmlnaW4iLCJob3N0IiwicGFyYW1zIiwiX3JlcSRib2R5JGNhbGxiYWNrVXJsIiwiX3JlcSRib2R5IiwiX3JlcSRxdWVyeTIiLCJfcmVxJGJvZHkyIiwib3B0aW9ucyIsImF1dGhPcHRpb25zIiwiaW5jb21pbmdSZXF1ZXN0Iiwic2V0TG9nZ2VyIiwibG9nZ2VyIiwiZGVidWciLCJhc3NlcnRpb25SZXN1bHQiLCJhc3NlcnRDb25maWciLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwid2FybiIsIkVycm9yIiwiX3JlcSRxdWVyeSIsIl9yZXEkcXVlcnkkY2FsbGJhY2tVciIsImNvZGUiLCJodG1sUGFnZXMiLCJpbmNsdWRlcyIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJwYWdlcyIsInRoZW1lIiwiYXV0aE9uRXJyb3JQYWdlIiwiY2FsbGJhY2tVcmwiLCJzdGFydHNXaXRoIiwicmVuZGVyIiwicmVkaXJlY3QiLCJpbml0IiwiY3NyZlRva2VuIiwiaXNQb3N0Iiwic2Vzc2lvblN0b3JlIiwiU2Vzc2lvblN0b3JlIiwic2Vzc2lvblRva2VuIiwicHJvdmlkZXJzIiwic2Vzc2lvbiIsInB1c2giLCJzaWduSW4iLCJzaWduaW5VcmwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzaWduaW4iLCJzaWduT3V0Iiwic2lnbm91dCIsInByb3ZpZGVyIiwiY2FsbGJhY2siLCJ2ZXJpZnlSZXF1ZXN0IiwiY3NyZlRva2VuVmVyaWZpZWQiLCJ0eXBlIiwiX3JlcSRib2R5MyIsImxldmVsIiwibWV0YWRhdGEiLCJfcmVxJGJvZHk0IiwibmV3U2Vzc2lvbiIsImRhdGEiLCJpc1VwZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/init.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/core/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.init = init;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _logger = _interopRequireDefault(__webpack_require__(/*! ../utils/logger */ \"(rsc)/./node_modules/next-auth/utils/logger.js\"));\nvar _errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./lib/providers */ \"(rsc)/./node_modules/next-auth/core/lib/providers.js\"));\nvar _utils = __webpack_require__(/*! ./lib/utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nvar cookie = _interopRequireWildcard(__webpack_require__(/*! ./lib/cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\"));\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\"));\nvar _defaultCallbacks = __webpack_require__(/*! ./lib/default-callbacks */ \"(rsc)/./node_modules/next-auth/core/lib/default-callbacks.js\");\nvar _csrfToken = __webpack_require__(/*! ./lib/csrf-token */ \"(rsc)/./node_modules/next-auth/core/lib/csrf-token.js\");\nvar _callbackUrl = __webpack_require__(/*! ./lib/callback-url */ \"(rsc)/./node_modules/next-auth/core/lib/callback-url.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(rsc)/./node_modules/next-auth/utils/parse-url.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function init({ authOptions, providerId, action, origin, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, isPost }) {\n    var _authOptions$useSecur, _authOptions$events;\n    const url = (0, _parseUrl.default)(origin);\n    const secret = (0, _utils.createSecret)({\n        authOptions,\n        url\n    });\n    const { providers, provider } = (0, _providers.default)({\n        providers: authOptions.providers,\n        url,\n        providerId\n    });\n    const maxAge = 30 * 24 * 60 * 60;\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\"\n        },\n        ...authOptions,\n        url,\n        action,\n        provider,\n        cookies: {\n            ...cookie.defaultCookies((_authOptions$useSecur = authOptions.useSecureCookies) !== null && _authOptions$useSecur !== void 0 ? _authOptions$useSecur : url.base.startsWith(\"https://\")),\n            ...authOptions.cookies\n        },\n        secret,\n        providers,\n        session: {\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: ()=>{\n                var _randomUUID;\n                return (_randomUUID = _crypto.randomUUID === null || _crypto.randomUUID === void 0 ? void 0 : (0, _crypto.randomUUID)()) !== null && _randomUUID !== void 0 ? _randomUUID : (0, _crypto.randomBytes)(32).toString(\"hex\");\n            },\n            ...authOptions.session\n        },\n        jwt: {\n            secret,\n            maxAge,\n            encode: jwt.encode,\n            decode: jwt.decode,\n            ...authOptions.jwt\n        },\n        events: (0, _errors.eventsErrorHandler)((_authOptions$events = authOptions.events) !== null && _authOptions$events !== void 0 ? _authOptions$events : {}, _logger.default),\n        adapter: (0, _errors.adapterErrorHandler)(authOptions.adapter, _logger.default),\n        callbacks: {\n            ..._defaultCallbacks.defaultCallbacks,\n            ...authOptions.callbacks\n        },\n        logger: _logger.default,\n        callbackUrl: url.origin\n    };\n    const cookies = [];\n    const { csrfToken, cookie: csrfCookie, csrfTokenVerified } = (0, _csrfToken.createCSRFToken)({\n        options,\n        cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.csrfToken.name],\n        isPost,\n        bodyValue: reqCsrfToken\n    });\n    options.csrfToken = csrfToken;\n    options.csrfTokenVerified = csrfTokenVerified;\n    if (csrfCookie) {\n        cookies.push({\n            name: options.cookies.csrfToken.name,\n            value: csrfCookie,\n            options: options.cookies.csrfToken.options\n        });\n    }\n    const { callbackUrl, callbackUrlCookie } = await (0, _callbackUrl.createCallbackUrl)({\n        options,\n        cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options\n        });\n    }\n    return {\n        options,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/init.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/assert.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/assert.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.assertConfig = assertConfig;\nvar _errors = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../../utils/parse-url */ \"(rsc)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _cookie = __webpack_require__(/*! ./cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\");\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    } catch (_unused) {\n        return false;\n    }\n}\nfunction assertConfig(params) {\n    var _req$query, _req$query2, _options$useSecureCoo, _req$cookies, _options$cookies$call, _options$cookies, _options$cookies$call2;\n    const { options, req } = params;\n    const warnings = [];\n    if (!warned) {\n        if (!req.origin) warnings.push(\"NEXTAUTH_URL\");\n        if (!options.secret && \"development\" !== \"production\") warnings.push(\"NO_SECRET\");\n        if (options.debug) warnings.push(\"DEBUG_ENABLED\");\n    }\n    if (!options.secret && \"development\" === \"production\") {}\n    if (!((_req$query = req.query) !== null && _req$query !== void 0 && _req$query.nextauth) && !req.action) {\n        return new _errors.MissingAPIRoute(\"Cannot find [...nextauth].{js,ts} in `/pages/api/auth`. Make sure the filename is written correctly.\");\n    }\n    const callbackUrlParam = (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl;\n    const url = (0, _parseUrl.default)(req.origin);\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.base)) {\n        return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl } = (0, _cookie.defaultCookies)((_options$useSecureCoo = options.useSecureCookies) !== null && _options$useSecureCoo !== void 0 ? _options$useSecureCoo : url.base.startsWith(\"https://\"));\n    const callbackUrlCookie = (_req$cookies = req.cookies) === null || _req$cookies === void 0 ? void 0 : _req$cookies[(_options$cookies$call = (_options$cookies = options.cookies) === null || _options$cookies === void 0 ? void 0 : (_options$cookies$call2 = _options$cookies.callbackUrl) === null || _options$cookies$call2 === void 0 ? void 0 : _options$cookies$call2.name) !== null && _options$cookies$call !== void 0 ? _options$cookies$call : defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.base)) {\n        return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    let hasCredentials, hasEmail;\n    let hasTwitterOAuth2;\n    for (const provider of options.providers){\n        if (provider.type === \"credentials\") hasCredentials = true;\n        else if (provider.type === \"email\") hasEmail = true;\n        else if (provider.id === \"twitter\" && provider.version === \"2.0\") hasTwitterOAuth2 = true;\n    }\n    if (hasCredentials) {\n        var _options$session;\n        const dbStrategy = ((_options$session = options.session) === null || _options$session === void 0 ? void 0 : _options$session.strategy) === \"database\";\n        const onlyCredentials = !options.providers.some((p)=>p.type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new _errors.UnsupportedStrategy(\"Signin in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p)=>p.type === \"credentials\" && !p.authorize);\n        if (credentialsNoAuthorize) {\n            return new _errors.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    if (hasEmail) {\n        const { adapter } = options;\n        if (!adapter) {\n            return new _errors.MissingAdapter(\"E-mail login requires an adapter.\");\n        }\n        const missingMethods = [\n            \"createVerificationToken\",\n            \"useVerificationToken\",\n            \"getUserByEmail\"\n        ].filter((method)=>!adapter[method]);\n        if (missingMethods.length) {\n            return new _errors.MissingAdapterMethods(`Required adapter methods were missing: ${missingMethods.join(\", \")}`);\n        }\n    }\n    if (!warned) {\n        if (hasTwitterOAuth2) warnings.push(\"TWITTER_OAUTH_2_BETA\");\n        warned = true;\n    }\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/assert.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/callback-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-handler.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = callbackHandler;\nvar _errors = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nasync function callbackHandler(params) {\n    const { sessionToken, profile: _profile, account, options } = params;\n    if (!(account !== null && account !== void 0 && account.providerAccountId) || !account.type) throw new Error(\"Missing or invalid provider account\");\n    if (![\n        \"email\",\n        \"oauth\"\n    ].includes(account.type)) throw new Error(\"Provider not supported\");\n    const { adapter, jwt, events, session: { strategy: sessionStrategy, generateSessionToken } } = options;\n    if (!adapter) {\n        return {\n            user: _profile,\n            account\n        };\n    }\n    const profile = _profile;\n    const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                session = await jwt.decode({\n                    ...jwt,\n                    token: sessionToken\n                });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            } catch (_unused) {}\n        } else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            var _user, _events$updateUser;\n            if (((_user = user) === null || _user === void 0 ? void 0 : _user.id) !== userByEmail.id && !useJwtSession && sessionToken) {\n                await deleteSession(sessionToken);\n            }\n            user = await updateUser({\n                id: userByEmail.id,\n                emailVerified: new Date()\n            });\n            await ((_events$updateUser = events.updateUser) === null || _events$updateUser === void 0 ? void 0 : _events$updateUser.call(events, {\n                user\n            }));\n        } else {\n            var _events$createUser;\n            const { id: _, ...newUser } = {\n                ...profile,\n                emailVerified: new Date()\n            };\n            user = await createUser(newUser);\n            await ((_events$createUser = events.createUser) === null || _events$createUser === void 0 ? void 0 : _events$createUser.call(events, {\n                user\n            }));\n            isNewUser = true;\n        }\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: await generateSessionToken(),\n            userId: user.id,\n            expires: (0, _utils.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser\n        };\n    } else if (account.type === \"oauth\") {\n        const userByAccount = await getUserByAccount({\n            providerAccountId: account.providerAccountId,\n            provider: account.provider\n        });\n        if (userByAccount) {\n            if (user) {\n                if (userByAccount.id === user.id) {\n                    return {\n                        session,\n                        user,\n                        isNewUser\n                    };\n                }\n                throw new _errors.AccountNotLinkedError(\"The account is already associated with another user\");\n            }\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: await generateSessionToken(),\n                userId: userByAccount.id,\n                expires: (0, _utils.fromDate)(options.session.maxAge)\n            });\n            return {\n                session,\n                user: userByAccount,\n                isNewUser\n            };\n        } else {\n            var _events$createUser2, _events$linkAccount2;\n            if (user) {\n                var _events$linkAccount;\n                await linkAccount({\n                    ...account,\n                    userId: user.id\n                });\n                await ((_events$linkAccount = events.linkAccount) === null || _events$linkAccount === void 0 ? void 0 : _events$linkAccount.call(events, {\n                    user,\n                    account,\n                    profile\n                }));\n                return {\n                    session,\n                    user,\n                    isNewUser\n                };\n            }\n            const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n            if (userByEmail) {\n                const provider = options.provider;\n                if (provider !== null && provider !== void 0 && provider.allowDangerousEmailAccountLinking) {\n                    user = userByEmail;\n                } else {\n                    throw new _errors.AccountNotLinkedError(\"Another account already exists with the same e-mail address\");\n                }\n            } else {\n                const { id: _, ...newUser } = {\n                    ...profile,\n                    emailVerified: null\n                };\n                user = await createUser(newUser);\n            }\n            await ((_events$createUser2 = events.createUser) === null || _events$createUser2 === void 0 ? void 0 : _events$createUser2.call(events, {\n                user\n            }));\n            await linkAccount({\n                ...account,\n                userId: user.id\n            });\n            await ((_events$linkAccount2 = events.linkAccount) === null || _events$linkAccount2 === void 0 ? void 0 : _events$linkAccount2.call(events, {\n                user,\n                account,\n                profile\n            }));\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: await generateSessionToken(),\n                userId: user.id,\n                expires: (0, _utils.fromDate)(options.session.maxAge)\n            });\n            return {\n                session,\n                user,\n                isNewUser: true\n            };\n        }\n    }\n    throw new Error(\"Unsupported account type\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/callback-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/callback-url.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-url.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createCallbackUrl = createCallbackUrl;\nasync function createCallbackUrl({ options, paramValue, cookieValue }) {\n    const { url, callbacks } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin\n        });\n    } else if (cookieValue) {\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin\n        });\n    }\n    return {\n        callbackUrl,\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NhbGxiYWNrLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQseUJBQXlCLEdBQUdFO0FBRTVCLGVBQWVBLGtCQUFrQixFQUMvQkMsT0FBTyxFQUNQQyxVQUFVLEVBQ1ZDLFdBQVcsRUFDWjtJQUNDLE1BQU0sRUFDSkMsR0FBRyxFQUNIQyxTQUFTLEVBQ1YsR0FBR0o7SUFDSixJQUFJSyxjQUFjRixJQUFJRyxNQUFNO0lBRTVCLElBQUlMLFlBQVk7UUFDZEksY0FBYyxNQUFNRCxVQUFVRyxRQUFRLENBQUM7WUFDckNKLEtBQUtGO1lBQ0xPLFNBQVNMLElBQUlHLE1BQU07UUFDckI7SUFDRixPQUFPLElBQUlKLGFBQWE7UUFDdEJHLGNBQWMsTUFBTUQsVUFBVUcsUUFBUSxDQUFDO1lBQ3JDSixLQUFLRDtZQUNMTSxTQUFTTCxJQUFJRyxNQUFNO1FBQ3JCO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xEO1FBQ0FJLG1CQUFtQkosZ0JBQWdCSCxjQUFjRyxjQUFjSztJQUNqRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9jYWxsYmFjay11cmwuanM/N2JiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlQ2FsbGJhY2tVcmwgPSBjcmVhdGVDYWxsYmFja1VybDtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2FsbGJhY2tVcmwoe1xuICBvcHRpb25zLFxuICBwYXJhbVZhbHVlLFxuICBjb29raWVWYWx1ZVxufSkge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGNhbGxiYWNrc1xuICB9ID0gb3B0aW9ucztcbiAgbGV0IGNhbGxiYWNrVXJsID0gdXJsLm9yaWdpbjtcblxuICBpZiAocGFyYW1WYWx1ZSkge1xuICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgIHVybDogcGFyYW1WYWx1ZSxcbiAgICAgIGJhc2VVcmw6IHVybC5vcmlnaW5cbiAgICB9KTtcbiAgfSBlbHNlIGlmIChjb29raWVWYWx1ZSkge1xuICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgIHVybDogY29va2llVmFsdWUsXG4gICAgICBiYXNlVXJsOiB1cmwub3JpZ2luXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNhbGxiYWNrVXJsLFxuICAgIGNhbGxiYWNrVXJsQ29va2llOiBjYWxsYmFja1VybCAhPT0gY29va2llVmFsdWUgPyBjYWxsYmFja1VybCA6IHVuZGVmaW5lZFxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZUNhbGxiYWNrVXJsIiwib3B0aW9ucyIsInBhcmFtVmFsdWUiLCJjb29raWVWYWx1ZSIsInVybCIsImNhbGxiYWNrcyIsImNhbGxiYWNrVXJsIiwib3JpZ2luIiwicmVkaXJlY3QiLCJiYXNlVXJsIiwiY2FsbGJhY2tVcmxDb29raWUiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/callback-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/cookie.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/cookie.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SessionStore = void 0;\nexports.defaultCookies = defaultCookies;\nvar _classPrivateFieldGet3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classPrivateFieldGet */ \"(rsc)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\"));\nvar _classPrivateFieldSet2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classPrivateFieldSet */ \"(rsc)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\"));\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n    _checkPrivateRedeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n    _checkPrivateRedeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\nconst ALLOWED_COOKIE_SIZE = 4096;\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 163;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\nfunction defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        sessionToken: {\n            name: `${cookiePrefix}next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}next-auth.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        csrfToken: {\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}next-auth.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}next-auth.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        state: {\n            name: `${cookiePrefix}next-auth.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        nonce: {\n            name: `${cookiePrefix}next-auth.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        }\n    };\n}\nvar _chunks = new WeakMap();\nvar _option = new WeakMap();\nvar _logger = new WeakMap();\nvar _chunk = new WeakSet();\nvar _clean = new WeakSet();\nclass SessionStore {\n    constructor(option, req, logger){\n        _classPrivateMethodInitSpec(this, _clean);\n        _classPrivateMethodInitSpec(this, _chunk);\n        _classPrivateFieldInitSpec(this, _chunks, {\n            writable: true,\n            value: {}\n        });\n        _classPrivateFieldInitSpec(this, _option, {\n            writable: true,\n            value: void 0\n        });\n        _classPrivateFieldInitSpec(this, _logger, {\n            writable: true,\n            value: void 0\n        });\n        (0, _classPrivateFieldSet2.default)(this, _logger, logger);\n        (0, _classPrivateFieldSet2.default)(this, _option, option);\n        const { cookies: _cookies } = req;\n        const { name: cookieName } = option;\n        if (typeof (_cookies === null || _cookies === void 0 ? void 0 : _cookies.getAll) === \"function\") {\n            for (const { name, value } of _cookies.getAll()){\n                if (name.startsWith(cookieName)) {\n                    (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = value;\n                }\n            }\n        } else if (_cookies instanceof Map) {\n            for (const name of _cookies.keys()){\n                if (name.startsWith(cookieName)) (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = _cookies.get(name);\n            }\n        } else {\n            for(const name in _cookies){\n                if (name.startsWith(cookieName)) (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = _cookies[name];\n            }\n        }\n    }\n    get value() {\n        const sortedKeys = Object.keys((0, _classPrivateFieldGet3.default)(this, _chunks)).sort((a, b)=>{\n            const aSuffix = parseInt(a.split(\".\").pop() || \"0\");\n            const bSuffix = parseInt(b.split(\".\").pop() || \"0\");\n            return aSuffix - bSuffix;\n        });\n        return sortedKeys.map((key)=>(0, _classPrivateFieldGet3.default)(this, _chunks)[key]).join(\"\");\n    }\n    chunk(value, options) {\n        const cookies = _classPrivateMethodGet(this, _clean, _clean2).call(this);\n        const chunked = _classPrivateMethodGet(this, _chunk, _chunk2).call(this, {\n            name: (0, _classPrivateFieldGet3.default)(this, _option).name,\n            value,\n            options: {\n                ...(0, _classPrivateFieldGet3.default)(this, _option).options,\n                ...options\n            }\n        });\n        for (const chunk of chunked){\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    clean() {\n        return Object.values(_classPrivateMethodGet(this, _clean, _clean2).call(this));\n    }\n}\nexports.SessionStore = SessionStore;\nfunction _chunk2(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        (0, _classPrivateFieldGet3.default)(this, _chunks)[cookie.name] = cookie.value;\n        return [\n            cookie\n        ];\n    }\n    const cookies = [];\n    for(let i = 0; i < chunkCount; i++){\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({\n            ...cookie,\n            name,\n            value\n        });\n        (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = value;\n    }\n    (0, _classPrivateFieldGet3.default)(this, _logger).debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c)=>c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)\n    });\n    return cookies;\n}\nfunction _clean2() {\n    const cleanedChunks = {};\n    for(const name in (0, _classPrivateFieldGet3.default)(this, _chunks)){\n        var _classPrivateFieldGet2;\n        (_classPrivateFieldGet2 = (0, _classPrivateFieldGet3.default)(this, _chunks)) === null || _classPrivateFieldGet2 === void 0 ? true : delete _classPrivateFieldGet2[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: {\n                ...(0, _classPrivateFieldGet3.default)(this, _option).options,\n                maxAge: 0\n            }\n        };\n    }\n    return cleanedChunks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/cookie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/csrf-token.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/csrf-token.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createCSRFToken = createCSRFToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction createCSRFToken({ options, cookieValue, isPost, bodyValue }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return {\n                csrfTokenVerified,\n                csrfToken\n            };\n        }\n    }\n    const csrfToken = (0, _crypto.randomBytes)(32).toString(\"hex\");\n    const csrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return {\n        cookie,\n        csrfToken\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NzcmYtdG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHVCQUF1QixHQUFHRTtBQUUxQixJQUFJQyxVQUFVQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUU5QixTQUFTRixnQkFBZ0IsRUFDdkJHLE9BQU8sRUFDUEMsV0FBVyxFQUNYQyxNQUFNLEVBQ05DLFNBQVMsRUFDVjtJQUNDLElBQUlGLGFBQWE7UUFDZixNQUFNLENBQUNHLFdBQVdDLGNBQWMsR0FBR0osWUFBWUssS0FBSyxDQUFDO1FBQ3JELE1BQU1DLHdCQUF3QixDQUFDLEdBQUdULFFBQVFVLFVBQVUsRUFBRSxVQUFVQyxNQUFNLENBQUMsQ0FBQyxFQUFFTCxVQUFVLEVBQUVKLFFBQVFVLE1BQU0sQ0FBQyxDQUFDLEVBQUVDLE1BQU0sQ0FBQztRQUUvRyxJQUFJTixrQkFBa0JFLHVCQUF1QjtZQUMzQyxNQUFNSyxvQkFBb0JWLFVBQVVFLGNBQWNEO1lBQ2xELE9BQU87Z0JBQ0xTO2dCQUNBUjtZQUNGO1FBQ0Y7SUFDRjtJQUVBLE1BQU1BLFlBQVksQ0FBQyxHQUFHTixRQUFRZSxXQUFXLEVBQUUsSUFBSUMsUUFBUSxDQUFDO0lBQ3hELE1BQU1ULGdCQUFnQixDQUFDLEdBQUdQLFFBQVFVLFVBQVUsRUFBRSxVQUFVQyxNQUFNLENBQUMsQ0FBQyxFQUFFTCxVQUFVLEVBQUVKLFFBQVFVLE1BQU0sQ0FBQyxDQUFDLEVBQUVDLE1BQU0sQ0FBQztJQUN2RyxNQUFNSSxTQUFTLENBQUMsRUFBRVgsVUFBVSxDQUFDLEVBQUVDLGNBQWMsQ0FBQztJQUM5QyxPQUFPO1FBQ0xVO1FBQ0FYO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvY3NyZi10b2tlbi5qcz8zMGI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jcmVhdGVDU1JGVG9rZW4gPSBjcmVhdGVDU1JGVG9rZW47XG5cbnZhciBfY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcblxuZnVuY3Rpb24gY3JlYXRlQ1NSRlRva2VuKHtcbiAgb3B0aW9ucyxcbiAgY29va2llVmFsdWUsXG4gIGlzUG9zdCxcbiAgYm9keVZhbHVlXG59KSB7XG4gIGlmIChjb29raWVWYWx1ZSkge1xuICAgIGNvbnN0IFtjc3JmVG9rZW4sIGNzcmZUb2tlbkhhc2hdID0gY29va2llVmFsdWUuc3BsaXQoXCJ8XCIpO1xuICAgIGNvbnN0IGV4cGVjdGVkQ3NyZlRva2VuSGFzaCA9ICgwLCBfY3J5cHRvLmNyZWF0ZUhhc2gpKFwic2hhMjU2XCIpLnVwZGF0ZShgJHtjc3JmVG9rZW59JHtvcHRpb25zLnNlY3JldH1gKS5kaWdlc3QoXCJoZXhcIik7XG5cbiAgICBpZiAoY3NyZlRva2VuSGFzaCA9PT0gZXhwZWN0ZWRDc3JmVG9rZW5IYXNoKSB7XG4gICAgICBjb25zdCBjc3JmVG9rZW5WZXJpZmllZCA9IGlzUG9zdCAmJiBjc3JmVG9rZW4gPT09IGJvZHlWYWx1ZTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNzcmZUb2tlblZlcmlmaWVkLFxuICAgICAgICBjc3JmVG9rZW5cbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgY29uc3QgY3NyZlRva2VuID0gKDAsIF9jcnlwdG8ucmFuZG9tQnl0ZXMpKDMyKS50b1N0cmluZyhcImhleFwiKTtcbiAgY29uc3QgY3NyZlRva2VuSGFzaCA9ICgwLCBfY3J5cHRvLmNyZWF0ZUhhc2gpKFwic2hhMjU2XCIpLnVwZGF0ZShgJHtjc3JmVG9rZW59JHtvcHRpb25zLnNlY3JldH1gKS5kaWdlc3QoXCJoZXhcIik7XG4gIGNvbnN0IGNvb2tpZSA9IGAke2NzcmZUb2tlbn18JHtjc3JmVG9rZW5IYXNofWA7XG4gIHJldHVybiB7XG4gICAgY29va2llLFxuICAgIGNzcmZUb2tlblxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZUNTUkZUb2tlbiIsIl9jcnlwdG8iLCJyZXF1aXJlIiwib3B0aW9ucyIsImNvb2tpZVZhbHVlIiwiaXNQb3N0IiwiYm9keVZhbHVlIiwiY3NyZlRva2VuIiwiY3NyZlRva2VuSGFzaCIsInNwbGl0IiwiZXhwZWN0ZWRDc3JmVG9rZW5IYXNoIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsInNlY3JldCIsImRpZ2VzdCIsImNzcmZUb2tlblZlcmlmaWVkIiwicmFuZG9tQnl0ZXMiLCJ0b1N0cmluZyIsImNvb2tpZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/csrf-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/default-callbacks.js":
/*!**************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/default-callbacks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultCallbacks = void 0;\nconst defaultCallbacks = {\n    signIn () {\n        return true;\n    },\n    redirect ({ url, baseUrl }) {\n        if (url.startsWith(\"/\")) return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl) return url;\n        return baseUrl;\n    },\n    session ({ session }) {\n        return session;\n    },\n    jwt ({ token }) {\n        return token;\n    }\n};\nexports.defaultCallbacks = defaultCallbacks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2RlZmF1bHQtY2FsbGJhY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCx3QkFBd0IsR0FBRyxLQUFLO0FBQ2hDLE1BQU1FLG1CQUFtQjtJQUN2QkM7UUFDRSxPQUFPO0lBQ1Q7SUFFQUMsVUFBUyxFQUNQQyxHQUFHLEVBQ0hDLE9BQU8sRUFDUjtRQUNDLElBQUlELElBQUlFLFVBQVUsQ0FBQyxNQUFNLE9BQU8sQ0FBQyxFQUFFRCxRQUFRLEVBQUVELElBQUksQ0FBQzthQUFNLElBQUksSUFBSUcsSUFBSUgsS0FBS0ksTUFBTSxLQUFLSCxTQUFTLE9BQU9EO1FBQ3BHLE9BQU9DO0lBQ1Q7SUFFQUksU0FBUSxFQUNOQSxPQUFPLEVBQ1I7UUFDQyxPQUFPQTtJQUNUO0lBRUFDLEtBQUksRUFDRkMsS0FBSyxFQUNOO1FBQ0MsT0FBT0E7SUFDVDtBQUVGO0FBQ0FaLHdCQUF3QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvZGVmYXVsdC1jYWxsYmFja3MuanM/ZmY2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdENhbGxiYWNrcyA9IHZvaWQgMDtcbmNvbnN0IGRlZmF1bHRDYWxsYmFja3MgPSB7XG4gIHNpZ25JbigpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICByZWRpcmVjdCh7XG4gICAgdXJsLFxuICAgIGJhc2VVcmxcbiAgfSkge1xuICAgIGlmICh1cmwuc3RhcnRzV2l0aChcIi9cIikpIHJldHVybiBgJHtiYXNlVXJsfSR7dXJsfWA7ZWxzZSBpZiAobmV3IFVSTCh1cmwpLm9yaWdpbiA9PT0gYmFzZVVybCkgcmV0dXJuIHVybDtcbiAgICByZXR1cm4gYmFzZVVybDtcbiAgfSxcblxuICBzZXNzaW9uKHtcbiAgICBzZXNzaW9uXG4gIH0pIHtcbiAgICByZXR1cm4gc2Vzc2lvbjtcbiAgfSxcblxuICBqd3Qoe1xuICAgIHRva2VuXG4gIH0pIHtcbiAgICByZXR1cm4gdG9rZW47XG4gIH1cblxufTtcbmV4cG9ydHMuZGVmYXVsdENhbGxiYWNrcyA9IGRlZmF1bHRDYWxsYmFja3M7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdENhbGxiYWNrcyIsInNpZ25JbiIsInJlZGlyZWN0IiwidXJsIiwiYmFzZVVybCIsInN0YXJ0c1dpdGgiLCJVUkwiLCJvcmlnaW4iLCJzZXNzaW9uIiwiand0IiwidG9rZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/default-callbacks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/getUserFromEmail.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = getAdapterUserFromEmail;\nasync function getAdapterUserFromEmail({ email, adapter }) {\n    const { getUserByEmail } = adapter;\n    const adapterUser = email ? await getUserByEmail(email) : null;\n    if (adapterUser) return adapterUser;\n    return {\n        id: email,\n        email,\n        emailVerified: null\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL2dldFVzZXJGcm9tRW1haWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHO0FBRWxCLGVBQWVBLHdCQUF3QixFQUNyQ0MsS0FBSyxFQUNMQyxPQUFPLEVBQ1I7SUFDQyxNQUFNLEVBQ0pDLGNBQWMsRUFDZixHQUFHRDtJQUNKLE1BQU1FLGNBQWNILFFBQVEsTUFBTUUsZUFBZUYsU0FBUztJQUMxRCxJQUFJRyxhQUFhLE9BQU9BO0lBQ3hCLE9BQU87UUFDTEMsSUFBSUo7UUFDSkE7UUFDQUssZUFBZTtJQUNqQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9lbWFpbC9nZXRVc2VyRnJvbUVtYWlsLmpzPzFjMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRBZGFwdGVyVXNlckZyb21FbWFpbDtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWRhcHRlclVzZXJGcm9tRW1haWwoe1xuICBlbWFpbCxcbiAgYWRhcHRlclxufSkge1xuICBjb25zdCB7XG4gICAgZ2V0VXNlckJ5RW1haWxcbiAgfSA9IGFkYXB0ZXI7XG4gIGNvbnN0IGFkYXB0ZXJVc2VyID0gZW1haWwgPyBhd2FpdCBnZXRVc2VyQnlFbWFpbChlbWFpbCkgOiBudWxsO1xuICBpZiAoYWRhcHRlclVzZXIpIHJldHVybiBhZGFwdGVyVXNlcjtcbiAgcmV0dXJuIHtcbiAgICBpZDogZW1haWwsXG4gICAgZW1haWwsXG4gICAgZW1haWxWZXJpZmllZDogbnVsbFxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJnZXRBZGFwdGVyVXNlckZyb21FbWFpbCIsImVtYWlsIiwiYWRhcHRlciIsImdldFVzZXJCeUVtYWlsIiwiYWRhcHRlclVzZXIiLCJpZCIsImVtYWlsVmVyaWZpZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/email/signin.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/signin.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = email;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nasync function email(identifier, options) {\n    var _await$provider$gener, _provider$generateVer, _provider$maxAge, _adapter$createVerifi;\n    const { url, adapter, provider, callbackUrl, theme } = options;\n    const token = (_await$provider$gener = await ((_provider$generateVer = provider.generateVerificationToken) === null || _provider$generateVer === void 0 ? void 0 : _provider$generateVer.call(provider))) !== null && _await$provider$gener !== void 0 ? _await$provider$gener : (0, _crypto.randomBytes)(32).toString(\"hex\");\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + ((_provider$maxAge = provider.maxAge) !== null && _provider$maxAge !== void 0 ? _provider$maxAge : ONE_DAY_IN_SECONDS) * 1000);\n    const params = new URLSearchParams({\n        callbackUrl,\n        token,\n        email: identifier\n    });\n    const _url = `${url}/callback/${provider.id}?${params}`;\n    await Promise.all([\n        provider.sendVerificationRequest({\n            identifier,\n            token,\n            expires,\n            url: _url,\n            provider,\n            theme\n        }),\n        (_adapter$createVerifi = adapter.createVerificationToken) === null || _adapter$createVerifi === void 0 ? void 0 : _adapter$createVerifi.call(adapter, {\n            identifier,\n            token: (0, _utils.hashToken)(token, options),\n            expires\n        })\n    ]);\n    return `${url}/verify-request?${new URLSearchParams({\n        provider: provider.id,\n        type: provider.type\n    })}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL3NpZ25pbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsSUFBSUMsVUFBVUMsbUJBQU9BLENBQUMsc0JBQVE7QUFFOUIsSUFBSUMsU0FBU0QsbUJBQU9BLENBQUMsa0VBQVU7QUFFL0IsZUFBZUYsTUFBTUksVUFBVSxFQUFFQyxPQUFPO0lBQ3RDLElBQUlDLHVCQUF1QkMsdUJBQXVCQyxrQkFBa0JDO0lBRXBFLE1BQU0sRUFDSkMsR0FBRyxFQUNIQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxLQUFLLEVBQ04sR0FBR1Q7SUFDSixNQUFNVSxRQUFRLENBQUNULHdCQUF3QixNQUFPLEVBQUNDLHdCQUF3QkssU0FBU0kseUJBQXlCLE1BQU0sUUFBUVQsMEJBQTBCLEtBQUssSUFBSSxLQUFLLElBQUlBLHNCQUFzQlUsSUFBSSxDQUFDTCxTQUFRLENBQUMsTUFBTyxRQUFRTiwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0IsQ0FBQyxHQUFHTCxRQUFRaUIsV0FBVyxFQUFFLElBQUlDLFFBQVEsQ0FBQztJQUN2VCxNQUFNQyxxQkFBcUI7SUFDM0IsTUFBTUMsVUFBVSxJQUFJQyxLQUFLQSxLQUFLQyxHQUFHLEtBQUssQ0FBQyxDQUFDZixtQkFBbUJJLFNBQVNZLE1BQU0sTUFBTSxRQUFRaEIscUJBQXFCLEtBQUssSUFBSUEsbUJBQW1CWSxrQkFBaUIsSUFBSztJQUMvSixNQUFNSyxTQUFTLElBQUlDLGdCQUFnQjtRQUNqQ2I7UUFDQUU7UUFDQWYsT0FBT0k7SUFDVDtJQUNBLE1BQU11QixPQUFPLENBQUMsRUFBRWpCLElBQUksVUFBVSxFQUFFRSxTQUFTZ0IsRUFBRSxDQUFDLENBQUMsRUFBRUgsT0FBTyxDQUFDO0lBQ3ZELE1BQU1JLFFBQVFDLEdBQUcsQ0FBQztRQUFDbEIsU0FBU21CLHVCQUF1QixDQUFDO1lBQ2xEM0I7WUFDQVc7WUFDQU07WUFDQVgsS0FBS2lCO1lBQ0xmO1lBQ0FFO1FBQ0Y7UUFBS0wsQ0FBQUEsd0JBQXdCRSxRQUFRcUIsdUJBQXVCLE1BQU0sUUFBUXZCLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JRLElBQUksQ0FBQ04sU0FBUztZQUN4SlA7WUFDQVcsT0FBTyxDQUFDLEdBQUdaLE9BQU84QixTQUFTLEVBQUVsQixPQUFPVjtZQUNwQ2dCO1FBQ0Y7S0FBRztJQUNILE9BQU8sQ0FBQyxFQUFFWCxJQUFJLGdCQUFnQixFQUFFLElBQUlnQixnQkFBZ0I7UUFDbERkLFVBQVVBLFNBQVNnQixFQUFFO1FBQ3JCTSxNQUFNdEIsU0FBU3NCLElBQUk7SUFDckIsR0FBRyxDQUFDO0FBQ04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL3NpZ25pbi5qcz9lYzQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZW1haWw7XG5cbnZhciBfY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcblxuYXN5bmMgZnVuY3Rpb24gZW1haWwoaWRlbnRpZmllciwgb3B0aW9ucykge1xuICB2YXIgX2F3YWl0JHByb3ZpZGVyJGdlbmVyLCBfcHJvdmlkZXIkZ2VuZXJhdGVWZXIsIF9wcm92aWRlciRtYXhBZ2UsIF9hZGFwdGVyJGNyZWF0ZVZlcmlmaTtcblxuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGFkYXB0ZXIsXG4gICAgcHJvdmlkZXIsXG4gICAgY2FsbGJhY2tVcmwsXG4gICAgdGhlbWVcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHRva2VuID0gKF9hd2FpdCRwcm92aWRlciRnZW5lciA9IGF3YWl0ICgoX3Byb3ZpZGVyJGdlbmVyYXRlVmVyID0gcHJvdmlkZXIuZ2VuZXJhdGVWZXJpZmljYXRpb25Ub2tlbikgPT09IG51bGwgfHwgX3Byb3ZpZGVyJGdlbmVyYXRlVmVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkZ2VuZXJhdGVWZXIuY2FsbChwcm92aWRlcikpKSAhPT0gbnVsbCAmJiBfYXdhaXQkcHJvdmlkZXIkZ2VuZXIgIT09IHZvaWQgMCA/IF9hd2FpdCRwcm92aWRlciRnZW5lciA6ICgwLCBfY3J5cHRvLnJhbmRvbUJ5dGVzKSgzMikudG9TdHJpbmcoXCJoZXhcIik7XG4gIGNvbnN0IE9ORV9EQVlfSU5fU0VDT05EUyA9IDg2NDAwO1xuICBjb25zdCBleHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArICgoX3Byb3ZpZGVyJG1heEFnZSA9IHByb3ZpZGVyLm1heEFnZSkgIT09IG51bGwgJiYgX3Byb3ZpZGVyJG1heEFnZSAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJG1heEFnZSA6IE9ORV9EQVlfSU5fU0VDT05EUykgKiAxMDAwKTtcbiAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgY2FsbGJhY2tVcmwsXG4gICAgdG9rZW4sXG4gICAgZW1haWw6IGlkZW50aWZpZXJcbiAgfSk7XG4gIGNvbnN0IF91cmwgPSBgJHt1cmx9L2NhbGxiYWNrLyR7cHJvdmlkZXIuaWR9PyR7cGFyYW1zfWA7XG4gIGF3YWl0IFByb21pc2UuYWxsKFtwcm92aWRlci5zZW5kVmVyaWZpY2F0aW9uUmVxdWVzdCh7XG4gICAgaWRlbnRpZmllcixcbiAgICB0b2tlbixcbiAgICBleHBpcmVzLFxuICAgIHVybDogX3VybCxcbiAgICBwcm92aWRlcixcbiAgICB0aGVtZVxuICB9KSwgKF9hZGFwdGVyJGNyZWF0ZVZlcmlmaSA9IGFkYXB0ZXIuY3JlYXRlVmVyaWZpY2F0aW9uVG9rZW4pID09PSBudWxsIHx8IF9hZGFwdGVyJGNyZWF0ZVZlcmlmaSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FkYXB0ZXIkY3JlYXRlVmVyaWZpLmNhbGwoYWRhcHRlciwge1xuICAgIGlkZW50aWZpZXIsXG4gICAgdG9rZW46ICgwLCBfdXRpbHMuaGFzaFRva2VuKSh0b2tlbiwgb3B0aW9ucyksXG4gICAgZXhwaXJlc1xuICB9KV0pO1xuICByZXR1cm4gYCR7dXJsfS92ZXJpZnktcmVxdWVzdD8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIHByb3ZpZGVyOiBwcm92aWRlci5pZCxcbiAgICB0eXBlOiBwcm92aWRlci50eXBlXG4gIH0pfWA7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImVtYWlsIiwiX2NyeXB0byIsInJlcXVpcmUiLCJfdXRpbHMiLCJpZGVudGlmaWVyIiwib3B0aW9ucyIsIl9hd2FpdCRwcm92aWRlciRnZW5lciIsIl9wcm92aWRlciRnZW5lcmF0ZVZlciIsIl9wcm92aWRlciRtYXhBZ2UiLCJfYWRhcHRlciRjcmVhdGVWZXJpZmkiLCJ1cmwiLCJhZGFwdGVyIiwicHJvdmlkZXIiLCJjYWxsYmFja1VybCIsInRoZW1lIiwidG9rZW4iLCJnZW5lcmF0ZVZlcmlmaWNhdGlvblRva2VuIiwiY2FsbCIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJPTkVfREFZX0lOX1NFQ09ORFMiLCJleHBpcmVzIiwiRGF0ZSIsIm5vdyIsIm1heEFnZSIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsIl91cmwiLCJpZCIsIlByb21pc2UiLCJhbGwiLCJzZW5kVmVyaWZpY2F0aW9uUmVxdWVzdCIsImNyZWF0ZVZlcmlmaWNhdGlvblRva2VuIiwiaGFzaFRva2VuIiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/email/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/authorization-url.js":
/*!********************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/authorization-url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = getAuthorizationUrl;\nvar _client = __webpack_require__(/*! ./client */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function getAuthorizationUrl({ options, query }) {\n    var _provider$version;\n    const { logger, provider } = options;\n    let params = {};\n    if (typeof provider.authorization === \"string\") {\n        const parsedUrl = new URL(provider.authorization);\n        const parsedParams = Object.fromEntries(parsedUrl.searchParams);\n        params = {\n            ...params,\n            ...parsedParams\n        };\n    } else {\n        var _provider$authorizati;\n        params = {\n            ...params,\n            ...(_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.params\n        };\n    }\n    params = {\n        ...params,\n        ...query\n    };\n    if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n        var _provider$authorizati2;\n        const client = (0, _clientLegacy.oAuth1Client)(options);\n        const tokens = await client.getOAuthRequestToken(params);\n        const url = `${(_provider$authorizati2 = provider.authorization) === null || _provider$authorizati2 === void 0 ? void 0 : _provider$authorizati2.url}?${new URLSearchParams({\n            oauth_token: tokens.oauth_token,\n            oauth_token_secret: tokens.oauth_token_secret,\n            ...tokens.params\n        })}`;\n        _clientLegacy.oAuth1TokenStore.set(tokens.oauth_token, tokens.oauth_token_secret);\n        logger.debug(\"GET_AUTHORIZATION_URL\", {\n            url,\n            provider\n        });\n        return {\n            redirect: url\n        };\n    }\n    const client = await (0, _client.openidClient)(options);\n    const authorizationParams = params;\n    const cookies = [];\n    await checks.state.create(options, cookies, authorizationParams);\n    await checks.pkce.create(options, cookies, authorizationParams);\n    await checks.nonce.create(options, cookies, authorizationParams);\n    const url = client.authorizationUrl(authorizationParams);\n    logger.debug(\"GET_AUTHORIZATION_URL\", {\n        url,\n        cookies,\n        provider\n    });\n    return {\n        redirect: url,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/callback.js":
/*!***********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/callback.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = oAuthCallback;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(rsc)/./node_modules/openid-client/lib/index.js\");\nvar _client = __webpack_require__(/*! ./client */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar _checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nvar _errors = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function oAuthCallback(params) {\n    var _body$error, _provider$version;\n    const { options, query, body, method, cookies } = params;\n    const { logger, provider } = options;\n    const errorMessage = (_body$error = body === null || body === void 0 ? void 0 : body.error) !== null && _body$error !== void 0 ? _body$error : query === null || query === void 0 ? void 0 : query.error;\n    if (errorMessage) {\n        const error = new Error(errorMessage);\n        logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n            error,\n            error_description: query === null || query === void 0 ? void 0 : query.error_description,\n            providerId: provider.id\n        });\n        logger.debug(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n            body\n        });\n        throw error;\n    }\n    if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n        try {\n            const client = await (0, _clientLegacy.oAuth1Client)(options);\n            const { oauth_token, oauth_verifier } = query !== null && query !== void 0 ? query : {};\n            const tokens = await client.getOAuthAccessToken(oauth_token, _clientLegacy.oAuth1TokenStore.get(oauth_token), oauth_verifier);\n            let profile = await client.get(provider.profileUrl, tokens.oauth_token, tokens.oauth_token_secret);\n            if (typeof profile === \"string\") {\n                profile = JSON.parse(profile);\n            }\n            const newProfile = await getProfile({\n                profile,\n                tokens,\n                provider,\n                logger\n            });\n            return {\n                ...newProfile,\n                cookies: []\n            };\n        } catch (error) {\n            logger.error(\"OAUTH_V1_GET_ACCESS_TOKEN_ERROR\", error);\n            throw error;\n        }\n    }\n    if (query !== null && query !== void 0 && query.oauth_token) _clientLegacy.oAuth1TokenStore.delete(query.oauth_token);\n    try {\n        var _provider$token, _provider$token2, _provider$userinfo;\n        const client = await (0, _client.openidClient)(options);\n        let tokens;\n        const checks = {};\n        const resCookies = [];\n        await _checks.state.use(cookies, resCookies, options, checks);\n        await _checks.pkce.use(cookies, resCookies, options, checks);\n        await _checks.nonce.use(cookies, resCookies, options, checks);\n        const params = {\n            ...client.callbackParams({\n                url: `http://n?${new URLSearchParams(query)}`,\n                body,\n                method\n            }),\n            ...(_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.params\n        };\n        if ((_provider$token2 = provider.token) !== null && _provider$token2 !== void 0 && _provider$token2.request) {\n            const response = await provider.token.request({\n                provider,\n                params,\n                checks,\n                client\n            });\n            tokens = new _openidClient.TokenSet(response.tokens);\n        } else if (provider.idToken) {\n            tokens = await client.callback(provider.callbackUrl, params, checks);\n        } else {\n            tokens = await client.oauthCallback(provider.callbackUrl, params, checks);\n        }\n        if (Array.isArray(tokens.scope)) {\n            tokens.scope = tokens.scope.join(\" \");\n        }\n        let profile;\n        if ((_provider$userinfo = provider.userinfo) !== null && _provider$userinfo !== void 0 && _provider$userinfo.request) {\n            profile = await provider.userinfo.request({\n                provider,\n                tokens,\n                client\n            });\n        } else if (provider.idToken) {\n            profile = tokens.claims();\n        } else {\n            var _provider$userinfo2;\n            profile = await client.userinfo(tokens, {\n                params: (_provider$userinfo2 = provider.userinfo) === null || _provider$userinfo2 === void 0 ? void 0 : _provider$userinfo2.params\n            });\n        }\n        const profileResult = await getProfile({\n            profile,\n            provider,\n            tokens,\n            logger\n        });\n        return {\n            ...profileResult,\n            cookies: resCookies\n        };\n    } catch (error) {\n        throw new _errors.OAuthCallbackError(error);\n    }\n}\nasync function getProfile({ profile: OAuthProfile, tokens, provider, logger }) {\n    try {\n        var _profile$email;\n        logger.debug(\"PROFILE_DATA\", {\n            OAuthProfile\n        });\n        const profile = await provider.profile(OAuthProfile, tokens);\n        profile.email = (_profile$email = profile.email) === null || _profile$email === void 0 ? void 0 : _profile$email.toLowerCase();\n        if (!profile.id) throw new TypeError(`Profile id is missing in ${provider.name} OAuth profile response`);\n        return {\n            profile,\n            account: {\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: profile.id.toString(),\n                ...tokens\n            },\n            OAuthProfile\n        };\n    } catch (error) {\n        logger.error(\"OAUTH_PARSE_PROFILE_ERROR\", {\n            error: error,\n            OAuthProfile\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/checks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pkce = exports.nonce = exports.PKCE_CODE_CHALLENGE_METHOD = void 0;\nexports.signCookie = signCookie;\nexports.state = void 0;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(rsc)/./node_modules/openid-client/lib/index.js\");\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../../../jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function signCookie(type, value, maxAge, options) {\n    const { cookies, logger } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, {\n        value,\n        maxAge\n    });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    return {\n        name: cookies[type].name,\n        value: await jwt.encode({\n            ...options.jwt,\n            maxAge,\n            token: {\n                value\n            }\n        }),\n        options: {\n            ...cookies[type].options,\n            expires\n        }\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15;\nconst PKCE_CODE_CHALLENGE_METHOD = \"S256\";\nexports.PKCE_CODE_CHALLENGE_METHOD = PKCE_CODE_CHALLENGE_METHOD;\nconst pkce = {\n    async create (options, cookies, resParams) {\n        var _options$provider, _options$provider$che, _options$cookies$pkce;\n        if (!((_options$provider = options.provider) !== null && _options$provider !== void 0 && (_options$provider$che = _options$provider.checks) !== null && _options$provider$che !== void 0 && _options$provider$che.includes(\"pkce\"))) return;\n        const code_verifier = _openidClient.generators.codeVerifier();\n        const value = _openidClient.generators.codeChallenge(code_verifier);\n        resParams.code_challenge = value;\n        resParams.code_challenge_method = PKCE_CODE_CHALLENGE_METHOD;\n        const maxAge = (_options$cookies$pkce = options.cookies.pkceCodeVerifier.options.maxAge) !== null && _options$cookies$pkce !== void 0 ? _options$cookies$pkce : PKCE_MAX_AGE;\n        cookies.push(await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider2, _options$provider2$ch;\n        if (!((_options$provider2 = options.provider) !== null && _options$provider2 !== void 0 && (_options$provider2$ch = _options$provider2.checks) !== null && _options$provider2$ch !== void 0 && _options$provider2$ch.includes(\"pkce\"))) return;\n        const codeVerifier = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier) throw new TypeError(\"PKCE code_verifier cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: codeVerifier\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"PKCE code_verifier value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: {\n                ...options.cookies.pkceCodeVerifier.options,\n                maxAge: 0\n            }\n        });\n        checks.code_verifier = value.value;\n    }\n};\nexports.pkce = pkce;\nconst STATE_MAX_AGE = 60 * 15;\nconst state = {\n    async create (options, cookies, resParams) {\n        var _options$provider$che2, _options$cookies$stat;\n        if (!((_options$provider$che2 = options.provider.checks) !== null && _options$provider$che2 !== void 0 && _options$provider$che2.includes(\"state\"))) return;\n        const value = _openidClient.generators.state();\n        resParams.state = value;\n        const maxAge = (_options$cookies$stat = options.cookies.state.options.maxAge) !== null && _options$cookies$stat !== void 0 ? _options$cookies$stat : STATE_MAX_AGE;\n        cookies.push(await signCookie(\"state\", value, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider$che3;\n        if (!((_options$provider$che3 = options.provider.checks) !== null && _options$provider$che3 !== void 0 && _options$provider$che3.includes(\"state\"))) return;\n        const state = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.state.name];\n        if (!state) throw new TypeError(\"State cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: state\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"State value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: {\n                ...options.cookies.state.options,\n                maxAge: 0\n            }\n        });\n        checks.state = value.value;\n    }\n};\nexports.state = state;\nconst NONCE_MAX_AGE = 60 * 15;\nconst nonce = {\n    async create (options, cookies, resParams) {\n        var _options$provider$che4, _options$cookies$nonc;\n        if (!((_options$provider$che4 = options.provider.checks) !== null && _options$provider$che4 !== void 0 && _options$provider$che4.includes(\"nonce\"))) return;\n        const value = _openidClient.generators.nonce();\n        resParams.nonce = value;\n        const maxAge = (_options$cookies$nonc = options.cookies.nonce.options.maxAge) !== null && _options$cookies$nonc !== void 0 ? _options$cookies$nonc : NONCE_MAX_AGE;\n        cookies.push(await signCookie(\"nonce\", value, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider3, _options$provider3$ch;\n        if (!((_options$provider3 = options.provider) !== null && _options$provider3 !== void 0 && (_options$provider3$ch = _options$provider3.checks) !== null && _options$provider3$ch !== void 0 && _options$provider3$ch.includes(\"nonce\"))) return;\n        const nonce = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.nonce.name];\n        if (!nonce) throw new TypeError(\"Nonce cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: nonce\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"Nonce value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: {\n                ...options.cookies.nonce.options,\n                maxAge: 0\n            }\n        });\n        checks.nonce = value.value;\n    }\n};\nexports.nonce = nonce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js":
/*!****************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client-legacy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.oAuth1Client = oAuth1Client;\nexports.oAuth1TokenStore = void 0;\nvar _oauth = __webpack_require__(/*! oauth */ \"(rsc)/./node_modules/oauth/index.js\");\nfunction oAuth1Client(options) {\n    var _provider$version, _provider$encoding;\n    const provider = options.provider;\n    const oauth1Client = new _oauth.OAuth(provider.requestTokenUrl, provider.accessTokenUrl, provider.clientId, provider.clientSecret, (_provider$version = provider.version) !== null && _provider$version !== void 0 ? _provider$version : \"1.0\", provider.callbackUrl, (_provider$encoding = provider.encoding) !== null && _provider$encoding !== void 0 ? _provider$encoding : \"HMAC-SHA1\");\n    const originalGet = oauth1Client.get.bind(oauth1Client);\n    oauth1Client.get = async (...args)=>{\n        return await new Promise((resolve, reject)=>{\n            originalGet(...args, (error, result)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve(result);\n            });\n        });\n    };\n    const originalGetOAuth1AccessToken = oauth1Client.getOAuthAccessToken.bind(oauth1Client);\n    oauth1Client.getOAuthAccessToken = async (...args)=>{\n        return await new Promise((resolve, reject)=>{\n            originalGetOAuth1AccessToken(...args, (error, oauth_token, oauth_token_secret)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    oauth_token,\n                    oauth_token_secret\n                });\n            });\n        });\n    };\n    const originalGetOAuthRequestToken = oauth1Client.getOAuthRequestToken.bind(oauth1Client);\n    oauth1Client.getOAuthRequestToken = async (params = {})=>{\n        return await new Promise((resolve, reject)=>{\n            originalGetOAuthRequestToken(params, (error, oauth_token, oauth_token_secret, params)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    oauth_token,\n                    oauth_token_secret,\n                    params\n                });\n            });\n        });\n    };\n    return oauth1Client;\n}\nconst oAuth1TokenStore = new Map();\nexports.oAuth1TokenStore = oAuth1TokenStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC1sZWdhY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQixHQUFHRTtBQUN2QkYsd0JBQXdCLEdBQUcsS0FBSztBQUVoQyxJQUFJSSxTQUFTQyxtQkFBT0EsQ0FBQyxrREFBTztBQUU1QixTQUFTSCxhQUFhSSxPQUFPO0lBQzNCLElBQUlDLG1CQUFtQkM7SUFFdkIsTUFBTUMsV0FBV0gsUUFBUUcsUUFBUTtJQUNqQyxNQUFNQyxlQUFlLElBQUlOLE9BQU9PLEtBQUssQ0FBQ0YsU0FBU0csZUFBZSxFQUFFSCxTQUFTSSxjQUFjLEVBQUVKLFNBQVNLLFFBQVEsRUFBRUwsU0FBU00sWUFBWSxFQUFFLENBQUNSLG9CQUFvQkUsU0FBU08sT0FBTyxNQUFNLFFBQVFULHNCQUFzQixLQUFLLElBQUlBLG9CQUFvQixPQUFPRSxTQUFTUSxXQUFXLEVBQUUsQ0FBQ1QscUJBQXFCQyxTQUFTUyxRQUFRLE1BQU0sUUFBUVYsdUJBQXVCLEtBQUssSUFBSUEscUJBQXFCO0lBQ2hYLE1BQU1XLGNBQWNULGFBQWFVLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDWDtJQUUxQ0EsYUFBYVUsR0FBRyxHQUFHLE9BQU8sR0FBR0U7UUFDM0IsT0FBTyxNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7WUFDakNOLGVBQWVHLE1BQU0sQ0FBQ0ksT0FBT0M7Z0JBQzNCLElBQUlELE9BQU87b0JBQ1QsT0FBT0QsT0FBT0M7Z0JBQ2hCO2dCQUVBRixRQUFRRztZQUNWO1FBQ0Y7SUFDRjtJQUVBLE1BQU1DLCtCQUErQmxCLGFBQWFtQixtQkFBbUIsQ0FBQ1IsSUFBSSxDQUFDWDtJQUUzRUEsYUFBYW1CLG1CQUFtQixHQUFHLE9BQU8sR0FBR1A7UUFDM0MsT0FBTyxNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7WUFDakNHLGdDQUFnQ04sTUFBTSxDQUFDSSxPQUFPSSxhQUFhQztnQkFDekQsSUFBSUwsT0FBTztvQkFDVCxPQUFPRCxPQUFPQztnQkFDaEI7Z0JBRUFGLFFBQVE7b0JBQ05NO29CQUNBQztnQkFDRjtZQUNGO1FBQ0Y7SUFDRjtJQUVBLE1BQU1DLCtCQUErQnRCLGFBQWF1QixvQkFBb0IsQ0FBQ1osSUFBSSxDQUFDWDtJQUU1RUEsYUFBYXVCLG9CQUFvQixHQUFHLE9BQU9DLFNBQVMsQ0FBQyxDQUFDO1FBQ3BELE9BQU8sTUFBTSxJQUFJWCxRQUFRLENBQUNDLFNBQVNDO1lBQ2pDTyw2QkFBNkJFLFFBQVEsQ0FBQ1IsT0FBT0ksYUFBYUMsb0JBQW9CRztnQkFDNUUsSUFBSVIsT0FBTztvQkFDVCxPQUFPRCxPQUFPQztnQkFDaEI7Z0JBRUFGLFFBQVE7b0JBQ05NO29CQUNBQztvQkFDQUc7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPeEI7QUFDVDtBQUVBLE1BQU1QLG1CQUFtQixJQUFJZ0M7QUFDN0JuQyx3QkFBd0IsR0FBR0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC1sZWdhY3kuanM/ODZjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMub0F1dGgxQ2xpZW50ID0gb0F1dGgxQ2xpZW50O1xuZXhwb3J0cy5vQXV0aDFUb2tlblN0b3JlID0gdm9pZCAwO1xuXG52YXIgX29hdXRoID0gcmVxdWlyZShcIm9hdXRoXCIpO1xuXG5mdW5jdGlvbiBvQXV0aDFDbGllbnQob3B0aW9ucykge1xuICB2YXIgX3Byb3ZpZGVyJHZlcnNpb24sIF9wcm92aWRlciRlbmNvZGluZztcblxuICBjb25zdCBwcm92aWRlciA9IG9wdGlvbnMucHJvdmlkZXI7XG4gIGNvbnN0IG9hdXRoMUNsaWVudCA9IG5ldyBfb2F1dGguT0F1dGgocHJvdmlkZXIucmVxdWVzdFRva2VuVXJsLCBwcm92aWRlci5hY2Nlc3NUb2tlblVybCwgcHJvdmlkZXIuY2xpZW50SWQsIHByb3ZpZGVyLmNsaWVudFNlY3JldCwgKF9wcm92aWRlciR2ZXJzaW9uID0gcHJvdmlkZXIudmVyc2lvbikgIT09IG51bGwgJiYgX3Byb3ZpZGVyJHZlcnNpb24gIT09IHZvaWQgMCA/IF9wcm92aWRlciR2ZXJzaW9uIDogXCIxLjBcIiwgcHJvdmlkZXIuY2FsbGJhY2tVcmwsIChfcHJvdmlkZXIkZW5jb2RpbmcgPSBwcm92aWRlci5lbmNvZGluZykgIT09IG51bGwgJiYgX3Byb3ZpZGVyJGVuY29kaW5nICE9PSB2b2lkIDAgPyBfcHJvdmlkZXIkZW5jb2RpbmcgOiBcIkhNQUMtU0hBMVwiKTtcbiAgY29uc3Qgb3JpZ2luYWxHZXQgPSBvYXV0aDFDbGllbnQuZ2V0LmJpbmQob2F1dGgxQ2xpZW50KTtcblxuICBvYXV0aDFDbGllbnQuZ2V0ID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXQoLi4uYXJncywgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBvcmlnaW5hbEdldE9BdXRoMUFjY2Vzc1Rva2VuID0gb2F1dGgxQ2xpZW50LmdldE9BdXRoQWNjZXNzVG9rZW4uYmluZChvYXV0aDFDbGllbnQpO1xuXG4gIG9hdXRoMUNsaWVudC5nZXRPQXV0aEFjY2Vzc1Rva2VuID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXRPQXV0aDFBY2Nlc3NUb2tlbiguLi5hcmdzLCAoZXJyb3IsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICBvYXV0aF90b2tlbixcbiAgICAgICAgICBvYXV0aF90b2tlbl9zZWNyZXRcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBvcmlnaW5hbEdldE9BdXRoUmVxdWVzdFRva2VuID0gb2F1dGgxQ2xpZW50LmdldE9BdXRoUmVxdWVzdFRva2VuLmJpbmQob2F1dGgxQ2xpZW50KTtcblxuICBvYXV0aDFDbGllbnQuZ2V0T0F1dGhSZXF1ZXN0VG9rZW4gPSBhc3luYyAocGFyYW1zID0ge30pID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXRPQXV0aFJlcXVlc3RUb2tlbihwYXJhbXMsIChlcnJvciwgb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgcGFyYW1zKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgb2F1dGhfdG9rZW4sXG4gICAgICAgICAgb2F1dGhfdG9rZW5fc2VjcmV0LFxuICAgICAgICAgIHBhcmFtc1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBvYXV0aDFDbGllbnQ7XG59XG5cbmNvbnN0IG9BdXRoMVRva2VuU3RvcmUgPSBuZXcgTWFwKCk7XG5leHBvcnRzLm9BdXRoMVRva2VuU3RvcmUgPSBvQXV0aDFUb2tlblN0b3JlOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm9BdXRoMUNsaWVudCIsIm9BdXRoMVRva2VuU3RvcmUiLCJfb2F1dGgiLCJyZXF1aXJlIiwib3B0aW9ucyIsIl9wcm92aWRlciR2ZXJzaW9uIiwiX3Byb3ZpZGVyJGVuY29kaW5nIiwicHJvdmlkZXIiLCJvYXV0aDFDbGllbnQiLCJPQXV0aCIsInJlcXVlc3RUb2tlblVybCIsImFjY2Vzc1Rva2VuVXJsIiwiY2xpZW50SWQiLCJjbGllbnRTZWNyZXQiLCJ2ZXJzaW9uIiwiY2FsbGJhY2tVcmwiLCJlbmNvZGluZyIsIm9yaWdpbmFsR2V0IiwiZ2V0IiwiYmluZCIsImFyZ3MiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImVycm9yIiwicmVzdWx0Iiwib3JpZ2luYWxHZXRPQXV0aDFBY2Nlc3NUb2tlbiIsImdldE9BdXRoQWNjZXNzVG9rZW4iLCJvYXV0aF90b2tlbiIsIm9hdXRoX3Rva2VuX3NlY3JldCIsIm9yaWdpbmFsR2V0T0F1dGhSZXF1ZXN0VG9rZW4iLCJnZXRPQXV0aFJlcXVlc3RUb2tlbiIsInBhcmFtcyIsIk1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/client.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.openidClient = openidClient;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(rsc)/./node_modules/openid-client/lib/index.js\");\nasync function openidClient(options) {\n    const provider = options.provider;\n    if (provider.httpOptions) _openidClient.custom.setHttpOptionsDefaults(provider.httpOptions);\n    let issuer;\n    if (provider.wellKnown) {\n        issuer = await _openidClient.Issuer.discover(provider.wellKnown);\n    } else {\n        var _provider$authorizati, _provider$token, _provider$userinfo;\n        issuer = new _openidClient.Issuer({\n            issuer: provider.issuer,\n            authorization_endpoint: (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.url,\n            token_endpoint: (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.url,\n            userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url,\n            jwks_uri: provider.jwks_endpoint\n        });\n    }\n    const client = new issuer.Client({\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        redirect_uris: [\n            provider.callbackUrl\n        ],\n        ...provider.client\n    }, provider.jwks);\n    client[_openidClient.custom.clock_tolerance] = 10;\n    return client;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsb0JBQW9CLEdBQUdFO0FBRXZCLElBQUlDLGdCQUFnQkMsbUJBQU9BLENBQUMsc0VBQWU7QUFFM0MsZUFBZUYsYUFBYUcsT0FBTztJQUNqQyxNQUFNQyxXQUFXRCxRQUFRQyxRQUFRO0lBQ2pDLElBQUlBLFNBQVNDLFdBQVcsRUFBRUosY0FBY0ssTUFBTSxDQUFDQyxzQkFBc0IsQ0FBQ0gsU0FBU0MsV0FBVztJQUMxRixJQUFJRztJQUVKLElBQUlKLFNBQVNLLFNBQVMsRUFBRTtRQUN0QkQsU0FBUyxNQUFNUCxjQUFjUyxNQUFNLENBQUNDLFFBQVEsQ0FBQ1AsU0FBU0ssU0FBUztJQUNqRSxPQUFPO1FBQ0wsSUFBSUcsdUJBQXVCQyxpQkFBaUJDO1FBRTVDTixTQUFTLElBQUlQLGNBQWNTLE1BQU0sQ0FBQztZQUNoQ0YsUUFBUUosU0FBU0ksTUFBTTtZQUN2Qk8sd0JBQXdCLENBQUNILHdCQUF3QlIsU0FBU1ksYUFBYSxNQUFNLFFBQVFKLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JLLEdBQUc7WUFDMUpDLGdCQUFnQixDQUFDTCxrQkFBa0JULFNBQVNlLEtBQUssTUFBTSxRQUFRTixvQkFBb0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsZ0JBQWdCSSxHQUFHO1lBQ3hIRyxtQkFBbUIsQ0FBQ04scUJBQXFCVixTQUFTaUIsUUFBUSxNQUFNLFFBQVFQLHVCQUF1QixLQUFLLElBQUksS0FBSyxJQUFJQSxtQkFBbUJHLEdBQUc7WUFDdklLLFVBQVVsQixTQUFTbUIsYUFBYTtRQUNsQztJQUNGO0lBRUEsTUFBTUMsU0FBUyxJQUFJaEIsT0FBT2lCLE1BQU0sQ0FBQztRQUMvQkMsV0FBV3RCLFNBQVN1QixRQUFRO1FBQzVCQyxlQUFleEIsU0FBU3lCLFlBQVk7UUFDcENDLGVBQWU7WUFBQzFCLFNBQVMyQixXQUFXO1NBQUM7UUFDckMsR0FBRzNCLFNBQVNvQixNQUFNO0lBQ3BCLEdBQUdwQixTQUFTNEIsSUFBSTtJQUNoQlIsTUFBTSxDQUFDdkIsY0FBY0ssTUFBTSxDQUFDMkIsZUFBZSxDQUFDLEdBQUc7SUFDL0MsT0FBT1Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvb2F1dGgvY2xpZW50LmpzPzAwM2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm9wZW5pZENsaWVudCA9IG9wZW5pZENsaWVudDtcblxudmFyIF9vcGVuaWRDbGllbnQgPSByZXF1aXJlKFwib3BlbmlkLWNsaWVudFwiKTtcblxuYXN5bmMgZnVuY3Rpb24gb3BlbmlkQ2xpZW50KG9wdGlvbnMpIHtcbiAgY29uc3QgcHJvdmlkZXIgPSBvcHRpb25zLnByb3ZpZGVyO1xuICBpZiAocHJvdmlkZXIuaHR0cE9wdGlvbnMpIF9vcGVuaWRDbGllbnQuY3VzdG9tLnNldEh0dHBPcHRpb25zRGVmYXVsdHMocHJvdmlkZXIuaHR0cE9wdGlvbnMpO1xuICBsZXQgaXNzdWVyO1xuXG4gIGlmIChwcm92aWRlci53ZWxsS25vd24pIHtcbiAgICBpc3N1ZXIgPSBhd2FpdCBfb3BlbmlkQ2xpZW50Lklzc3Vlci5kaXNjb3Zlcihwcm92aWRlci53ZWxsS25vd24pO1xuICB9IGVsc2Uge1xuICAgIHZhciBfcHJvdmlkZXIkYXV0aG9yaXphdGksIF9wcm92aWRlciR0b2tlbiwgX3Byb3ZpZGVyJHVzZXJpbmZvO1xuXG4gICAgaXNzdWVyID0gbmV3IF9vcGVuaWRDbGllbnQuSXNzdWVyKHtcbiAgICAgIGlzc3VlcjogcHJvdmlkZXIuaXNzdWVyLFxuICAgICAgYXV0aG9yaXphdGlvbl9lbmRwb2ludDogKF9wcm92aWRlciRhdXRob3JpemF0aSA9IHByb3ZpZGVyLmF1dGhvcml6YXRpb24pID09PSBudWxsIHx8IF9wcm92aWRlciRhdXRob3JpemF0aSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb3ZpZGVyJGF1dGhvcml6YXRpLnVybCxcbiAgICAgIHRva2VuX2VuZHBvaW50OiAoX3Byb3ZpZGVyJHRva2VuID0gcHJvdmlkZXIudG9rZW4pID09PSBudWxsIHx8IF9wcm92aWRlciR0b2tlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb3ZpZGVyJHRva2VuLnVybCxcbiAgICAgIHVzZXJpbmZvX2VuZHBvaW50OiAoX3Byb3ZpZGVyJHVzZXJpbmZvID0gcHJvdmlkZXIudXNlcmluZm8pID09PSBudWxsIHx8IF9wcm92aWRlciR1c2VyaW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb3ZpZGVyJHVzZXJpbmZvLnVybCxcbiAgICAgIGp3a3NfdXJpOiBwcm92aWRlci5qd2tzX2VuZHBvaW50XG4gICAgfSk7XG4gIH1cblxuICBjb25zdCBjbGllbnQgPSBuZXcgaXNzdWVyLkNsaWVudCh7XG4gICAgY2xpZW50X2lkOiBwcm92aWRlci5jbGllbnRJZCxcbiAgICBjbGllbnRfc2VjcmV0OiBwcm92aWRlci5jbGllbnRTZWNyZXQsXG4gICAgcmVkaXJlY3RfdXJpczogW3Byb3ZpZGVyLmNhbGxiYWNrVXJsXSxcbiAgICAuLi5wcm92aWRlci5jbGllbnRcbiAgfSwgcHJvdmlkZXIuandrcyk7XG4gIGNsaWVudFtfb3BlbmlkQ2xpZW50LmN1c3RvbS5jbG9ja190b2xlcmFuY2VdID0gMTA7XG4gIHJldHVybiBjbGllbnQ7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwib3BlbmlkQ2xpZW50IiwiX29wZW5pZENsaWVudCIsInJlcXVpcmUiLCJvcHRpb25zIiwicHJvdmlkZXIiLCJodHRwT3B0aW9ucyIsImN1c3RvbSIsInNldEh0dHBPcHRpb25zRGVmYXVsdHMiLCJpc3N1ZXIiLCJ3ZWxsS25vd24iLCJJc3N1ZXIiLCJkaXNjb3ZlciIsIl9wcm92aWRlciRhdXRob3JpemF0aSIsIl9wcm92aWRlciR0b2tlbiIsIl9wcm92aWRlciR1c2VyaW5mbyIsImF1dGhvcml6YXRpb25fZW5kcG9pbnQiLCJhdXRob3JpemF0aW9uIiwidXJsIiwidG9rZW5fZW5kcG9pbnQiLCJ0b2tlbiIsInVzZXJpbmZvX2VuZHBvaW50IiwidXNlcmluZm8iLCJqd2tzX3VyaSIsImp3a3NfZW5kcG9pbnQiLCJjbGllbnQiLCJDbGllbnQiLCJjbGllbnRfaWQiLCJjbGllbnRJZCIsImNsaWVudF9zZWNyZXQiLCJjbGllbnRTZWNyZXQiLCJyZWRpcmVjdF91cmlzIiwiY2FsbGJhY2tVcmwiLCJqd2tzIiwiY2xvY2tfdG9sZXJhbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/providers.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/providers.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseProviders;\nvar _merge = __webpack_require__(/*! ../../utils/merge */ \"(rsc)/./node_modules/next-auth/utils/merge.js\");\nfunction parseProviders(params) {\n    const { url, providerId } = params;\n    const providers = params.providers.map(({ options: userOptions, ...rest })=>{\n        var _ref;\n        if (rest.type === \"oauth\") {\n            var _normalizedUserOption;\n            const normalizedOptions = normalizeOAuthOptions(rest);\n            const normalizedUserOptions = normalizeOAuthOptions(userOptions, true);\n            const id = (_normalizedUserOption = normalizedUserOptions === null || normalizedUserOptions === void 0 ? void 0 : normalizedUserOptions.id) !== null && _normalizedUserOption !== void 0 ? _normalizedUserOption : rest.id;\n            return (0, _merge.merge)(normalizedOptions, {\n                ...normalizedUserOptions,\n                signinUrl: `${url}/signin/${id}`,\n                callbackUrl: `${url}/callback/${id}`\n            });\n        }\n        const id = (_ref = userOptions === null || userOptions === void 0 ? void 0 : userOptions.id) !== null && _ref !== void 0 ? _ref : rest.id;\n        return (0, _merge.merge)(rest, {\n            ...userOptions,\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`\n        });\n    });\n    return {\n        providers,\n        provider: providers.find(({ id })=>id === providerId)\n    };\n}\nfunction normalizeOAuthOptions(oauthOptions, isUserOptions = false) {\n    var _normalized$version;\n    if (!oauthOptions) return;\n    const normalized = Object.entries(oauthOptions).reduce((acc, [key, value])=>{\n        if ([\n            \"authorization\",\n            \"token\",\n            \"userinfo\"\n        ].includes(key) && typeof value === \"string\") {\n            var _url$searchParams;\n            const url = new URL(value);\n            acc[key] = {\n                url: `${url.origin}${url.pathname}`,\n                params: Object.fromEntries((_url$searchParams = url.searchParams) !== null && _url$searchParams !== void 0 ? _url$searchParams : [])\n            };\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n    if (!isUserOptions && !((_normalized$version = normalized.version) !== null && _normalized$version !== void 0 && _normalized$version.startsWith(\"1.\"))) {\n        var _ref2, _normalized$idToken, _normalized$wellKnown, _normalized$authoriza, _normalized$authoriza2, _normalized$authoriza3;\n        normalized.idToken = Boolean((_ref2 = (_normalized$idToken = normalized.idToken) !== null && _normalized$idToken !== void 0 ? _normalized$idToken : (_normalized$wellKnown = normalized.wellKnown) === null || _normalized$wellKnown === void 0 ? void 0 : _normalized$wellKnown.includes(\"openid-configuration\")) !== null && _ref2 !== void 0 ? _ref2 : (_normalized$authoriza = normalized.authorization) === null || _normalized$authoriza === void 0 ? void 0 : (_normalized$authoriza2 = _normalized$authoriza.params) === null || _normalized$authoriza2 === void 0 ? void 0 : (_normalized$authoriza3 = _normalized$authoriza2.scope) === null || _normalized$authoriza3 === void 0 ? void 0 : _normalized$authoriza3.includes(\"openid\"));\n        if (!normalized.checks) normalized.checks = [\n            \"state\"\n        ];\n    }\n    return normalized;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/providers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/next-auth/core/lib/utils.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createSecret = createSecret;\nexports.fromDate = fromDate;\nexports.hashToken = hashToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\nfunction hashToken(token, options) {\n    var _provider$secret;\n    const { provider, secret } = options;\n    return (0, _crypto.createHash)(\"sha256\").update(`${token}${(_provider$secret = provider.secret) !== null && _provider$secret !== void 0 ? _provider$secret : secret}`).digest(\"hex\");\n}\nfunction createSecret(params) {\n    var _authOptions$secret;\n    const { authOptions, url } = params;\n    return (_authOptions$secret = authOptions.secret) !== null && _authOptions$secret !== void 0 ? _authOptions$secret : (0, _crypto.createHash)(\"sha256\").update(JSON.stringify({\n        ...url,\n        ...authOptions\n    })).digest(\"hex\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxvQkFBb0IsR0FBR0U7QUFDdkJGLGdCQUFnQixHQUFHRztBQUNuQkgsaUJBQWlCLEdBQUdJO0FBRXBCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLHNCQUFRO0FBRTlCLFNBQVNILFNBQVNJLElBQUksRUFBRUMsT0FBT0MsS0FBS0MsR0FBRyxFQUFFO0lBQ3ZDLE9BQU8sSUFBSUQsS0FBS0QsT0FBT0QsT0FBTztBQUNoQztBQUVBLFNBQVNILFVBQVVPLEtBQUssRUFBRUMsT0FBTztJQUMvQixJQUFJQztJQUVKLE1BQU0sRUFDSkMsUUFBUSxFQUNSQyxNQUFNLEVBQ1AsR0FBR0g7SUFDSixPQUFPLENBQUMsR0FBR1AsUUFBUVcsVUFBVSxFQUFFLFVBQVVDLE1BQU0sQ0FBQyxDQUFDLEVBQUVOLE1BQU0sRUFBRSxDQUFDRSxtQkFBbUJDLFNBQVNDLE1BQU0sTUFBTSxRQUFRRixxQkFBcUIsS0FBSyxJQUFJQSxtQkFBbUJFLE9BQU8sQ0FBQyxFQUFFRyxNQUFNLENBQUM7QUFDaEw7QUFFQSxTQUFTaEIsYUFBYWlCLE1BQU07SUFDMUIsSUFBSUM7SUFFSixNQUFNLEVBQ0pDLFdBQVcsRUFDWEMsR0FBRyxFQUNKLEdBQUdIO0lBQ0osT0FBTyxDQUFDQyxzQkFBc0JDLFlBQVlOLE1BQU0sTUFBTSxRQUFRSyx3QkFBd0IsS0FBSyxJQUFJQSxzQkFBc0IsQ0FBQyxHQUFHZixRQUFRVyxVQUFVLEVBQUUsVUFBVUMsTUFBTSxDQUFDTSxLQUFLQyxTQUFTLENBQUM7UUFBRSxHQUFHRixHQUFHO1FBQ25MLEdBQUdELFdBQVc7SUFDaEIsSUFBSUgsTUFBTSxDQUFDO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL3V0aWxzLmpzPzIzNjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNyZWF0ZVNlY3JldCA9IGNyZWF0ZVNlY3JldDtcbmV4cG9ydHMuZnJvbURhdGUgPSBmcm9tRGF0ZTtcbmV4cG9ydHMuaGFzaFRva2VuID0gaGFzaFRva2VuO1xuXG52YXIgX2NyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5cbmZ1bmN0aW9uIGZyb21EYXRlKHRpbWUsIGRhdGUgPSBEYXRlLm5vdygpKSB7XG4gIHJldHVybiBuZXcgRGF0ZShkYXRlICsgdGltZSAqIDEwMDApO1xufVxuXG5mdW5jdGlvbiBoYXNoVG9rZW4odG9rZW4sIG9wdGlvbnMpIHtcbiAgdmFyIF9wcm92aWRlciRzZWNyZXQ7XG5cbiAgY29uc3Qge1xuICAgIHByb3ZpZGVyLFxuICAgIHNlY3JldFxuICB9ID0gb3B0aW9ucztcbiAgcmV0dXJuICgwLCBfY3J5cHRvLmNyZWF0ZUhhc2gpKFwic2hhMjU2XCIpLnVwZGF0ZShgJHt0b2tlbn0keyhfcHJvdmlkZXIkc2VjcmV0ID0gcHJvdmlkZXIuc2VjcmV0KSAhPT0gbnVsbCAmJiBfcHJvdmlkZXIkc2VjcmV0ICE9PSB2b2lkIDAgPyBfcHJvdmlkZXIkc2VjcmV0IDogc2VjcmV0fWApLmRpZ2VzdChcImhleFwiKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlU2VjcmV0KHBhcmFtcykge1xuICB2YXIgX2F1dGhPcHRpb25zJHNlY3JldDtcblxuICBjb25zdCB7XG4gICAgYXV0aE9wdGlvbnMsXG4gICAgdXJsXG4gIH0gPSBwYXJhbXM7XG4gIHJldHVybiAoX2F1dGhPcHRpb25zJHNlY3JldCA9IGF1dGhPcHRpb25zLnNlY3JldCkgIT09IG51bGwgJiYgX2F1dGhPcHRpb25zJHNlY3JldCAhPT0gdm9pZCAwID8gX2F1dGhPcHRpb25zJHNlY3JldCA6ICgwLCBfY3J5cHRvLmNyZWF0ZUhhc2gpKFwic2hhMjU2XCIpLnVwZGF0ZShKU09OLnN0cmluZ2lmeSh7IC4uLnVybCxcbiAgICAuLi5hdXRoT3B0aW9uc1xuICB9KSkuZGlnZXN0KFwiaGV4XCIpO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZVNlY3JldCIsImZyb21EYXRlIiwiaGFzaFRva2VuIiwiX2NyeXB0byIsInJlcXVpcmUiLCJ0aW1lIiwiZGF0ZSIsIkRhdGUiLCJub3ciLCJ0b2tlbiIsIm9wdGlvbnMiLCJfcHJvdmlkZXIkc2VjcmV0IiwicHJvdmlkZXIiLCJzZWNyZXQiLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwicGFyYW1zIiwiX2F1dGhPcHRpb25zJHNlY3JldCIsImF1dGhPcHRpb25zIiwidXJsIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/error.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = ErrorPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nfunction ErrorPage(props) {\n    var _errors$error$toLower;\n    const { url, error = \"default\", theme } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"site\",\n                href: url === null || url === void 0 ? void 0 : url.origin\n            }, url === null || url === void 0 ? void 0 : url.host))\n        },\n        configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"There is a problem with the server configuration.\"), (0, _preact.h)(\"p\", null, \"Check the server logs for more information.\"))\n        },\n        accessdenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"You do not have permission to sign in.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl\n            }, \"Sign in\")))\n        },\n        verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"The sign in link is no longer valid.\"), (0, _preact.h)(\"p\", null, \"It may have been used already or it may have expired.\")),\n            signin: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl\n            }, \"Sign in\"))\n        }\n    };\n    const { status, heading, message, signin } = (_errors$error$toLower = errors[error.toLowerCase()]) !== null && _errors$error$toLower !== void 0 ? _errors$error$toLower : errors.default;\n    return {\n        status,\n        html: (0, _preact.h)(\"div\", {\n            className: \"error\"\n        }, (theme === null || theme === void 0 ? void 0 : theme.brandColor) && (0, _preact.h)(\"style\", {\n            dangerouslySetInnerHTML: {\n                __html: `\n        :root {\n          --brand-color: ${theme === null || theme === void 0 ? void 0 : theme.brandColor}\n        }\n      `\n            }\n        }), (0, _preact.h)(\"div\", {\n            className: \"card\"\n        }, (theme === null || theme === void 0 ? void 0 : theme.logo) && (0, _preact.h)(\"img\", {\n            src: theme.logo,\n            alt: \"Logo\",\n            className: \"logo\"\n        }), (0, _preact.h)(\"h1\", null, heading), (0, _preact.h)(\"div\", {\n            className: \"message\"\n        }, message), signin))\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHO0FBRWxCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLDBEQUFRO0FBRTlCLFNBQVNGLFVBQVVHLEtBQUs7SUFDdEIsSUFBSUM7SUFFSixNQUFNLEVBQ0pDLEdBQUcsRUFDSEMsUUFBUSxTQUFTLEVBQ2pCQyxLQUFLLEVBQ04sR0FBR0o7SUFDSixNQUFNSyxnQkFBZ0IsQ0FBQyxFQUFFSCxJQUFJLE9BQU8sQ0FBQztJQUNyQyxNQUFNSSxTQUFTO1FBQ2JWLFNBQVM7WUFDUFcsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVMsQ0FBQyxHQUFHWCxRQUFRWSxDQUFDLEVBQUUsS0FBSyxNQUFNLENBQUMsR0FBR1osUUFBUVksQ0FBQyxFQUFFLEtBQUs7Z0JBQ3JEQyxXQUFXO2dCQUNYQyxNQUFNVixRQUFRLFFBQVFBLFFBQVEsS0FBSyxJQUFJLEtBQUssSUFBSUEsSUFBSVcsTUFBTTtZQUM1RCxHQUFHWCxRQUFRLFFBQVFBLFFBQVEsS0FBSyxJQUFJLEtBQUssSUFBSUEsSUFBSVksSUFBSTtRQUN2RDtRQUNBQyxlQUFlO1lBQ2JSLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxTQUFTLENBQUMsR0FBR1gsUUFBUVksQ0FBQyxFQUFFLE9BQU8sTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUMsRUFBRSxLQUFLLE1BQU0sc0RBQXNELENBQUMsR0FBR1osUUFBUVksQ0FBQyxFQUFFLEtBQUssTUFBTTtRQUNqSjtRQUNBTSxjQUFjO1lBQ1pULFFBQVE7WUFDUkMsU0FBUztZQUNUQyxTQUFTLENBQUMsR0FBR1gsUUFBUVksQ0FBQyxFQUFFLE9BQU8sTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUMsRUFBRSxLQUFLLE1BQU0sMkNBQTJDLENBQUMsR0FBR1osUUFBUVksQ0FBQyxFQUFFLEtBQUssTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUMsRUFBRSxLQUFLO2dCQUN0SkMsV0FBVztnQkFDWEMsTUFBTVA7WUFDUixHQUFHO1FBQ0w7UUFDQVksY0FBYztZQUNaVixRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBUyxDQUFDLEdBQUdYLFFBQVFZLENBQUMsRUFBRSxPQUFPLE1BQU0sQ0FBQyxHQUFHWixRQUFRWSxDQUFDLEVBQUUsS0FBSyxNQUFNLHlDQUF5QyxDQUFDLEdBQUdaLFFBQVFZLENBQUMsRUFBRSxLQUFLLE1BQU07WUFDbElRLFFBQVEsQ0FBQyxHQUFHcEIsUUFBUVksQ0FBQyxFQUFFLEtBQUssTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUMsRUFBRSxLQUFLO2dCQUNwREMsV0FBVztnQkFDWEMsTUFBTVA7WUFDUixHQUFHO1FBQ0w7SUFDRjtJQUNBLE1BQU0sRUFDSkUsTUFBTSxFQUNOQyxPQUFPLEVBQ1BDLE9BQU8sRUFDUFMsTUFBTSxFQUNQLEdBQUcsQ0FBQ2pCLHdCQUF3QkssTUFBTSxDQUFDSCxNQUFNZ0IsV0FBVyxHQUFHLE1BQU0sUUFBUWxCLDBCQUEwQixLQUFLLElBQUlBLHdCQUF3QkssT0FBT1YsT0FBTztJQUMvSSxPQUFPO1FBQ0xXO1FBQ0FhLE1BQU0sQ0FBQyxHQUFHdEIsUUFBUVksQ0FBQyxFQUFFLE9BQU87WUFDMUJDLFdBQVc7UUFDYixHQUFHLENBQUNQLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNaUIsVUFBVSxLQUFLLENBQUMsR0FBR3ZCLFFBQVFZLENBQUMsRUFBRSxTQUFTO1lBQzdGWSx5QkFBeUI7Z0JBQ3ZCQyxRQUFRLENBQUM7O3lCQUVRLEVBQUVuQixVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTWlCLFVBQVUsQ0FBQzs7TUFFcEYsQ0FBQztZQUNEO1FBQ0YsSUFBSSxDQUFDLEdBQUd2QixRQUFRWSxDQUFDLEVBQUUsT0FBTztZQUN4QkMsV0FBVztRQUNiLEdBQUcsQ0FBQ1AsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1vQixJQUFJLEtBQUssQ0FBQyxHQUFHMUIsUUFBUVksQ0FBQyxFQUFFLE9BQU87WUFDckZlLEtBQUtyQixNQUFNb0IsSUFBSTtZQUNmRSxLQUFLO1lBQ0xmLFdBQVc7UUFDYixJQUFJLENBQUMsR0FBR2IsUUFBUVksQ0FBQyxFQUFFLE1BQU0sTUFBTUYsVUFBVSxDQUFDLEdBQUdWLFFBQVFZLENBQUMsRUFBRSxPQUFPO1lBQzdEQyxXQUFXO1FBQ2IsR0FBR0YsVUFBVVM7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL2Vycm9yLmpzPzJhZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBFcnJvclBhZ2U7XG5cbnZhciBfcHJlYWN0ID0gcmVxdWlyZShcInByZWFjdFwiKTtcblxuZnVuY3Rpb24gRXJyb3JQYWdlKHByb3BzKSB7XG4gIHZhciBfZXJyb3JzJGVycm9yJHRvTG93ZXI7XG5cbiAgY29uc3Qge1xuICAgIHVybCxcbiAgICBlcnJvciA9IFwiZGVmYXVsdFwiLFxuICAgIHRoZW1lXG4gIH0gPSBwcm9wcztcbiAgY29uc3Qgc2lnbmluUGFnZVVybCA9IGAke3VybH0vc2lnbmluYDtcbiAgY29uc3QgZXJyb3JzID0ge1xuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHN0YXR1czogMjAwLFxuICAgICAgaGVhZGluZzogXCJFcnJvclwiLFxuICAgICAgbWVzc2FnZTogKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsICgwLCBfcHJlYWN0LmgpKFwiYVwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJzaXRlXCIsXG4gICAgICAgIGhyZWY6IHVybCA9PT0gbnVsbCB8fCB1cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHVybC5vcmlnaW5cbiAgICAgIH0sIHVybCA9PT0gbnVsbCB8fCB1cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHVybC5ob3N0KSlcbiAgICB9LFxuICAgIGNvbmZpZ3VyYXRpb246IHtcbiAgICAgIHN0YXR1czogNTAwLFxuICAgICAgaGVhZGluZzogXCJTZXJ2ZXIgZXJyb3JcIixcbiAgICAgIG1lc3NhZ2U6ICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIG51bGwsICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIlRoZXJlIGlzIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIgY29uZmlndXJhdGlvbi5cIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIkNoZWNrIHRoZSBzZXJ2ZXIgbG9ncyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIikpXG4gICAgfSxcbiAgICBhY2Nlc3NkZW5pZWQ6IHtcbiAgICAgIHN0YXR1czogNDAzLFxuICAgICAgaGVhZGluZzogXCJBY2Nlc3MgRGVuaWVkXCIsXG4gICAgICBtZXNzYWdlOiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBzaWduIGluLlwiKSwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsICgwLCBfcHJlYWN0LmgpKFwiYVwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJidXR0b25cIixcbiAgICAgICAgaHJlZjogc2lnbmluUGFnZVVybFxuICAgICAgfSwgXCJTaWduIGluXCIpKSlcbiAgICB9LFxuICAgIHZlcmlmaWNhdGlvbjoge1xuICAgICAgc3RhdHVzOiA0MDMsXG4gICAgICBoZWFkaW5nOiBcIlVuYWJsZSB0byBzaWduIGluXCIsXG4gICAgICBtZXNzYWdlOiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJUaGUgc2lnbiBpbiBsaW5rIGlzIG5vIGxvbmdlciB2YWxpZC5cIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIkl0IG1heSBoYXZlIGJlZW4gdXNlZCBhbHJlYWR5IG9yIGl0IG1heSBoYXZlIGV4cGlyZWQuXCIpKSxcbiAgICAgIHNpZ25pbjogKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsICgwLCBfcHJlYWN0LmgpKFwiYVwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJidXR0b25cIixcbiAgICAgICAgaHJlZjogc2lnbmluUGFnZVVybFxuICAgICAgfSwgXCJTaWduIGluXCIpKVxuICAgIH1cbiAgfTtcbiAgY29uc3Qge1xuICAgIHN0YXR1cyxcbiAgICBoZWFkaW5nLFxuICAgIG1lc3NhZ2UsXG4gICAgc2lnbmluXG4gIH0gPSAoX2Vycm9ycyRlcnJvciR0b0xvd2VyID0gZXJyb3JzW2Vycm9yLnRvTG93ZXJDYXNlKCldKSAhPT0gbnVsbCAmJiBfZXJyb3JzJGVycm9yJHRvTG93ZXIgIT09IHZvaWQgMCA/IF9lcnJvcnMkZXJyb3IkdG9Mb3dlciA6IGVycm9ycy5kZWZhdWx0O1xuICByZXR1cm4ge1xuICAgIHN0YXR1cyxcbiAgICBodG1sOiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiZXJyb3JcIlxuICAgIH0sICh0aGVtZSA9PT0gbnVsbCB8fCB0aGVtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGhlbWUuYnJhbmRDb2xvcikgJiYgKDAsIF9wcmVhY3QuaCkoXCJzdHlsZVwiLCB7XG4gICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmJyYW5kQ29sb3J9XG4gICAgICAgIH1cbiAgICAgIGBcbiAgICAgIH1cbiAgICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcImNhcmRcIlxuICAgIH0sICh0aGVtZSA9PT0gbnVsbCB8fCB0aGVtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGhlbWUubG9nbykgJiYgKDAsIF9wcmVhY3QuaCkoXCJpbWdcIiwge1xuICAgICAgc3JjOiB0aGVtZS5sb2dvLFxuICAgICAgYWx0OiBcIkxvZ29cIixcbiAgICAgIGNsYXNzTmFtZTogXCJsb2dvXCJcbiAgICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJoMVwiLCBudWxsLCBoZWFkaW5nKSwgKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIm1lc3NhZ2VcIlxuICAgIH0sIG1lc3NhZ2UpLCBzaWduaW4pKVxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJFcnJvclBhZ2UiLCJfcHJlYWN0IiwicmVxdWlyZSIsInByb3BzIiwiX2Vycm9ycyRlcnJvciR0b0xvd2VyIiwidXJsIiwiZXJyb3IiLCJ0aGVtZSIsInNpZ25pblBhZ2VVcmwiLCJlcnJvcnMiLCJzdGF0dXMiLCJoZWFkaW5nIiwibWVzc2FnZSIsImgiLCJjbGFzc05hbWUiLCJocmVmIiwib3JpZ2luIiwiaG9zdCIsImNvbmZpZ3VyYXRpb24iLCJhY2Nlc3NkZW5pZWQiLCJ2ZXJpZmljYXRpb24iLCJzaWduaW4iLCJ0b0xvd2VyQ2FzZSIsImh0bWwiLCJicmFuZENvbG9yIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJsb2dvIiwic3JjIiwiYWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/index.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = renderPage;\nvar _preactRenderToString = _interopRequireDefault(__webpack_require__(/*! preact-render-to-string */ \"(rsc)/./node_modules/preact-render-to-string/dist/index.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(rsc)/./node_modules/next-auth/core/pages/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(rsc)/./node_modules/next-auth/core/pages/signout.js\"));\nvar _verifyRequest = _interopRequireDefault(__webpack_require__(/*! ./verify-request */ \"(rsc)/./node_modules/next-auth/core/pages/verify-request.js\"));\nvar _error = _interopRequireDefault(__webpack_require__(/*! ./error */ \"(rsc)/./node_modules/next-auth/core/pages/error.js\"));\nvar _css = _interopRequireDefault(__webpack_require__(/*! ../../css */ \"(rsc)/./node_modules/next-auth/css/index.js\"));\nfunction renderPage(params) {\n    const { url, theme, query, cookies } = params;\n    function send({ html, title, status }) {\n        var _theme$colorScheme;\n        return {\n            cookies,\n            status,\n            headers: [\n                {\n                    key: \"Content-Type\",\n                    value: \"text/html\"\n                }\n            ],\n            body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${(0, _css.default)()}</style><title>${title}</title></head><body class=\"__next-auth-theme-${(_theme$colorScheme = theme === null || theme === void 0 ? void 0 : theme.colorScheme) !== null && _theme$colorScheme !== void 0 ? _theme$colorScheme : \"auto\"}\"><div class=\"page\">${(0, _preactRenderToString.default)(html)}</div></body></html>`\n        };\n    }\n    return {\n        signin (props) {\n            return send({\n                html: (0, _signin.default)({\n                    csrfToken: params.csrfToken,\n                    providers: params.providers,\n                    callbackUrl: params.callbackUrl,\n                    theme,\n                    ...query,\n                    ...props\n                }),\n                title: \"Sign In\"\n            });\n        },\n        signout (props) {\n            return send({\n                html: (0, _signout.default)({\n                    csrfToken: params.csrfToken,\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Sign Out\"\n            });\n        },\n        verifyRequest (props) {\n            return send({\n                html: (0, _verifyRequest.default)({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Verify Request\"\n            });\n        },\n        error (props) {\n            return send({\n                ...(0, _error.default)({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Error\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLDBIQUE4QztBQUVuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHO0FBRWxCLElBQUlDLHdCQUF3QlIsdUJBQXVCQyxtQkFBT0EsQ0FBQywyRkFBeUI7QUFFcEYsSUFBSVEsVUFBVVQsdUJBQXVCQyxtQkFBT0EsQ0FBQyxxRUFBVTtBQUV2RCxJQUFJUyxXQUFXVix1QkFBdUJDLG1CQUFPQSxDQUFDLHVFQUFXO0FBRXpELElBQUlVLGlCQUFpQlgsdUJBQXVCQyxtQkFBT0EsQ0FBQyxxRkFBa0I7QUFFdEUsSUFBSVcsU0FBU1osdUJBQXVCQyxtQkFBT0EsQ0FBQyxtRUFBUztBQUVyRCxJQUFJWSxPQUFPYix1QkFBdUJDLG1CQUFPQSxDQUFDLDhEQUFXO0FBRXJELFNBQVNNLFdBQVdPLE1BQU07SUFDeEIsTUFBTSxFQUNKQyxHQUFHLEVBQ0hDLEtBQUssRUFDTEMsS0FBSyxFQUNMQyxPQUFPLEVBQ1IsR0FBR0o7SUFFSixTQUFTSyxLQUFLLEVBQ1pDLElBQUksRUFDSkMsS0FBSyxFQUNMQyxNQUFNLEVBQ1A7UUFDQyxJQUFJQztRQUVKLE9BQU87WUFDTEw7WUFDQUk7WUFDQUUsU0FBUztnQkFBQztvQkFDUkMsS0FBSztvQkFDTHBCLE9BQU87Z0JBQ1Q7YUFBRTtZQUNGcUIsTUFBTSxDQUFDLDZMQUE2TCxFQUFFLENBQUMsR0FBR2IsS0FBS1AsT0FBTyxJQUFJLGVBQWUsRUFBRWUsTUFBTSw4Q0FBOEMsRUFBRSxDQUFDRSxxQkFBcUJQLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNVyxXQUFXLE1BQU0sUUFBUUosdUJBQXVCLEtBQUssSUFBSUEscUJBQXFCLE9BQU8sb0JBQW9CLEVBQUUsQ0FBQyxHQUFHZixzQkFBc0JGLE9BQU8sRUFBRWMsTUFBTSxvQkFBb0IsQ0FBQztRQUN0aEI7SUFDRjtJQUVBLE9BQU87UUFDTFEsUUFBT0MsS0FBSztZQUNWLE9BQU9WLEtBQUs7Z0JBQ1ZDLE1BQU0sQ0FBQyxHQUFHWCxRQUFRSCxPQUFPLEVBQUU7b0JBQ3pCd0IsV0FBV2hCLE9BQU9nQixTQUFTO29CQUMzQkMsV0FBV2pCLE9BQU9pQixTQUFTO29CQUMzQkMsYUFBYWxCLE9BQU9rQixXQUFXO29CQUMvQmhCO29CQUNBLEdBQUdDLEtBQUs7b0JBQ1IsR0FBR1ksS0FBSztnQkFDVjtnQkFDQVIsT0FBTztZQUNUO1FBQ0Y7UUFFQVksU0FBUUosS0FBSztZQUNYLE9BQU9WLEtBQUs7Z0JBQ1ZDLE1BQU0sQ0FBQyxHQUFHVixTQUFTSixPQUFPLEVBQUU7b0JBQzFCd0IsV0FBV2hCLE9BQU9nQixTQUFTO29CQUMzQmY7b0JBQ0FDO29CQUNBLEdBQUdhLEtBQUs7Z0JBQ1Y7Z0JBQ0FSLE9BQU87WUFDVDtRQUNGO1FBRUFhLGVBQWNMLEtBQUs7WUFDakIsT0FBT1YsS0FBSztnQkFDVkMsTUFBTSxDQUFDLEdBQUdULGVBQWVMLE9BQU8sRUFBRTtvQkFDaENTO29CQUNBQztvQkFDQSxHQUFHYSxLQUFLO2dCQUNWO2dCQUNBUixPQUFPO1lBQ1Q7UUFDRjtRQUVBYyxPQUFNTixLQUFLO1lBQ1QsT0FBT1YsS0FBSztnQkFBRSxHQUFHLENBQUMsR0FBR1AsT0FBT04sT0FBTyxFQUFFO29CQUNqQ1M7b0JBQ0FDO29CQUNBLEdBQUdhLEtBQUs7Z0JBQ1YsRUFBRTtnQkFDRlIsT0FBTztZQUNUO1FBQ0Y7SUFFRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL2luZGV4LmpzPzI3YjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVuZGVyUGFnZTtcblxudmFyIF9wcmVhY3RSZW5kZXJUb1N0cmluZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInByZWFjdC1yZW5kZXItdG8tc3RyaW5nXCIpKTtcblxudmFyIF9zaWduaW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NpZ25pblwiKSk7XG5cbnZhciBfc2lnbm91dCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbm91dFwiKSk7XG5cbnZhciBfdmVyaWZ5UmVxdWVzdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmVyaWZ5LXJlcXVlc3RcIikpO1xuXG52YXIgX2Vycm9yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9lcnJvclwiKSk7XG5cbnZhciBfY3NzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vY3NzXCIpKTtcblxuZnVuY3Rpb24gcmVuZGVyUGFnZShwYXJhbXMpIHtcbiAgY29uc3Qge1xuICAgIHVybCxcbiAgICB0aGVtZSxcbiAgICBxdWVyeSxcbiAgICBjb29raWVzXG4gIH0gPSBwYXJhbXM7XG5cbiAgZnVuY3Rpb24gc2VuZCh7XG4gICAgaHRtbCxcbiAgICB0aXRsZSxcbiAgICBzdGF0dXNcbiAgfSkge1xuICAgIHZhciBfdGhlbWUkY29sb3JTY2hlbWU7XG5cbiAgICByZXR1cm4ge1xuICAgICAgY29va2llcyxcbiAgICAgIHN0YXR1cyxcbiAgICAgIGhlYWRlcnM6IFt7XG4gICAgICAgIGtleTogXCJDb250ZW50LVR5cGVcIixcbiAgICAgICAgdmFsdWU6IFwidGV4dC9odG1sXCJcbiAgICAgIH1dLFxuICAgICAgYm9keTogYDwhRE9DVFlQRSBodG1sPjxodG1sIGxhbmc9XCJlblwiPjxoZWFkPjxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiPjxtZXRhIGh0dHAtZXF1aXY9XCJYLVVBLUNvbXBhdGlibGVcIiBjb250ZW50PVwiSUU9ZWRnZVwiPjxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCI+PHN0eWxlPiR7KDAsIF9jc3MuZGVmYXVsdCkoKX08L3N0eWxlPjx0aXRsZT4ke3RpdGxlfTwvdGl0bGU+PC9oZWFkPjxib2R5IGNsYXNzPVwiX19uZXh0LWF1dGgtdGhlbWUtJHsoX3RoZW1lJGNvbG9yU2NoZW1lID0gdGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmNvbG9yU2NoZW1lKSAhPT0gbnVsbCAmJiBfdGhlbWUkY29sb3JTY2hlbWUgIT09IHZvaWQgMCA/IF90aGVtZSRjb2xvclNjaGVtZSA6IFwiYXV0b1wifVwiPjxkaXYgY2xhc3M9XCJwYWdlXCI+JHsoMCwgX3ByZWFjdFJlbmRlclRvU3RyaW5nLmRlZmF1bHQpKGh0bWwpfTwvZGl2PjwvYm9keT48L2h0bWw+YFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNpZ25pbihwcm9wcykge1xuICAgICAgcmV0dXJuIHNlbmQoe1xuICAgICAgICBodG1sOiAoMCwgX3NpZ25pbi5kZWZhdWx0KSh7XG4gICAgICAgICAgY3NyZlRva2VuOiBwYXJhbXMuY3NyZlRva2VuLFxuICAgICAgICAgIHByb3ZpZGVyczogcGFyYW1zLnByb3ZpZGVycyxcbiAgICAgICAgICBjYWxsYmFja1VybDogcGFyYW1zLmNhbGxiYWNrVXJsLFxuICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIC4uLnF1ZXJ5LFxuICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pLFxuICAgICAgICB0aXRsZTogXCJTaWduIEluXCJcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBzaWdub3V0KHByb3BzKSB7XG4gICAgICByZXR1cm4gc2VuZCh7XG4gICAgICAgIGh0bWw6ICgwLCBfc2lnbm91dC5kZWZhdWx0KSh7XG4gICAgICAgICAgY3NyZlRva2VuOiBwYXJhbXMuY3NyZlRva2VuLFxuICAgICAgICAgIHVybCxcbiAgICAgICAgICB0aGVtZSxcbiAgICAgICAgICAuLi5wcm9wc1xuICAgICAgICB9KSxcbiAgICAgICAgdGl0bGU6IFwiU2lnbiBPdXRcIlxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIHZlcmlmeVJlcXVlc3QocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgaHRtbDogKDAsIF92ZXJpZnlSZXF1ZXN0LmRlZmF1bHQpKHtcbiAgICAgICAgICB1cmwsXG4gICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgLi4ucHJvcHNcbiAgICAgICAgfSksXG4gICAgICAgIHRpdGxlOiBcIlZlcmlmeSBSZXF1ZXN0XCJcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBlcnJvcihwcm9wcykge1xuICAgICAgcmV0dXJuIHNlbmQoeyAuLi4oMCwgX2Vycm9yLmRlZmF1bHQpKHtcbiAgICAgICAgICB1cmwsXG4gICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgLi4ucHJvcHNcbiAgICAgICAgfSksXG4gICAgICAgIHRpdGxlOiBcIkVycm9yXCJcbiAgICAgIH0pO1xuICAgIH1cblxuICB9O1xufSJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInJlbmRlclBhZ2UiLCJfcHJlYWN0UmVuZGVyVG9TdHJpbmciLCJfc2lnbmluIiwiX3NpZ25vdXQiLCJfdmVyaWZ5UmVxdWVzdCIsIl9lcnJvciIsIl9jc3MiLCJwYXJhbXMiLCJ1cmwiLCJ0aGVtZSIsInF1ZXJ5IiwiY29va2llcyIsInNlbmQiLCJodG1sIiwidGl0bGUiLCJzdGF0dXMiLCJfdGhlbWUkY29sb3JTY2hlbWUiLCJoZWFkZXJzIiwia2V5IiwiYm9keSIsImNvbG9yU2NoZW1lIiwic2lnbmluIiwicHJvcHMiLCJjc3JmVG9rZW4iLCJwcm92aWRlcnMiLCJjYWxsYmFja1VybCIsInNpZ25vdXQiLCJ2ZXJpZnlSZXF1ZXN0IiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/signin.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = SigninPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"(rsc)/./node_modules/@babel/runtime/helpers/extends.js\"));\nfunction SigninPage(props) {\n    var _errors$errorType;\n    const { csrfToken, providers, callbackUrl, theme, email, error: errorType } = props;\n    const providersToRender = providers.filter((provider)=>{\n        if (provider.type === \"oauth\" || provider.type === \"email\") {\n            return true;\n        } else if (provider.type === \"credentials\" && provider.credentials) {\n            return true;\n        }\n        return false;\n    });\n    if (typeof document !== \"undefined\" && theme.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    if (typeof document !== \"undefined\" && theme.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    const errors = {\n        Signin: \"Try signing in with a different account.\",\n        OAuthSignin: \"Try signing in with a different account.\",\n        OAuthCallback: \"Try signing in with a different account.\",\n        OAuthCreateAccount: \"Try signing in with a different account.\",\n        EmailCreateAccount: \"Try signing in with a different account.\",\n        Callback: \"Try signing in with a different account.\",\n        OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n        EmailSignin: \"The e-mail could not be sent.\",\n        CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n        SessionRequired: \"Please sign in to access this page.\",\n        default: \"Unable to sign in.\"\n    };\n    const error = errorType && ((_errors$errorType = errors[errorType]) !== null && _errors$errorType !== void 0 ? _errors$errorType : errors.default);\n    const logos = \"https://authjs.dev/img/providers\";\n    return (0, _preact.h)(\"div\", {\n        className: \"signin\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), theme.buttonText && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), error && (0, _preact.h)(\"div\", {\n        className: \"error\"\n    }, (0, _preact.h)(\"p\", null, error)), providersToRender.map((provider, i)=>{\n        var _provider$style$bg, _provider$style, _provider$style$bgDar, _provider$style2, _provider$style$text, _provider$style3, _provider$style$textD, _provider$style4, _provider$style5, _provider$style6;\n        return (0, _preact.h)(\"div\", {\n            key: provider.id,\n            className: \"provider\"\n        }, provider.type === \"oauth\" && (0, _preact.h)(\"form\", {\n            action: provider.signinUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), callbackUrl && (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"callbackUrl\",\n            value: callbackUrl\n        }), (0, _preact.h)(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            style: {\n                \"--provider-bg\": (_provider$style$bg = (_provider$style = provider.style) === null || _provider$style === void 0 ? void 0 : _provider$style.bg) !== null && _provider$style$bg !== void 0 ? _provider$style$bg : \"\",\n                \"--provider-dark-bg\": (_provider$style$bgDar = (_provider$style2 = provider.style) === null || _provider$style2 === void 0 ? void 0 : _provider$style2.bgDark) !== null && _provider$style$bgDar !== void 0 ? _provider$style$bgDar : \"\",\n                \"--provider-color\": (_provider$style$text = (_provider$style3 = provider.style) === null || _provider$style3 === void 0 ? void 0 : _provider$style3.text) !== null && _provider$style$text !== void 0 ? _provider$style$text : \"\",\n                \"--provider-dark-color\": (_provider$style$textD = (_provider$style4 = provider.style) === null || _provider$style4 === void 0 ? void 0 : _provider$style4.textDark) !== null && _provider$style$textD !== void 0 ? _provider$style$textD : \"\"\n            }\n        }, ((_provider$style5 = provider.style) === null || _provider$style5 === void 0 ? void 0 : _provider$style5.logo) && (0, _preact.h)(\"img\", {\n            loading: \"lazy\",\n            height: 24,\n            width: 24,\n            id: \"provider-logo\",\n            src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logo}`\n        }), ((_provider$style6 = provider.style) === null || _provider$style6 === void 0 ? void 0 : _provider$style6.logoDark) && (0, _preact.h)(\"img\", {\n            loading: \"lazy\",\n            height: 24,\n            width: 24,\n            id: \"provider-logo-dark\",\n            src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logoDark}`\n        }), (0, _preact.h)(\"span\", null, \"Sign in with \", provider.name))), (provider.type === \"email\" || provider.type === \"credentials\") && i > 0 && providersToRender[i - 1].type !== \"email\" && providersToRender[i - 1].type !== \"credentials\" && (0, _preact.h)(\"hr\", null), provider.type === \"email\" && (0, _preact.h)(\"form\", {\n            action: provider.signinUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), (0, _preact.h)(\"label\", {\n            className: \"section-header\",\n            htmlFor: `input-email-for-${provider.id}-provider`\n        }, \"Email\"), (0, _preact.h)(\"input\", {\n            id: `input-email-for-${provider.id}-provider`,\n            autoFocus: true,\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"email@example.com\",\n            required: true\n        }), (0, _preact.h)(\"button\", {\n            id: \"submitButton\",\n            type: \"submit\"\n        }, \"Sign in with \", provider.name)), provider.type === \"credentials\" && (0, _preact.h)(\"form\", {\n            action: provider.callbackUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), Object.keys(provider.credentials).map((credential)=>{\n            var _provider$credentials, _provider$credentials2, _provider$credentials3;\n            return (0, _preact.h)(\"div\", {\n                key: `input-group-${provider.id}`\n            }, (0, _preact.h)(\"label\", {\n                className: \"section-header\",\n                htmlFor: `input-${credential}-for-${provider.id}-provider`\n            }, (_provider$credentials = provider.credentials[credential].label) !== null && _provider$credentials !== void 0 ? _provider$credentials : credential), (0, _preact.h)(\"input\", (0, _extends2.default)({\n                name: credential,\n                id: `input-${credential}-for-${provider.id}-provider`,\n                type: (_provider$credentials2 = provider.credentials[credential].type) !== null && _provider$credentials2 !== void 0 ? _provider$credentials2 : \"text\",\n                placeholder: (_provider$credentials3 = provider.credentials[credential].placeholder) !== null && _provider$credentials3 !== void 0 ? _provider$credentials3 : \"\"\n            }, provider.credentials[credential])));\n        }), (0, _preact.h)(\"button\", {\n            type: \"submit\"\n        }, \"Sign in with \", provider.name)), (provider.type === \"email\" || provider.type === \"credentials\") && i + 1 < providersToRender.length && (0, _preact.h)(\"hr\", null));\n    })));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/signout.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signout.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = SignoutPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nfunction SignoutPage(props) {\n    const { url, csrfToken, theme } = props;\n    return (0, _preact.h)(\"div\", {\n        className: \"signout\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), theme.buttonText && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, \"Signout\"), (0, _preact.h)(\"p\", null, \"Are you sure you want to sign out?\"), (0, _preact.h)(\"form\", {\n        action: `${url}/signout`,\n        method: \"POST\"\n    }, (0, _preact.h)(\"input\", {\n        type: \"hidden\",\n        name: \"csrfToken\",\n        value: csrfToken\n    }), (0, _preact.h)(\"button\", {\n        id: \"submitButton\",\n        type: \"submit\"\n    }, \"Sign out\"))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvc2lnbm91dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsSUFBSUMsVUFBVUMsbUJBQU9BLENBQUMsMERBQVE7QUFFOUIsU0FBU0YsWUFBWUcsS0FBSztJQUN4QixNQUFNLEVBQ0pDLEdBQUcsRUFDSEMsU0FBUyxFQUNUQyxLQUFLLEVBQ04sR0FBR0g7SUFDSixPQUFPLENBQUMsR0FBR0YsUUFBUU0sQ0FBQyxFQUFFLE9BQU87UUFDM0JDLFdBQVc7SUFDYixHQUFHRixNQUFNRyxVQUFVLElBQUksQ0FBQyxHQUFHUixRQUFRTSxDQUFDLEVBQUUsU0FBUztRQUM3Q0cseUJBQXlCO1lBQ3ZCQyxRQUFRLENBQUM7O3lCQUVVLEVBQUVMLE1BQU1HLFVBQVUsQ0FBQzs7TUFFdEMsQ0FBQztRQUNIO0lBQ0YsSUFBSUgsTUFBTU0sVUFBVSxJQUFJLENBQUMsR0FBR1gsUUFBUU0sQ0FBQyxFQUFFLFNBQVM7UUFDOUNHLHlCQUF5QjtZQUN2QkMsUUFBUSxDQUFDOzsrQkFFZ0IsRUFBRUwsTUFBTU0sVUFBVSxDQUFDOztNQUU1QyxDQUFDO1FBQ0g7SUFDRixJQUFJLENBQUMsR0FBR1gsUUFBUU0sQ0FBQyxFQUFFLE9BQU87UUFDeEJDLFdBQVc7SUFDYixHQUFHRixNQUFNTyxJQUFJLElBQUksQ0FBQyxHQUFHWixRQUFRTSxDQUFDLEVBQUUsT0FBTztRQUNyQ08sS0FBS1IsTUFBTU8sSUFBSTtRQUNmRSxLQUFLO1FBQ0xQLFdBQVc7SUFDYixJQUFJLENBQUMsR0FBR1AsUUFBUU0sQ0FBQyxFQUFFLE1BQU0sTUFBTSxZQUFZLENBQUMsR0FBR04sUUFBUU0sQ0FBQyxFQUFFLEtBQUssTUFBTSx1Q0FBdUMsQ0FBQyxHQUFHTixRQUFRTSxDQUFDLEVBQUUsUUFBUTtRQUNqSVMsUUFBUSxDQUFDLEVBQUVaLElBQUksUUFBUSxDQUFDO1FBQ3hCYSxRQUFRO0lBQ1YsR0FBRyxDQUFDLEdBQUdoQixRQUFRTSxDQUFDLEVBQUUsU0FBUztRQUN6QlcsTUFBTTtRQUNOQyxNQUFNO1FBQ05yQixPQUFPTztJQUNULElBQUksQ0FBQyxHQUFHSixRQUFRTSxDQUFDLEVBQUUsVUFBVTtRQUMzQmEsSUFBSTtRQUNKRixNQUFNO0lBQ1IsR0FBRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL3NpZ25vdXQuanM/MGQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNpZ25vdXRQYWdlO1xuXG52YXIgX3ByZWFjdCA9IHJlcXVpcmUoXCJwcmVhY3RcIik7XG5cbmZ1bmN0aW9uIFNpZ25vdXRQYWdlKHByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgY3NyZlRva2VuLFxuICAgIHRoZW1lXG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwic2lnbm91dFwiXG4gIH0sIHRoZW1lLmJyYW5kQ29sb3IgJiYgKDAsIF9wcmVhY3QuaCkoXCJzdHlsZVwiLCB7XG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZS5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgXG4gICAgfVxuICB9KSwgdGhlbWUuYnV0dG9uVGV4dCAmJiAoMCwgX3ByZWFjdC5oKShcInN0eWxlXCIsIHtcbiAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJ1dHRvbi10ZXh0LWNvbG9yOiAke3RoZW1lLmJ1dHRvblRleHR9XG4gICAgICAgIH1cbiAgICAgIGBcbiAgICB9XG4gIH0pLCAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImNhcmRcIlxuICB9LCB0aGVtZS5sb2dvICYmICgwLCBfcHJlYWN0LmgpKFwiaW1nXCIsIHtcbiAgICBzcmM6IHRoZW1lLmxvZ28sXG4gICAgYWx0OiBcIkxvZ29cIixcbiAgICBjbGFzc05hbWU6IFwibG9nb1wiXG4gIH0pLCAoMCwgX3ByZWFjdC5oKShcImgxXCIsIG51bGwsIFwiU2lnbm91dFwiKSwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNpZ24gb3V0P1wiKSwgKDAsIF9wcmVhY3QuaCkoXCJmb3JtXCIsIHtcbiAgICBhY3Rpb246IGAke3VybH0vc2lnbm91dGAsXG4gICAgbWV0aG9kOiBcIlBPU1RcIlxuICB9LCAoMCwgX3ByZWFjdC5oKShcImlucHV0XCIsIHtcbiAgICB0eXBlOiBcImhpZGRlblwiLFxuICAgIG5hbWU6IFwiY3NyZlRva2VuXCIsXG4gICAgdmFsdWU6IGNzcmZUb2tlblxuICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJidXR0b25cIiwge1xuICAgIGlkOiBcInN1Ym1pdEJ1dHRvblwiLFxuICAgIHR5cGU6IFwic3VibWl0XCJcbiAgfSwgXCJTaWduIG91dFwiKSkpKTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiU2lnbm91dFBhZ2UiLCJfcHJlYWN0IiwicmVxdWlyZSIsInByb3BzIiwidXJsIiwiY3NyZlRva2VuIiwidGhlbWUiLCJoIiwiY2xhc3NOYW1lIiwiYnJhbmRDb2xvciIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiX19odG1sIiwiYnV0dG9uVGV4dCIsImxvZ28iLCJzcmMiLCJhbHQiLCJhY3Rpb24iLCJtZXRob2QiLCJ0eXBlIiwibmFtZSIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/verify-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/pages/verify-request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = VerifyRequestPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nfunction VerifyRequestPage(props) {\n    const { url, theme } = props;\n    return (0, _preact.h)(\"div\", {\n        className: \"verify-request\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, \"Check your email\"), (0, _preact.h)(\"p\", null, \"A sign in link has been sent to your email address.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n        className: \"site\",\n        href: url.origin\n    }, url.host))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvdmVyaWZ5LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHO0FBRWxCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLDBEQUFRO0FBRTlCLFNBQVNGLGtCQUFrQkcsS0FBSztJQUM5QixNQUFNLEVBQ0pDLEdBQUcsRUFDSEMsS0FBSyxFQUNOLEdBQUdGO0lBQ0osT0FBTyxDQUFDLEdBQUdGLFFBQVFLLENBQUMsRUFBRSxPQUFPO1FBQzNCQyxXQUFXO0lBQ2IsR0FBR0YsTUFBTUcsVUFBVSxJQUFJLENBQUMsR0FBR1AsUUFBUUssQ0FBQyxFQUFFLFNBQVM7UUFDN0NHLHlCQUF5QjtZQUN2QkMsUUFBUSxDQUFDOzt5QkFFVSxFQUFFTCxNQUFNRyxVQUFVLENBQUM7O01BRXRDLENBQUM7UUFDSDtJQUNGLElBQUksQ0FBQyxHQUFHUCxRQUFRSyxDQUFDLEVBQUUsT0FBTztRQUN4QkMsV0FBVztJQUNiLEdBQUdGLE1BQU1NLElBQUksSUFBSSxDQUFDLEdBQUdWLFFBQVFLLENBQUMsRUFBRSxPQUFPO1FBQ3JDTSxLQUFLUCxNQUFNTSxJQUFJO1FBQ2ZFLEtBQUs7UUFDTE4sV0FBVztJQUNiLElBQUksQ0FBQyxHQUFHTixRQUFRSyxDQUFDLEVBQUUsTUFBTSxNQUFNLHFCQUFxQixDQUFDLEdBQUdMLFFBQVFLLENBQUMsRUFBRSxLQUFLLE1BQU0sd0RBQXdELENBQUMsR0FBR0wsUUFBUUssQ0FBQyxFQUFFLEtBQUssTUFBTSxDQUFDLEdBQUdMLFFBQVFLLENBQUMsRUFBRSxLQUFLO1FBQ2xMQyxXQUFXO1FBQ1hPLE1BQU1WLElBQUlXLE1BQU07SUFDbEIsR0FBR1gsSUFBSVksSUFBSTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL3ZlcmlmeS1yZXF1ZXN0LmpzPzZmMWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBWZXJpZnlSZXF1ZXN0UGFnZTtcblxudmFyIF9wcmVhY3QgPSByZXF1aXJlKFwicHJlYWN0XCIpO1xuXG5mdW5jdGlvbiBWZXJpZnlSZXF1ZXN0UGFnZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIHRoZW1lXG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwidmVyaWZ5LXJlcXVlc3RcIlxuICB9LCB0aGVtZS5icmFuZENvbG9yICYmICgwLCBfcHJlYWN0LmgpKFwic3R5bGVcIiwge1xuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYFxuICAgIH1cbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiY2FyZFwiXG4gIH0sIHRoZW1lLmxvZ28gJiYgKDAsIF9wcmVhY3QuaCkoXCJpbWdcIiwge1xuICAgIHNyYzogdGhlbWUubG9nbyxcbiAgICBhbHQ6IFwiTG9nb1wiLFxuICAgIGNsYXNzTmFtZTogXCJsb2dvXCJcbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiaDFcIiwgbnVsbCwgXCJDaGVjayB5b3VyIGVtYWlsXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJBIHNpZ24gaW4gbGluayBoYXMgYmVlbiBzZW50IHRvIHlvdXIgZW1haWwgYWRkcmVzcy5cIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcImFcIiwge1xuICAgIGNsYXNzTmFtZTogXCJzaXRlXCIsXG4gICAgaHJlZjogdXJsLm9yaWdpblxuICB9LCB1cmwuaG9zdCkpKSk7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIlZlcmlmeVJlcXVlc3RQYWdlIiwiX3ByZWFjdCIsInJlcXVpcmUiLCJwcm9wcyIsInVybCIsInRoZW1lIiwiaCIsImNsYXNzTmFtZSIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImxvZ28iLCJzcmMiLCJhbHQiLCJocmVmIiwib3JpZ2luIiwiaG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/verify-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/callback.js":
/*!********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/callback.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = callback;\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/callback */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/callback.js\"));\nvar _callbackHandler = _interopRequireDefault(__webpack_require__(/*! ../lib/callback-handler */ \"(rsc)/./node_modules/next-auth/core/lib/callback-handler.js\"));\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function callback(params) {\n    const { options, query, body, method, headers, sessionStore } = params;\n    const { provider, adapter, url, callbackUrl, pages, jwt, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger } = options;\n    const cookies = [];\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (provider.type === \"oauth\") {\n        try {\n            const { profile, account, OAuthProfile, cookies: oauthCookies } = await (0, _callback.default)({\n                query,\n                body,\n                method,\n                options,\n                cookies: params.cookies\n            });\n            if (oauthCookies.length) cookies.push(...oauthCookies);\n            try {\n                var _events$signIn;\n                logger.debug(\"OAUTH_CALLBACK_RESPONSE\", {\n                    profile,\n                    account,\n                    OAuthProfile\n                });\n                if (!profile || !account || !OAuthProfile) {\n                    return {\n                        redirect: `${url}/signin`,\n                        cookies\n                    };\n                }\n                let userOrProfile = profile;\n                if (adapter) {\n                    const { getUserByAccount } = adapter;\n                    const userByAccount = await getUserByAccount({\n                        providerAccountId: account.providerAccountId,\n                        provider: provider.id\n                    });\n                    if (userByAccount) userOrProfile = userByAccount;\n                }\n                try {\n                    const isAllowed = await callbacks.signIn({\n                        user: userOrProfile,\n                        account,\n                        profile: OAuthProfile\n                    });\n                    if (!isAllowed) {\n                        return {\n                            redirect: `${url}/error?error=AccessDenied`,\n                            cookies\n                        };\n                    } else if (typeof isAllowed === \"string\") {\n                        return {\n                            redirect: isAllowed,\n                            cookies\n                        };\n                    }\n                } catch (error) {\n                    return {\n                        redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                        cookies\n                    };\n                }\n                const { user, session, isNewUser } = await (0, _callbackHandler.default)({\n                    sessionToken: sessionStore.value,\n                    profile,\n                    account,\n                    options\n                });\n                if (useJwtSession) {\n                    var _user$id;\n                    const defaultToken = {\n                        name: user.name,\n                        email: user.email,\n                        picture: user.image,\n                        sub: (_user$id = user.id) === null || _user$id === void 0 ? void 0 : _user$id.toString()\n                    };\n                    const token = await callbacks.jwt({\n                        token: defaultToken,\n                        user,\n                        account,\n                        profile: OAuthProfile,\n                        isNewUser,\n                        trigger: isNewUser ? \"signUp\" : \"signIn\"\n                    });\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token\n                    });\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                } else {\n                    cookies.push({\n                        name: options.cookies.sessionToken.name,\n                        value: session.sessionToken,\n                        options: {\n                            ...options.cookies.sessionToken.options,\n                            expires: session.expires\n                        }\n                    });\n                }\n                await ((_events$signIn = events.signIn) === null || _events$signIn === void 0 ? void 0 : _events$signIn.call(events, {\n                    user,\n                    account,\n                    profile,\n                    isNewUser\n                }));\n                if (isNewUser && pages.newUser) {\n                    return {\n                        redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: callbackUrl,\n                    cookies\n                };\n            } catch (error) {\n                if (error.name === \"AccountNotLinkedError\") {\n                    return {\n                        redirect: `${url}/error?error=OAuthAccountNotLinked`,\n                        cookies\n                    };\n                } else if (error.name === \"CreateUserError\") {\n                    return {\n                        redirect: `${url}/error?error=OAuthCreateAccount`,\n                        cookies\n                    };\n                }\n                logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", error);\n                return {\n                    redirect: `${url}/error?error=Callback`,\n                    cookies\n                };\n            }\n        } catch (error) {\n            if (error.name === \"OAuthCallbackError\") {\n                logger.error(\"OAUTH_CALLBACK_ERROR\", {\n                    error: error,\n                    providerId: provider.id\n                });\n                return {\n                    redirect: `${url}/error?error=OAuthCallback`,\n                    cookies\n                };\n            }\n            logger.error(\"OAUTH_CALLBACK_ERROR\", error);\n            return {\n                redirect: `${url}/error?error=Callback`,\n                cookies\n            };\n        }\n    } else if (provider.type === \"email\") {\n        try {\n            var _events$signIn2;\n            const token = query === null || query === void 0 ? void 0 : query.token;\n            const identifier = query === null || query === void 0 ? void 0 : query.email;\n            if (!token || !identifier) {\n                return {\n                    redirect: `${url}/error?error=configuration`,\n                    cookies\n                };\n            }\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: (0, _utils.hashToken)(token, options)\n            });\n            const invalidInvite = !invite || invite.expires.valueOf() < Date.now();\n            if (invalidInvite) {\n                return {\n                    redirect: `${url}/error?error=Verification`,\n                    cookies\n                };\n            }\n            const profile = await (0, _getUserFromEmail.default)({\n                email: identifier,\n                adapter\n            });\n            const account = {\n                providerAccountId: profile.email,\n                type: \"email\",\n                provider: provider.id\n            };\n            try {\n                const signInCallbackResponse = await callbacks.signIn({\n                    user: profile,\n                    account\n                });\n                if (!signInCallbackResponse) {\n                    return {\n                        redirect: `${url}/error?error=AccessDenied`,\n                        cookies\n                    };\n                } else if (typeof signInCallbackResponse === \"string\") {\n                    return {\n                        redirect: signInCallbackResponse,\n                        cookies\n                    };\n                }\n            } catch (error) {\n                return {\n                    redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                    cookies\n                };\n            }\n            const { user, session, isNewUser } = await (0, _callbackHandler.default)({\n                sessionToken: sessionStore.value,\n                profile,\n                account,\n                options\n            });\n            if (useJwtSession) {\n                var _user$id2;\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: (_user$id2 = user.id) === null || _user$id2 === void 0 ? void 0 : _user$id2.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token\n                });\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires\n                });\n                cookies.push(...sessionCookies);\n            } else {\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await ((_events$signIn2 = events.signIn) === null || _events$signIn2 === void 0 ? void 0 : _events$signIn2.call(events, {\n                user,\n                account,\n                isNewUser\n            }));\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n                    cookies\n                };\n            }\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } catch (error) {\n            if (error.name === \"CreateUserError\") {\n                return {\n                    redirect: `${url}/error?error=EmailCreateAccount`,\n                    cookies\n                };\n            }\n            logger.error(\"CALLBACK_EMAIL_ERROR\", error);\n            return {\n                redirect: `${url}/error?error=Callback`,\n                cookies\n            };\n        }\n    } else if (provider.type === \"credentials\" && method === \"POST\") {\n        var _user$id3, _events$signIn3;\n        const credentials = body;\n        let user;\n        try {\n            user = await provider.authorize(credentials, {\n                query,\n                body,\n                headers,\n                method\n            });\n            if (!user) {\n                return {\n                    status: 401,\n                    redirect: `${url}/error?${new URLSearchParams({\n                        error: \"CredentialsSignin\",\n                        provider: provider.id\n                    })}`,\n                    cookies\n                };\n            }\n        } catch (error) {\n            return {\n                status: 401,\n                redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                cookies\n            };\n        }\n        const account = {\n            providerAccountId: user.id,\n            type: \"credentials\",\n            provider: provider.id\n        };\n        try {\n            const isAllowed = await callbacks.signIn({\n                user,\n                account,\n                credentials\n            });\n            if (!isAllowed) {\n                return {\n                    status: 403,\n                    redirect: `${url}/error?error=AccessDenied`,\n                    cookies\n                };\n            } else if (typeof isAllowed === \"string\") {\n                return {\n                    redirect: isAllowed,\n                    cookies\n                };\n            }\n        } catch (error) {\n            return {\n                redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                cookies\n            };\n        }\n        const defaultToken = {\n            name: user.name,\n            email: user.email,\n            picture: user.image,\n            sub: (_user$id3 = user.id) === null || _user$id3 === void 0 ? void 0 : _user$id3.toString()\n        };\n        const token = await callbacks.jwt({\n            token: defaultToken,\n            user,\n            account,\n            isNewUser: false,\n            trigger: \"signIn\"\n        });\n        const newToken = await jwt.encode({\n            ...jwt,\n            token\n        });\n        const cookieExpires = new Date();\n        cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n        const sessionCookies = sessionStore.chunk(newToken, {\n            expires: cookieExpires\n        });\n        cookies.push(...sessionCookies);\n        await ((_events$signIn3 = events.signIn) === null || _events$signIn3 === void 0 ? void 0 : _events$signIn3.call(events, {\n            user,\n            account\n        }));\n        return {\n            redirect: callbackUrl,\n            cookies\n        };\n    }\n    return {\n        status: 500,\n        body: `Error: Callback for provider type ${provider.type} not supported`,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/routes/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"callback\", ({\n    enumerable: true,\n    get: function() {\n        return _callback.default;\n    }\n}));\nObject.defineProperty(exports, \"providers\", ({\n    enumerable: true,\n    get: function() {\n        return _providers.default;\n    }\n}));\nObject.defineProperty(exports, \"session\", ({\n    enumerable: true,\n    get: function() {\n        return _session.default;\n    }\n}));\nObject.defineProperty(exports, \"signin\", ({\n    enumerable: true,\n    get: function() {\n        return _signin.default;\n    }\n}));\nObject.defineProperty(exports, \"signout\", ({\n    enumerable: true,\n    get: function() {\n        return _signout.default;\n    }\n}));\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ./callback */ \"(rsc)/./node_modules/next-auth/core/routes/callback.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(rsc)/./node_modules/next-auth/core/routes/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(rsc)/./node_modules/next-auth/core/routes/signout.js\"));\nvar _session = _interopRequireDefault(__webpack_require__(/*! ./session */ \"(rsc)/./node_modules/next-auth/core/routes/session.js\"));\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./providers */ \"(rsc)/./node_modules/next-auth/core/routes/providers.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWIsSUFBSUEseUJBQXlCQyxtQkFBT0EsQ0FBQywwSEFBOEM7QUFFbkZDLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGSCw0Q0FBMkM7SUFDekNJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9DLFVBQVVDLE9BQU87SUFDMUI7QUFDRixDQUFDLEVBQUM7QUFDRlAsNkNBQTRDO0lBQzFDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPRyxXQUFXRCxPQUFPO0lBQzNCO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDJDQUEwQztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0ksU0FBU0YsT0FBTztJQUN6QjtBQUNGLENBQUMsRUFBQztBQUNGUCwwQ0FBeUM7SUFDdkNJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9LLFFBQVFILE9BQU87SUFDeEI7QUFDRixDQUFDLEVBQUM7QUFDRlAsMkNBQTBDO0lBQ3hDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPTSxTQUFTSixPQUFPO0lBQ3pCO0FBQ0YsQ0FBQyxFQUFDO0FBRUYsSUFBSUQsWUFBWVIsdUJBQXVCQyxtQkFBT0EsQ0FBQywwRUFBWTtBQUUzRCxJQUFJVyxVQUFVWix1QkFBdUJDLG1CQUFPQSxDQUFDLHNFQUFVO0FBRXZELElBQUlZLFdBQVdiLHVCQUF1QkMsbUJBQU9BLENBQUMsd0VBQVc7QUFFekQsSUFBSVUsV0FBV1gsdUJBQXVCQyxtQkFBT0EsQ0FBQyx3RUFBVztBQUV6RCxJQUFJUyxhQUFhVix1QkFBdUJDLG1CQUFPQSxDQUFDLDRFQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3JvdXRlcy9pbmRleC5qcz9jNmVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNhbGxiYWNrXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9jYWxsYmFjay5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInByb3ZpZGVyc1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfcHJvdmlkZXJzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2Vzc2lvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc2Vzc2lvbi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNpZ25pblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc2lnbmluLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2lnbm91dFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc2lnbm91dC5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF9jYWxsYmFjayA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY2FsbGJhY2tcIikpO1xuXG52YXIgX3NpZ25pbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbmluXCIpKTtcblxudmFyIF9zaWdub3V0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zaWdub3V0XCIpKTtcblxudmFyIF9zZXNzaW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zZXNzaW9uXCIpKTtcblxudmFyIF9wcm92aWRlcnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Byb3ZpZGVyc1wiKSk7Il0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX2NhbGxiYWNrIiwiZGVmYXVsdCIsIl9wcm92aWRlcnMiLCJfc2Vzc2lvbiIsIl9zaWduaW4iLCJfc2lnbm91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/providers.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/providers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = providers;\nfunction providers(providers) {\n    return {\n        headers: [\n            {\n                key: \"Content-Type\",\n                value: \"application/json\"\n            }\n        ],\n        body: providers.reduce((acc, { id, name, type, signinUrl, callbackUrl })=>{\n            acc[id] = {\n                id,\n                name,\n                type,\n                signinUrl,\n                callbackUrl\n            };\n            return acc;\n        }, {})\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3Byb3ZpZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsU0FBU0EsVUFBVUEsU0FBUztJQUMxQixPQUFPO1FBQ0xDLFNBQVM7WUFBQztnQkFDUkMsS0FBSztnQkFDTEosT0FBTztZQUNUO1NBQUU7UUFDRkssTUFBTUgsVUFBVUksTUFBTSxDQUFDLENBQUNDLEtBQUssRUFDM0JDLEVBQUUsRUFDRkMsSUFBSSxFQUNKQyxJQUFJLEVBQ0pDLFNBQVMsRUFDVEMsV0FBVyxFQUNaO1lBQ0NMLEdBQUcsQ0FBQ0MsR0FBRyxHQUFHO2dCQUNSQTtnQkFDQUM7Z0JBQ0FDO2dCQUNBQztnQkFDQUM7WUFDRjtZQUNBLE9BQU9MO1FBQ1QsR0FBRyxDQUFDO0lBQ047QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9yb3V0ZXMvcHJvdmlkZXJzLmpzP2ZmMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcm92aWRlcnM7XG5cbmZ1bmN0aW9uIHByb3ZpZGVycyhwcm92aWRlcnMpIHtcbiAgcmV0dXJuIHtcbiAgICBoZWFkZXJzOiBbe1xuICAgICAga2V5OiBcIkNvbnRlbnQtVHlwZVwiLFxuICAgICAgdmFsdWU6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfV0sXG4gICAgYm9keTogcHJvdmlkZXJzLnJlZHVjZSgoYWNjLCB7XG4gICAgICBpZCxcbiAgICAgIG5hbWUsXG4gICAgICB0eXBlLFxuICAgICAgc2lnbmluVXJsLFxuICAgICAgY2FsbGJhY2tVcmxcbiAgICB9KSA9PiB7XG4gICAgICBhY2NbaWRdID0ge1xuICAgICAgICBpZCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgc2lnbmluVXJsLFxuICAgICAgICBjYWxsYmFja1VybFxuICAgICAgfTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInByb3ZpZGVycyIsImhlYWRlcnMiLCJrZXkiLCJib2R5IiwicmVkdWNlIiwiYWNjIiwiaWQiLCJuYW1lIiwidHlwZSIsInNpZ25pblVybCIsImNhbGxiYWNrVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/providers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/session.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/session.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = session;\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nasync function session(params) {\n    const { options, sessionStore, newSession, isUpdate } = params;\n    const { adapter, jwt, events, callbacks, logger, session: { strategy: sessionStrategy, maxAge: sessionMaxAge } } = options;\n    const response = {\n        body: {},\n        headers: [\n            {\n                key: \"Content-Type\",\n                value: \"application/json\"\n            }\n        ],\n        cookies: []\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            var _response$cookies, _events$session;\n            const decodedToken = await jwt.decode({\n                ...jwt,\n                token: sessionToken\n            });\n            if (!decodedToken) throw new Error(\"JWT invalid\");\n            const token = await callbacks.jwt({\n                token: decodedToken,\n                ...isUpdate && {\n                    trigger: \"update\"\n                },\n                session: newSession\n            });\n            const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n            const updatedSession = await callbacks.session({\n                session: {\n                    user: {\n                        name: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.name,\n                        email: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.email,\n                        image: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.picture\n                    },\n                    expires: newExpires.toISOString()\n                },\n                token\n            });\n            response.body = updatedSession;\n            const newToken = await jwt.encode({\n                ...jwt,\n                token,\n                maxAge: options.session.maxAge\n            });\n            const sessionCookies = sessionStore.chunk(newToken, {\n                expires: newExpires\n            });\n            (_response$cookies = response.cookies) === null || _response$cookies === void 0 ? void 0 : _response$cookies.push(...sessionCookies);\n            await ((_events$session = events.session) === null || _events$session === void 0 ? void 0 : _events$session.call(events, {\n                session: updatedSession,\n                token\n            }));\n        } catch (error) {\n            var _response$cookies2;\n            logger.error(\"JWT_SESSION_ERROR\", error);\n            (_response$cookies2 = response.cookies) === null || _response$cookies2 === void 0 ? void 0 : _response$cookies2.push(...sessionStore.clean());\n        }\n    } else {\n        try {\n            const { getSessionAndUser, deleteSession, updateSession } = adapter;\n            let userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {\n                await deleteSession(sessionToken);\n                userAndSession = null;\n            }\n            if (userAndSession) {\n                var _response$cookies3, _events$session2;\n                const { user, session } = userAndSession;\n                const sessionUpdateAge = options.session.updateAge;\n                const sessionIsDueToBeUpdatedDate = session.expires.valueOf() - sessionMaxAge * 1000 + sessionUpdateAge * 1000;\n                const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n                if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                    await updateSession({\n                        sessionToken,\n                        expires: newExpires\n                    });\n                }\n                const sessionPayload = await callbacks.session({\n                    session: {\n                        user: {\n                            name: user.name,\n                            email: user.email,\n                            image: user.image\n                        },\n                        expires: session.expires.toISOString()\n                    },\n                    user,\n                    newSession,\n                    ...isUpdate ? {\n                        trigger: \"update\"\n                    } : {}\n                });\n                response.body = sessionPayload;\n                (_response$cookies3 = response.cookies) === null || _response$cookies3 === void 0 ? void 0 : _response$cookies3.push({\n                    name: options.cookies.sessionToken.name,\n                    value: sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: newExpires\n                    }\n                });\n                await ((_events$session2 = events.session) === null || _events$session2 === void 0 ? void 0 : _events$session2.call(events, {\n                    session: sessionPayload\n                }));\n            } else if (sessionToken) {\n                var _response$cookies4;\n                (_response$cookies4 = response.cookies) === null || _response$cookies4 === void 0 ? void 0 : _response$cookies4.push(...sessionStore.clean());\n            }\n        } catch (error) {\n            logger.error(\"SESSION_ERROR\", error);\n        }\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/signin.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signin.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = signin;\nvar _authorizationUrl = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/authorization-url */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ../lib/email/signin */ \"(rsc)/./node_modules/next-auth/core/lib/email/signin.js\"));\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function signin(params) {\n    const { options, query, body } = params;\n    const { url, callbacks, logger, provider } = options;\n    if (!provider.type) {\n        return {\n            status: 500,\n            text: `Error: Type not specified for ${provider.name}`\n        };\n    }\n    if (provider.type === \"oauth\") {\n        try {\n            const response = await (0, _authorizationUrl.default)({\n                options,\n                query\n            });\n            return response;\n        } catch (error) {\n            logger.error(\"SIGNIN_OAUTH_ERROR\", {\n                error: error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=OAuthSignin`\n            };\n        }\n    } else if (provider.type === \"email\") {\n        var _provider$normalizeId;\n        let email = body === null || body === void 0 ? void 0 : body.email;\n        if (!email) return {\n            redirect: `${url}/error?error=EmailSignin`\n        };\n        const normalizer = (_provider$normalizeId = provider.normalizeIdentifier) !== null && _provider$normalizeId !== void 0 ? _provider$normalizeId : (identifier)=>{\n            let [local, domain] = identifier.toLowerCase().trim().split(\"@\");\n            domain = domain.split(\",\")[0];\n            return `${local}@${domain}`;\n        };\n        try {\n            email = normalizer(body === null || body === void 0 ? void 0 : body.email);\n        } catch (error) {\n            logger.error(\"SIGNIN_EMAIL_ERROR\", {\n                error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=EmailSignin`\n            };\n        }\n        const user = await (0, _getUserFromEmail.default)({\n            email,\n            adapter: options.adapter\n        });\n        const account = {\n            providerAccountId: email,\n            userId: email,\n            type: \"email\",\n            provider: provider.id\n        };\n        try {\n            const signInCallbackResponse = await callbacks.signIn({\n                user,\n                account,\n                email: {\n                    verificationRequest: true\n                }\n            });\n            if (!signInCallbackResponse) {\n                return {\n                    redirect: `${url}/error?error=AccessDenied`\n                };\n            } else if (typeof signInCallbackResponse === \"string\") {\n                return {\n                    redirect: signInCallbackResponse\n                };\n            }\n        } catch (error) {\n            return {\n                redirect: `${url}/error?${new URLSearchParams({\n                    error: error\n                })}`\n            };\n        }\n        try {\n            const redirect = await (0, _signin.default)(email, options);\n            return {\n                redirect\n            };\n        } catch (error) {\n            logger.error(\"SIGNIN_EMAIL_ERROR\", {\n                error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=EmailSignin`\n            };\n        }\n    }\n    return {\n        redirect: `${url}/signin`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/signout.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signout.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = signout;\nasync function signout(params) {\n    const { options, sessionStore } = params;\n    const { adapter, events, jwt, callbackUrl, logger, session } = options;\n    const sessionToken = sessionStore === null || sessionStore === void 0 ? void 0 : sessionStore.value;\n    if (!sessionToken) {\n        return {\n            redirect: callbackUrl\n        };\n    }\n    if (session.strategy === \"jwt\") {\n        try {\n            var _events$signOut;\n            const decodedJwt = await jwt.decode({\n                ...jwt,\n                token: sessionToken\n            });\n            await ((_events$signOut = events.signOut) === null || _events$signOut === void 0 ? void 0 : _events$signOut.call(events, {\n                token: decodedJwt\n            }));\n        } catch (error) {\n            logger.error(\"SIGNOUT_ERROR\", error);\n        }\n    } else {\n        try {\n            var _events$signOut2;\n            const session = await adapter.deleteSession(sessionToken);\n            await ((_events$signOut2 = events.signOut) === null || _events$signOut2 === void 0 ? void 0 : _events$signOut2.call(events, {\n                session\n            }));\n        } catch (error) {\n            logger.error(\"SIGNOUT_ERROR\", error);\n        }\n    }\n    const sessionCookies = sessionStore.clean();\n    return {\n        redirect: callbackUrl,\n        cookies: sessionCookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3NpZ25vdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHO0FBRWxCLGVBQWVBLFFBQVFDLE1BQU07SUFDM0IsTUFBTSxFQUNKQyxPQUFPLEVBQ1BDLFlBQVksRUFDYixHQUFHRjtJQUNKLE1BQU0sRUFDSkcsT0FBTyxFQUNQQyxNQUFNLEVBQ05DLEdBQUcsRUFDSEMsV0FBVyxFQUNYQyxNQUFNLEVBQ05DLE9BQU8sRUFDUixHQUFHUDtJQUNKLE1BQU1RLGVBQWVQLGlCQUFpQixRQUFRQSxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYUwsS0FBSztJQUVuRyxJQUFJLENBQUNZLGNBQWM7UUFDakIsT0FBTztZQUNMQyxVQUFVSjtRQUNaO0lBQ0Y7SUFFQSxJQUFJRSxRQUFRRyxRQUFRLEtBQUssT0FBTztRQUM5QixJQUFJO1lBQ0YsSUFBSUM7WUFFSixNQUFNQyxhQUFhLE1BQU1SLElBQUlTLE1BQU0sQ0FBQztnQkFBRSxHQUFHVCxHQUFHO2dCQUMxQ1UsT0FBT047WUFDVDtZQUNBLE1BQU8sRUFBQ0csa0JBQWtCUixPQUFPWSxPQUFPLE1BQU0sUUFBUUosb0JBQW9CLEtBQUssSUFBSSxLQUFLLElBQUlBLGdCQUFnQkssSUFBSSxDQUFDYixRQUFRO2dCQUN2SFcsT0FBT0Y7WUFDVCxFQUFDO1FBQ0gsRUFBRSxPQUFPSyxPQUFPO1lBQ2RYLE9BQU9XLEtBQUssQ0FBQyxpQkFBaUJBO1FBQ2hDO0lBQ0YsT0FBTztRQUNMLElBQUk7WUFDRixJQUFJQztZQUVKLE1BQU1YLFVBQVUsTUFBTUwsUUFBUWlCLGFBQWEsQ0FBQ1g7WUFDNUMsTUFBTyxFQUFDVSxtQkFBbUJmLE9BQU9ZLE9BQU8sTUFBTSxRQUFRRyxxQkFBcUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsaUJBQWlCRixJQUFJLENBQUNiLFFBQVE7Z0JBQzFISTtZQUNGLEVBQUM7UUFDSCxFQUFFLE9BQU9VLE9BQU87WUFDZFgsT0FBT1csS0FBSyxDQUFDLGlCQUFpQkE7UUFDaEM7SUFDRjtJQUVBLE1BQU1HLGlCQUFpQm5CLGFBQWFvQixLQUFLO0lBQ3pDLE9BQU87UUFDTFosVUFBVUo7UUFDVmlCLFNBQVNGO0lBQ1g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9yb3V0ZXMvc2lnbm91dC5qcz8yOTUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2lnbm91dDtcblxuYXN5bmMgZnVuY3Rpb24gc2lnbm91dChwYXJhbXMpIHtcbiAgY29uc3Qge1xuICAgIG9wdGlvbnMsXG4gICAgc2Vzc2lvblN0b3JlXG4gIH0gPSBwYXJhbXM7XG4gIGNvbnN0IHtcbiAgICBhZGFwdGVyLFxuICAgIGV2ZW50cyxcbiAgICBqd3QsXG4gICAgY2FsbGJhY2tVcmwsXG4gICAgbG9nZ2VyLFxuICAgIHNlc3Npb25cbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHNlc3Npb25Ub2tlbiA9IHNlc3Npb25TdG9yZSA9PT0gbnVsbCB8fCBzZXNzaW9uU3RvcmUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlc3Npb25TdG9yZS52YWx1ZTtcblxuICBpZiAoIXNlc3Npb25Ub2tlbikge1xuICAgIHJldHVybiB7XG4gICAgICByZWRpcmVjdDogY2FsbGJhY2tVcmxcbiAgICB9O1xuICB9XG5cbiAgaWYgKHNlc3Npb24uc3RyYXRlZ3kgPT09IFwiand0XCIpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIF9ldmVudHMkc2lnbk91dDtcblxuICAgICAgY29uc3QgZGVjb2RlZEp3dCA9IGF3YWl0IGp3dC5kZWNvZGUoeyAuLi5qd3QsXG4gICAgICAgIHRva2VuOiBzZXNzaW9uVG9rZW5cbiAgICAgIH0pO1xuICAgICAgYXdhaXQgKChfZXZlbnRzJHNpZ25PdXQgPSBldmVudHMuc2lnbk91dCkgPT09IG51bGwgfHwgX2V2ZW50cyRzaWduT3V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZXZlbnRzJHNpZ25PdXQuY2FsbChldmVudHMsIHtcbiAgICAgICAgdG9rZW46IGRlY29kZWRKd3RcbiAgICAgIH0pKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbG9nZ2VyLmVycm9yKFwiU0lHTk9VVF9FUlJPUlwiLCBlcnJvcik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRyeSB7XG4gICAgICB2YXIgX2V2ZW50cyRzaWduT3V0MjtcblxuICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGFkYXB0ZXIuZGVsZXRlU2Vzc2lvbihzZXNzaW9uVG9rZW4pO1xuICAgICAgYXdhaXQgKChfZXZlbnRzJHNpZ25PdXQyID0gZXZlbnRzLnNpZ25PdXQpID09PSBudWxsIHx8IF9ldmVudHMkc2lnbk91dDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ldmVudHMkc2lnbk91dDIuY2FsbChldmVudHMsIHtcbiAgICAgICAgc2Vzc2lvblxuICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoXCJTSUdOT1VUX0VSUk9SXCIsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBzZXNzaW9uQ29va2llcyA9IHNlc3Npb25TdG9yZS5jbGVhbigpO1xuICByZXR1cm4ge1xuICAgIHJlZGlyZWN0OiBjYWxsYmFja1VybCxcbiAgICBjb29raWVzOiBzZXNzaW9uQ29va2llc1xuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJzaWdub3V0IiwicGFyYW1zIiwib3B0aW9ucyIsInNlc3Npb25TdG9yZSIsImFkYXB0ZXIiLCJldmVudHMiLCJqd3QiLCJjYWxsYmFja1VybCIsImxvZ2dlciIsInNlc3Npb24iLCJzZXNzaW9uVG9rZW4iLCJyZWRpcmVjdCIsInN0cmF0ZWd5IiwiX2V2ZW50cyRzaWduT3V0IiwiZGVjb2RlZEp3dCIsImRlY29kZSIsInRva2VuIiwic2lnbk91dCIsImNhbGwiLCJlcnJvciIsIl9ldmVudHMkc2lnbk91dDIiLCJkZWxldGVTZXNzaW9uIiwic2Vzc2lvbkNvb2tpZXMiLCJjbGVhbiIsImNvb2tpZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/types.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3R5cGVzLmpzP2U4MWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/css/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/css/index.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = function() {\n    return ':root{--border-width:1px;--border-radius:0.5rem;--color-error:#c94b4b;--color-info:#157efb;--color-info-text:#fff}.__next-auth-theme-auto,.__next-auth-theme-light{--color-background:#ececec;--color-background-card:#fff;--color-text:#000;--color-primary:#444;--color-control-border:#bbb;--color-button-active-background:#f9f9f9;--color-button-active-border:#aaa;--color-seperator:#ccc}.__next-auth-theme-dark{--color-background:#161b22;--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-seperator:#444}@media (prefers-color-scheme:dark){.__next-auth-theme-auto{--color-background:#161b22;--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-seperator:#444}}body{background-color:var(--color-background);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;margin:0;padding:0}h1{font-weight:400;margin-bottom:1.5rem;padding:0 1rem}h1,p{color:var(--color-text)}form{margin:0;padding:0}label{font-weight:500;margin-bottom:.25rem;text-align:left}input[type],label{color:var(--color-text);display:block}input[type]{background:var(--color-background-card);border:var(--border-width) solid var(--color-control-border);border-radius:var(--border-radius);box-sizing:border-box;font-size:1rem;padding:.5rem 1rem;width:100%}input[type]:focus{box-shadow:none}p{font-size:1.1rem;line-height:2rem;margin:0 0 1.5rem;padding:0 1rem}a.button{line-height:1rem;text-decoration:none}a.button:link,a.button:visited{background-color:var(--color-background);color:var(--color-primary)}button span{flex-grow:1}a.button,button{align-items:center;background-color:var(--provider-bg,var(--color-background-card));border-color:rgba(0,0,0,.1);border-radius:var(--border-radius);color:var(--provider-color,var(--color-primary));display:flex;font-size:1.1rem;font-weight:500;justify-content:center;margin:0 0 .75rem;min-height:62px;padding:.75rem 1rem;position:relative;transition:all .1s ease-in-out}@media (max-width:450px){a.button,button{font-size:.9rem}}a.button:active,a.button:hover,button:active,button:hover{cursor:pointer}a.button #provider-logo,button #provider-logo{display:block;width:25px}a.button #provider-logo-dark,button #provider-logo-dark{display:none}#submitButton{background-color:var(--brand-color,var(--color-info));color:var(--button-text-color,var(--color-info-text));width:100%}@media (prefers-color-scheme:dark){a.button,button{background-color:var(--provider-dark-bg,var(--color-background));color:var(--provider-dark-color,var(--color-primary))}#provider-logo{display:none!important}#provider-logo-dark{display:block!important;width:25px}}a.site{color:var(--color-primary);font-size:1rem;line-height:2rem;text-decoration:none}a.site:hover{text-decoration:underline}.page{display:grid;height:100%;margin:0;padding:0;place-items:center;position:absolute;width:100%}.page>div{text-align:center}.error a.button{display:inline-block;margin-top:.5rem;padding-left:2rem;padding-right:2rem}.error .message{margin-bottom:1.5rem}.signin input[type=text]{display:block;margin-left:auto;margin-right:auto}.signin hr{border:0;border-top:1px solid var(--color-seperator);display:block;margin:2rem auto 1rem;overflow:visible}.signin hr:before{background:var(--color-background-card);color:#888;content:\"or\";padding:0 .4rem;position:relative;top:-.7rem}.signin .error{background:#f5f5f5;background:var(--color-error);border-radius:.3rem;font-weight:500}.signin .error p{color:var(--color-info-text);font-size:.9rem;line-height:1.2rem;padding:.5rem 1rem;text-align:left}.signin form,.signin>div{display:block}.signin form input[type],.signin>div input[type]{margin-bottom:.5rem}.signin form button,.signin>div button{width:100%}.signin form,.signin>div{max-width:300px}.logo{display:inline-block;margin-bottom:25px;margin-top:20px;max-height:70px;max-width:150px}@media screen and (min-width:450px){.card{width:350px}}@media screen and (max-width:450px){.card{width:200px}}.card{background-color:var(--color-background-card);border-radius:30px;margin:20px 0;padding:20px 50px}.card .header{color:var(--color-primary)}.section-header{color:var(--color-text)}';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2Nzcy9pbmRleC5qcz9jNjFhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIjpyb290ey0tYm9yZGVyLXdpZHRoOjFweDstLWJvcmRlci1yYWRpdXM6MC41cmVtOy0tY29sb3ItZXJyb3I6I2M5NGI0YjstLWNvbG9yLWluZm86IzE1N2VmYjstLWNvbG9yLWluZm8tdGV4dDojZmZmfS5fX25leHQtYXV0aC10aGVtZS1hdXRvLC5fX25leHQtYXV0aC10aGVtZS1saWdodHstLWNvbG9yLWJhY2tncm91bmQ6I2VjZWNlYzstLWNvbG9yLWJhY2tncm91bmQtY2FyZDojZmZmOy0tY29sb3ItdGV4dDojMDAwOy0tY29sb3ItcHJpbWFyeTojNDQ0Oy0tY29sb3ItY29udHJvbC1ib3JkZXI6I2JiYjstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYmFja2dyb3VuZDojZjlmOWY5Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1ib3JkZXI6I2FhYTstLWNvbG9yLXNlcGVyYXRvcjojY2NjfS5fX25leHQtYXV0aC10aGVtZS1kYXJrey0tY29sb3ItYmFja2dyb3VuZDojMTYxYjIyOy0tY29sb3ItYmFja2dyb3VuZC1jYXJkOiMwZDExMTc7LS1jb2xvci10ZXh0OiNmZmY7LS1jb2xvci1wcmltYXJ5OiNjY2M7LS1jb2xvci1jb250cm9sLWJvcmRlcjojNTU1Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1iYWNrZ3JvdW5kOiMwNjA2MDY7LS1jb2xvci1idXR0b24tYWN0aXZlLWJvcmRlcjojNjY2Oy0tY29sb3Itc2VwZXJhdG9yOiM0NDR9QG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTpkYXJrKXsuX19uZXh0LWF1dGgtdGhlbWUtYXV0b3stLWNvbG9yLWJhY2tncm91bmQ6IzE2MWIyMjstLWNvbG9yLWJhY2tncm91bmQtY2FyZDojMGQxMTE3Oy0tY29sb3ItdGV4dDojZmZmOy0tY29sb3ItcHJpbWFyeTojY2NjOy0tY29sb3ItY29udHJvbC1ib3JkZXI6IzU1NTstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYmFja2dyb3VuZDojMDYwNjA2Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1ib3JkZXI6IzY2NjstLWNvbG9yLXNlcGVyYXRvcjojNDQ0fX1ib2R5e2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZCk7Zm9udC1mYW1pbHk6dWktc2Fucy1zZXJpZixzeXN0ZW0tdWksLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsU2Vnb2UgVUksUm9ib3RvLEhlbHZldGljYSBOZXVlLEFyaWFsLE5vdG8gU2FucyxzYW5zLXNlcmlmLEFwcGxlIENvbG9yIEVtb2ppLFNlZ29lIFVJIEVtb2ppLFNlZ29lIFVJIFN5bWJvbCxOb3RvIENvbG9yIEVtb2ppO21hcmdpbjowO3BhZGRpbmc6MH1oMXtmb250LXdlaWdodDo0MDA7bWFyZ2luLWJvdHRvbToxLjVyZW07cGFkZGluZzowIDFyZW19aDEscHtjb2xvcjp2YXIoLS1jb2xvci10ZXh0KX1mb3Jte21hcmdpbjowO3BhZGRpbmc6MH1sYWJlbHtmb250LXdlaWdodDo1MDA7bWFyZ2luLWJvdHRvbTouMjVyZW07dGV4dC1hbGlnbjpsZWZ0fWlucHV0W3R5cGVdLGxhYmVse2NvbG9yOnZhcigtLWNvbG9yLXRleHQpO2Rpc3BsYXk6YmxvY2t9aW5wdXRbdHlwZV17YmFja2dyb3VuZDp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQpO2JvcmRlcjp2YXIoLS1ib3JkZXItd2lkdGgpIHNvbGlkIHZhcigtLWNvbG9yLWNvbnRyb2wtYm9yZGVyKTtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LXNpemU6MXJlbTtwYWRkaW5nOi41cmVtIDFyZW07d2lkdGg6MTAwJX1pbnB1dFt0eXBlXTpmb2N1c3tib3gtc2hhZG93Om5vbmV9cHtmb250LXNpemU6MS4xcmVtO2xpbmUtaGVpZ2h0OjJyZW07bWFyZ2luOjAgMCAxLjVyZW07cGFkZGluZzowIDFyZW19YS5idXR0b257bGluZS1oZWlnaHQ6MXJlbTt0ZXh0LWRlY29yYXRpb246bm9uZX1hLmJ1dHRvbjpsaW5rLGEuYnV0dG9uOnZpc2l0ZWR7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKTtjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KX1idXR0b24gc3BhbntmbGV4LWdyb3c6MX1hLmJ1dHRvbixidXR0b257YWxpZ24taXRlbXM6Y2VudGVyO2JhY2tncm91bmQtY29sb3I6dmFyKC0tcHJvdmlkZXItYmcsdmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKSk7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjEpO2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7Y29sb3I6dmFyKC0tcHJvdmlkZXItY29sb3IsdmFyKC0tY29sb3ItcHJpbWFyeSkpO2Rpc3BsYXk6ZmxleDtmb250LXNpemU6MS4xcmVtO2ZvbnQtd2VpZ2h0OjUwMDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbjowIDAgLjc1cmVtO21pbi1oZWlnaHQ6NjJweDtwYWRkaW5nOi43NXJlbSAxcmVtO3Bvc2l0aW9uOnJlbGF0aXZlO3RyYW5zaXRpb246YWxsIC4xcyBlYXNlLWluLW91dH1AbWVkaWEgKG1heC13aWR0aDo0NTBweCl7YS5idXR0b24sYnV0dG9ue2ZvbnQtc2l6ZTouOXJlbX19YS5idXR0b246YWN0aXZlLGEuYnV0dG9uOmhvdmVyLGJ1dHRvbjphY3RpdmUsYnV0dG9uOmhvdmVye2N1cnNvcjpwb2ludGVyfWEuYnV0dG9uICNwcm92aWRlci1sb2dvLGJ1dHRvbiAjcHJvdmlkZXItbG9nb3tkaXNwbGF5OmJsb2NrO3dpZHRoOjI1cHh9YS5idXR0b24gI3Byb3ZpZGVyLWxvZ28tZGFyayxidXR0b24gI3Byb3ZpZGVyLWxvZ28tZGFya3tkaXNwbGF5Om5vbmV9I3N1Ym1pdEJ1dHRvbntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWJyYW5kLWNvbG9yLHZhcigtLWNvbG9yLWluZm8pKTtjb2xvcjp2YXIoLS1idXR0b24tdGV4dC1jb2xvcix2YXIoLS1jb2xvci1pbmZvLXRleHQpKTt3aWR0aDoxMDAlfUBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6ZGFyayl7YS5idXR0b24sYnV0dG9ue2JhY2tncm91bmQtY29sb3I6dmFyKC0tcHJvdmlkZXItZGFyay1iZyx2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKSk7Y29sb3I6dmFyKC0tcHJvdmlkZXItZGFyay1jb2xvcix2YXIoLS1jb2xvci1wcmltYXJ5KSl9I3Byb3ZpZGVyLWxvZ297ZGlzcGxheTpub25lIWltcG9ydGFudH0jcHJvdmlkZXItbG9nby1kYXJre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOjI1cHh9fWEuc2l0ZXtjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KTtmb250LXNpemU6MXJlbTtsaW5lLWhlaWdodDoycmVtO3RleHQtZGVjb3JhdGlvbjpub25lfWEuc2l0ZTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5wYWdle2Rpc3BsYXk6Z3JpZDtoZWlnaHQ6MTAwJTttYXJnaW46MDtwYWRkaW5nOjA7cGxhY2UtaXRlbXM6Y2VudGVyO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCV9LnBhZ2U+ZGl2e3RleHQtYWxpZ246Y2VudGVyfS5lcnJvciBhLmJ1dHRvbntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tdG9wOi41cmVtO3BhZGRpbmctbGVmdDoycmVtO3BhZGRpbmctcmlnaHQ6MnJlbX0uZXJyb3IgLm1lc3NhZ2V7bWFyZ2luLWJvdHRvbToxLjVyZW19LnNpZ25pbiBpbnB1dFt0eXBlPXRleHRde2Rpc3BsYXk6YmxvY2s7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0b30uc2lnbmluIGhye2JvcmRlcjowO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLWNvbG9yLXNlcGVyYXRvcik7ZGlzcGxheTpibG9jazttYXJnaW46MnJlbSBhdXRvIDFyZW07b3ZlcmZsb3c6dmlzaWJsZX0uc2lnbmluIGhyOmJlZm9yZXtiYWNrZ3JvdW5kOnZhcigtLWNvbG9yLWJhY2tncm91bmQtY2FyZCk7Y29sb3I6Izg4ODtjb250ZW50OlxcXCJvclxcXCI7cGFkZGluZzowIC40cmVtO3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotLjdyZW19LnNpZ25pbiAuZXJyb3J7YmFja2dyb3VuZDojZjVmNWY1O2JhY2tncm91bmQ6dmFyKC0tY29sb3ItZXJyb3IpO2JvcmRlci1yYWRpdXM6LjNyZW07Zm9udC13ZWlnaHQ6NTAwfS5zaWduaW4gLmVycm9yIHB7Y29sb3I6dmFyKC0tY29sb3ItaW5mby10ZXh0KTtmb250LXNpemU6LjlyZW07bGluZS1oZWlnaHQ6MS4ycmVtO3BhZGRpbmc6LjVyZW0gMXJlbTt0ZXh0LWFsaWduOmxlZnR9LnNpZ25pbiBmb3JtLC5zaWduaW4+ZGl2e2Rpc3BsYXk6YmxvY2t9LnNpZ25pbiBmb3JtIGlucHV0W3R5cGVdLC5zaWduaW4+ZGl2IGlucHV0W3R5cGVde21hcmdpbi1ib3R0b206LjVyZW19LnNpZ25pbiBmb3JtIGJ1dHRvbiwuc2lnbmluPmRpdiBidXR0b257d2lkdGg6MTAwJX0uc2lnbmluIGZvcm0sLnNpZ25pbj5kaXZ7bWF4LXdpZHRoOjMwMHB4fS5sb2dve2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1ib3R0b206MjVweDttYXJnaW4tdG9wOjIwcHg7bWF4LWhlaWdodDo3MHB4O21heC13aWR0aDoxNTBweH1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjQ1MHB4KXsuY2FyZHt3aWR0aDozNTBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDo0NTBweCl7LmNhcmR7d2lkdGg6MjAwcHh9fS5jYXJke2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKTtib3JkZXItcmFkaXVzOjMwcHg7bWFyZ2luOjIwcHggMDtwYWRkaW5nOjIwcHggNTBweH0uY2FyZCAuaGVhZGVye2NvbG9yOnZhcigtLWNvbG9yLXByaW1hcnkpfS5zZWN0aW9uLWhlYWRlcntjb2xvcjp2YXIoLS1jb2xvci10ZXh0KX1cIiB9Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFPLEdBQUc7SUFBYSxPQUFPO0FBQTIxSSIsImZpbGUiOiIocnNjKS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY3NzL2luZGV4LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/css/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {};\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _next.default;\n    }\n}));\nvar _types = __webpack_require__(/*! ./core/types */ \"(rsc)/./node_modules/next-auth/core/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _types[key];\n        }\n    });\n});\nvar _next = _interopRequireWildcard(__webpack_require__(/*! ./next */ \"(rsc)/./node_modules/next-auth/next/index.js\"));\nObject.keys(_next).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _next[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _next[key];\n        }\n    });\n});\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGLElBQUlDLGVBQWUsQ0FBQztBQUNwQkosMkNBQTBDO0lBQ3hDSyxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPQyxNQUFNQyxPQUFPO0lBQ3RCO0FBQ0YsQ0FBQyxFQUFDO0FBRUYsSUFBSUMsU0FBU0MsbUJBQU9BLENBQUMsa0VBQWM7QUFFbkNWLE9BQU9XLElBQUksQ0FBQ0YsUUFBUUcsT0FBTyxDQUFDLFNBQVVDLEdBQUc7SUFDdkMsSUFBSUEsUUFBUSxhQUFhQSxRQUFRLGNBQWM7SUFDL0MsSUFBSWIsT0FBT2MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1osY0FBY1MsTUFBTTtJQUM3RCxJQUFJQSxPQUFPWCxXQUFXQSxPQUFPLENBQUNXLElBQUksS0FBS0osTUFBTSxDQUFDSSxJQUFJLEVBQUU7SUFDcERiLE9BQU9DLGNBQWMsQ0FBQ0MsU0FBU1csS0FBSztRQUNsQ1IsWUFBWTtRQUNaQyxLQUFLO1lBQ0gsT0FBT0csTUFBTSxDQUFDSSxJQUFJO1FBQ3BCO0lBQ0Y7QUFDRjtBQUVBLElBQUlOLFFBQVFVLHdCQUF3QlAsbUJBQU9BLENBQUMsNERBQVE7QUFFcERWLE9BQU9XLElBQUksQ0FBQ0osT0FBT0ssT0FBTyxDQUFDLFNBQVVDLEdBQUc7SUFDdEMsSUFBSUEsUUFBUSxhQUFhQSxRQUFRLGNBQWM7SUFDL0MsSUFBSWIsT0FBT2MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1osY0FBY1MsTUFBTTtJQUM3RCxJQUFJQSxPQUFPWCxXQUFXQSxPQUFPLENBQUNXLElBQUksS0FBS04sS0FBSyxDQUFDTSxJQUFJLEVBQUU7SUFDbkRiLE9BQU9DLGNBQWMsQ0FBQ0MsU0FBU1csS0FBSztRQUNsQ1IsWUFBWTtRQUNaQyxLQUFLO1lBQ0gsT0FBT0MsS0FBSyxDQUFDTSxJQUFJO1FBQ25CO0lBQ0Y7QUFDRjtBQUVBLFNBQVNLLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBRXRULFNBQVNGLHdCQUF3Qk0sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJQyxVQUFVLEVBQUU7UUFBRSxPQUFPRDtJQUFLO0lBQUUsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsWUFBWSxPQUFPQSxRQUFRLFlBQVk7UUFBRSxPQUFPO1lBQUVmLFNBQVNlO1FBQUk7SUFBRztJQUFFLElBQUlFLFFBQVFQLHlCQUF5QkM7SUFBYyxJQUFJTSxTQUFTQSxNQUFNQyxHQUFHLENBQUNILE1BQU07UUFBRSxPQUFPRSxNQUFNbkIsR0FBRyxDQUFDaUI7SUFBTTtJQUFFLElBQUlJLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QjVCLE9BQU9DLGNBQWMsSUFBSUQsT0FBTzZCLHdCQUF3QjtJQUFFLElBQUssSUFBSWhCLE9BQU9VLElBQUs7UUFBRSxJQUFJVixRQUFRLGFBQWFiLE9BQU9jLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNPLEtBQUtWLE1BQU07WUFBRSxJQUFJaUIsT0FBT0Ysd0JBQXdCNUIsT0FBTzZCLHdCQUF3QixDQUFDTixLQUFLVixPQUFPO1lBQU0sSUFBSWlCLFFBQVNBLENBQUFBLEtBQUt4QixHQUFHLElBQUl3QixLQUFLQyxHQUFHLEdBQUc7Z0JBQUUvQixPQUFPQyxjQUFjLENBQUMwQixRQUFRZCxLQUFLaUI7WUFBTyxPQUFPO2dCQUFFSCxNQUFNLENBQUNkLElBQUksR0FBR1UsR0FBRyxDQUFDVixJQUFJO1lBQUU7UUFBRTtJQUFFO0lBQUVjLE9BQU9uQixPQUFPLEdBQUdlO0lBQUssSUFBSUUsT0FBTztRQUFFQSxNQUFNTSxHQUFHLENBQUNSLEtBQUtJO0lBQVM7SUFBRSxPQUFPQTtBQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1hdXRoLXJlZ2lzdGVyLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9pbmRleC5qcz85NjA4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIF9leHBvcnROYW1lcyA9IHt9O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfbmV4dC5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF90eXBlcyA9IHJlcXVpcmUoXCIuL2NvcmUvdHlwZXNcIik7XG5cbk9iamVjdC5rZXlzKF90eXBlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3R5cGVzW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3R5cGVzW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuXG52YXIgX25leHQgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9uZXh0XCIpKTtcblxuT2JqZWN0LmtleXMoX25leHQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9uZXh0W2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX25leHRba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgcmV0dXJuIChfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiAobm9kZUludGVyb3ApIHsgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wOyB9KShub2RlSW50ZXJvcCk7IH1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2V4cG9ydE5hbWVzIiwiZW51bWVyYWJsZSIsImdldCIsIl9uZXh0IiwiZGVmYXVsdCIsIl90eXBlcyIsInJlcXVpcmUiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZGVzYyIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/jwt/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {\n    encode: true,\n    decode: true,\n    getToken: true\n};\nexports.decode = decode;\nexports.encode = encode;\nexports.getToken = getToken;\nvar _jose = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/cjs/index.js\");\nvar _hkdf = _interopRequireDefault(__webpack_require__(/*! @panva/hkdf */ \"(rsc)/./node_modules/@panva/hkdf/dist/node/cjs/index.js\"));\nvar _uuid = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/index.js\");\nvar _cookie = __webpack_require__(/*! ../core/lib/cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/next-auth/jwt/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _types[key];\n        }\n    });\n});\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60;\nconst now = ()=>Date.now() / 1000 | 0;\nasync function encode(params) {\n    const { token = {}, secret, maxAge = DEFAULT_MAX_AGE } = params;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    return await new _jose.EncryptJWT(token).setProtectedHeader({\n        alg: \"dir\",\n        enc: \"A256GCM\"\n    }).setIssuedAt().setExpirationTime(now() + maxAge).setJti((0, _uuid.v4)()).encrypt(encryptionSecret);\n}\nasync function decode(params) {\n    const { token, secret } = params;\n    if (!token) return null;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    const { payload } = await (0, _jose.jwtDecrypt)(token, encryptionSecret, {\n        clockTolerance: 15\n    });\n    return payload;\n}\nasync function getToken(params) {\n    var _process$env$NEXTAUTH, _process$env$NEXTAUTH2, _req$headers;\n    const { req, secureCookie = (_process$env$NEXTAUTH = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL) === null || _process$env$NEXTAUTH2 === void 0 ? void 0 : _process$env$NEXTAUTH2.startsWith(\"https://\")) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : !!process.env.VERCEL, cookieName = secureCookie ? \"__Secure-next-auth.session-token\" : \"next-auth.session-token\", raw, decode: _decode = decode, logger = console, secret = process.env.NEXTAUTH_SECRET } = params;\n    if (!req) throw new Error(\"Must pass `req` to JWT getToken()\");\n    const sessionStore = new _cookie.SessionStore({\n        name: cookieName,\n        options: {\n            secure: secureCookie\n        }\n    }, {\n        cookies: req.cookies,\n        headers: req.headers\n    }, logger);\n    let token = sessionStore.value;\n    const authorizationHeader = req.headers instanceof Headers ? req.headers.get(\"authorization\") : (_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.authorization;\n    if (!token && (authorizationHeader === null || authorizationHeader === void 0 ? void 0 : authorizationHeader.split(\" \")[0]) === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token) return null;\n    if (raw) return token;\n    try {\n        return await _decode({\n            token,\n            secret\n        });\n    } catch (_unused) {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(secret) {\n    return await (0, _hkdf.default)(\"sha256\", secret, \"\", \"NextAuth.js Generated Encryption Key\", 32);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/jwt/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/jwt/types.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/types.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC90eXBlcy5qcz9kNGMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/jwt/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/next/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.getServerSession = getServerSession;\nexports.unstable_getServerSession = unstable_getServerSession;\nvar _core = __webpack_require__(/*! ../core */ \"(rsc)/./node_modules/next-auth/core/index.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/next-auth/next/utils.js\");\nasync function NextAuthApiHandler(req, res, options) {\n    var _options$secret, _options$jwt$secret, _options$jwt, _ref, _handler$status, _handler$cookies, _handler$headers;\n    const { nextauth, ...query } = req.query;\n    (_options$secret = options.secret) !== null && _options$secret !== void 0 ? _options$secret : options.secret = (_options$jwt$secret = (_options$jwt = options.jwt) === null || _options$jwt === void 0 ? void 0 : _options$jwt.secret) !== null && _options$jwt$secret !== void 0 ? _options$jwt$secret : process.env.NEXTAUTH_SECRET;\n    const handler = await (0, _core.AuthHandler)({\n        req: {\n            body: req.body,\n            query,\n            cookies: req.cookies,\n            headers: req.headers,\n            method: req.method,\n            action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n            providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n            error: (_ref = req.query.error) !== null && _ref !== void 0 ? _ref : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n        },\n        options\n    });\n    res.status((_handler$status = handler.status) !== null && _handler$status !== void 0 ? _handler$status : 200);\n    (_handler$cookies = handler.cookies) === null || _handler$cookies === void 0 ? void 0 : _handler$cookies.forEach((cookie)=>(0, _utils.setCookie)(res, cookie));\n    (_handler$headers = handler.headers) === null || _handler$headers === void 0 ? void 0 : _handler$headers.forEach((h)=>res.setHeader(h.key, h.value));\n    if (handler.redirect) {\n        var _req$body;\n        if (((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.json) !== \"true\") {\n            res.status(302).setHeader(\"Location\", handler.redirect);\n            res.end();\n            return;\n        }\n        return res.json({\n            url: handler.redirect\n        });\n    }\n    return res.send(handler.body);\n}\nasync function NextAuthRouteHandler(req, context, options) {\n    var _options$secret2, _context$params, _query$error;\n    (_options$secret2 = options.secret) !== null && _options$secret2 !== void 0 ? _options$secret2 : options.secret = process.env.NEXTAUTH_SECRET;\n    const { headers, cookies } = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n    const nextauth = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.nextauth;\n    const query = Object.fromEntries(req.nextUrl.searchParams);\n    const body = await (0, _utils.getBody)(req);\n    const internalResponse = await (0, _core.AuthHandler)({\n        req: {\n            body,\n            query,\n            cookies: Object.fromEntries(cookies().getAll().map((c)=>[\n                    c.name,\n                    c.value\n                ])),\n            headers: Object.fromEntries(headers()),\n            method: req.method,\n            action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n            providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n            error: (_query$error = query.error) !== null && _query$error !== void 0 ? _query$error : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n        },\n        options\n    });\n    const response = (0, _utils.toResponse)(internalResponse);\n    const redirect = response.headers.get(\"Location\");\n    if ((body === null || body === void 0 ? void 0 : body.json) === \"true\" && redirect) {\n        response.headers.delete(\"Location\");\n        response.headers.set(\"Content-Type\", \"application/json\");\n        return new Response(JSON.stringify({\n            url: redirect\n        }), {\n            headers: response.headers\n        });\n    }\n    return response;\n}\nfunction NextAuth(...args) {\n    var _args$;\n    if (args.length === 1) {\n        return async (req, res)=>{\n            if (res !== null && res !== void 0 && res.params) {\n                return await NextAuthRouteHandler(req, res, args[0]);\n            }\n            return await NextAuthApiHandler(req, res, args[0]);\n        };\n    }\n    if ((_args$ = args[1]) !== null && _args$ !== void 0 && _args$.params) {\n        return NextAuthRouteHandler(...args);\n    }\n    return NextAuthApiHandler(...args);\n}\nvar _default = NextAuth;\nexports[\"default\"] = _default;\nasync function getServerSession(...args) {\n    var _options, _options$secret3;\n    const isRSC = args.length === 0 || args.length === 1;\n    let req, res, options;\n    if (isRSC) {\n        options = Object.assign({}, args[0], {\n            providers: []\n        });\n        const { headers, cookies } = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n        req = {\n            headers: Object.fromEntries(headers()),\n            cookies: Object.fromEntries(cookies().getAll().map((c)=>[\n                    c.name,\n                    c.value\n                ]))\n        };\n        res = {\n            getHeader () {},\n            setCookie () {},\n            setHeader () {}\n        };\n    } else {\n        req = args[0];\n        res = args[1];\n        options = Object.assign({}, args[2], {\n            providers: []\n        });\n    }\n    (_options$secret3 = (_options = options).secret) !== null && _options$secret3 !== void 0 ? _options$secret3 : _options.secret = process.env.NEXTAUTH_SECRET;\n    const session = await (0, _core.AuthHandler)({\n        options,\n        req: {\n            action: \"session\",\n            method: \"GET\",\n            cookies: req.cookies,\n            headers: req.headers\n        }\n    });\n    const { body, cookies, status = 200 } = session;\n    cookies === null || cookies === void 0 ? void 0 : cookies.forEach((cookie)=>(0, _utils.setCookie)(res, cookie));\n    if (body && typeof body !== \"string\" && Object.keys(body).length) {\n        if (status === 200) {\n            if (isRSC) delete body.expires;\n            return body;\n        }\n        throw new Error(body.message);\n    }\n    return null;\n}\nlet deprecatedWarningShown = false;\nasync function unstable_getServerSession(...args) {\n    if (!deprecatedWarningShown && \"development\" !== \"production\") {\n        console.warn(\"`unstable_getServerSession` has been renamed to `getServerSession`.\");\n        deprecatedWarningShown = true;\n    }\n    return await getServerSession(...args);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/next/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/next/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getBody = getBody;\nexports.setCookie = setCookie;\nexports.toResponse = toResponse;\nvar _cookie = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\nfunction setCookie(res, cookie) {\n    var _res$getHeader;\n    let setCookieHeader = (_res$getHeader = res.getHeader(\"Set-Cookie\")) !== null && _res$getHeader !== void 0 ? _res$getHeader : [];\n    if (!Array.isArray(setCookieHeader)) {\n        setCookieHeader = [\n            setCookieHeader\n        ];\n    }\n    const { name, value, options } = cookie;\n    const cookieHeader = (0, _cookie.serialize)(name, value, options);\n    setCookieHeader.push(cookieHeader);\n    res.setHeader(\"Set-Cookie\", setCookieHeader);\n}\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\") return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/json\")) {\n        return await req.json();\n    } else if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nfunction toResponse(res) {\n    var _res$headers, _res$cookies, _res$status;\n    const headers = new Headers((_res$headers = res.headers) === null || _res$headers === void 0 ? void 0 : _res$headers.reduce((acc, { key, value })=>{\n        acc[key] = value;\n        return acc;\n    }, {}));\n    (_res$cookies = res.cookies) === null || _res$cookies === void 0 ? void 0 : _res$cookies.forEach((cookie)=>{\n        const { name, value, options } = cookie;\n        const cookieHeader = (0, _cookie.serialize)(name, value, options);\n        if (headers.has(\"Set-Cookie\")) headers.append(\"Set-Cookie\", cookieHeader);\n        else headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\") body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\") body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : (_res$status = res.status) !== null && _res$status !== void 0 ? _res$status : 200;\n    const response = new Response(body, {\n        headers,\n        status\n    });\n    if (res.redirect) response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGVBQWUsR0FBR0U7QUFDbEJGLGlCQUFpQixHQUFHRztBQUNwQkgsa0JBQWtCLEdBQUdJO0FBRXJCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLG9EQUFRO0FBRTlCLFNBQVNILFVBQVVJLEdBQUcsRUFBRUMsTUFBTTtJQUM1QixJQUFJQztJQUVKLElBQUlDLGtCQUFrQixDQUFDRCxpQkFBaUJGLElBQUlJLFNBQVMsQ0FBQyxhQUFZLE1BQU8sUUFBUUYsbUJBQW1CLEtBQUssSUFBSUEsaUJBQWlCLEVBQUU7SUFFaEksSUFBSSxDQUFDRyxNQUFNQyxPQUFPLENBQUNILGtCQUFrQjtRQUNuQ0Esa0JBQWtCO1lBQUNBO1NBQWdCO0lBQ3JDO0lBRUEsTUFBTSxFQUNKSSxJQUFJLEVBQ0piLEtBQUssRUFDTGMsT0FBTyxFQUNSLEdBQUdQO0lBQ0osTUFBTVEsZUFBZSxDQUFDLEdBQUdYLFFBQVFZLFNBQVMsRUFBRUgsTUFBTWIsT0FBT2M7SUFDekRMLGdCQUFnQlEsSUFBSSxDQUFDRjtJQUNyQlQsSUFBSVksU0FBUyxDQUFDLGNBQWNUO0FBQzlCO0FBRUEsZUFBZVIsUUFBUWtCLEdBQUc7SUFDeEIsSUFBSSxDQUFFLFdBQVVBLEdBQUUsS0FBTSxDQUFDQSxJQUFJQyxJQUFJLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO0lBQzVELE1BQU1DLGNBQWNILElBQUlJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO0lBRXBDLElBQUlGLGdCQUFnQixRQUFRQSxnQkFBZ0IsS0FBSyxLQUFLQSxZQUFZRyxRQUFRLENBQUMscUJBQXFCO1FBQzlGLE9BQU8sTUFBTU4sSUFBSU8sSUFBSTtJQUN2QixPQUFPLElBQUlKLGdCQUFnQixRQUFRQSxnQkFBZ0IsS0FBSyxLQUFLQSxZQUFZRyxRQUFRLENBQUMsc0NBQXNDO1FBQ3RILE1BQU1FLFNBQVMsSUFBSUMsZ0JBQWdCLE1BQU1ULElBQUlVLElBQUk7UUFDakQsT0FBT2hDLE9BQU9pQyxXQUFXLENBQUNIO0lBQzVCO0FBQ0Y7QUFFQSxTQUFTeEIsV0FBV0csR0FBRztJQUNyQixJQUFJeUIsY0FBY0MsY0FBY0M7SUFFaEMsTUFBTVYsVUFBVSxJQUFJVyxRQUFRLENBQUNILGVBQWV6QixJQUFJaUIsT0FBTyxNQUFNLFFBQVFRLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhSSxNQUFNLENBQUMsQ0FBQ0MsS0FBSyxFQUNoSUMsR0FBRyxFQUNIckMsS0FBSyxFQUNOO1FBQ0NvQyxHQUFHLENBQUNDLElBQUksR0FBR3JDO1FBQ1gsT0FBT29DO0lBQ1QsR0FBRyxDQUFDO0lBQ0hKLENBQUFBLGVBQWUxQixJQUFJZ0MsT0FBTyxNQUFNLFFBQVFOLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhTyxPQUFPLENBQUNoQyxDQUFBQTtRQUMvRixNQUFNLEVBQ0pNLElBQUksRUFDSmIsS0FBSyxFQUNMYyxPQUFPLEVBQ1IsR0FBR1A7UUFDSixNQUFNUSxlQUFlLENBQUMsR0FBR1gsUUFBUVksU0FBUyxFQUFFSCxNQUFNYixPQUFPYztRQUN6RCxJQUFJUyxRQUFRaUIsR0FBRyxDQUFDLGVBQWVqQixRQUFRa0IsTUFBTSxDQUFDLGNBQWMxQjthQUFtQlEsUUFBUW1CLEdBQUcsQ0FBQyxjQUFjM0I7SUFDM0c7SUFDQSxJQUFJSyxPQUFPZCxJQUFJYyxJQUFJO0lBQ25CLElBQUlHLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0Isb0JBQW9CSixPQUFPdUIsS0FBS0MsU0FBUyxDQUFDdEMsSUFBSWMsSUFBSTtTQUFPLElBQUlHLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0IscUNBQXFDSixPQUFPLElBQUlRLGdCQUFnQnRCLElBQUljLElBQUksRUFBRXlCLFFBQVE7SUFDbk4sTUFBTUMsU0FBU3hDLElBQUl5QyxRQUFRLEdBQUcsTUFBTSxDQUFDZCxjQUFjM0IsSUFBSXdDLE1BQU0sTUFBTSxRQUFRYixnQkFBZ0IsS0FBSyxJQUFJQSxjQUFjO0lBQ2xILE1BQU1lLFdBQVcsSUFBSUMsU0FBUzdCLE1BQU07UUFDbENHO1FBQ0F1QjtJQUNGO0lBQ0EsSUFBSXhDLElBQUl5QyxRQUFRLEVBQUVDLFNBQVN6QixPQUFPLENBQUNtQixHQUFHLENBQUMsWUFBWXBDLElBQUl5QyxRQUFRO0lBQy9ELE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanM/YmYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZ2V0Qm9keSA9IGdldEJvZHk7XG5leHBvcnRzLnNldENvb2tpZSA9IHNldENvb2tpZTtcbmV4cG9ydHMudG9SZXNwb25zZSA9IHRvUmVzcG9uc2U7XG5cbnZhciBfY29va2llID0gcmVxdWlyZShcImNvb2tpZVwiKTtcblxuZnVuY3Rpb24gc2V0Q29va2llKHJlcywgY29va2llKSB7XG4gIHZhciBfcmVzJGdldEhlYWRlcjtcblxuICBsZXQgc2V0Q29va2llSGVhZGVyID0gKF9yZXMkZ2V0SGVhZGVyID0gcmVzLmdldEhlYWRlcihcIlNldC1Db29raWVcIikpICE9PSBudWxsICYmIF9yZXMkZ2V0SGVhZGVyICE9PSB2b2lkIDAgPyBfcmVzJGdldEhlYWRlciA6IFtdO1xuXG4gIGlmICghQXJyYXkuaXNBcnJheShzZXRDb29raWVIZWFkZXIpKSB7XG4gICAgc2V0Q29va2llSGVhZGVyID0gW3NldENvb2tpZUhlYWRlcl07XG4gIH1cblxuICBjb25zdCB7XG4gICAgbmFtZSxcbiAgICB2YWx1ZSxcbiAgICBvcHRpb25zXG4gIH0gPSBjb29raWU7XG4gIGNvbnN0IGNvb2tpZUhlYWRlciA9ICgwLCBfY29va2llLnNlcmlhbGl6ZSkobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICBzZXRDb29raWVIZWFkZXIucHVzaChjb29raWVIZWFkZXIpO1xuICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBzZXRDb29raWVIZWFkZXIpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRCb2R5KHJlcSkge1xuICBpZiAoIShcImJvZHlcIiBpbiByZXEpIHx8ICFyZXEuYm9keSB8fCByZXEubWV0aG9kICE9PSBcIlBPU1RcIikgcmV0dXJuO1xuICBjb25zdCBjb250ZW50VHlwZSA9IHJlcS5oZWFkZXJzLmdldChcImNvbnRlbnQtdHlwZVwiKTtcblxuICBpZiAoY29udGVudFR5cGUgIT09IG51bGwgJiYgY29udGVudFR5cGUgIT09IHZvaWQgMCAmJiBjb250ZW50VHlwZS5pbmNsdWRlcyhcImFwcGxpY2F0aW9uL2pzb25cIikpIHtcbiAgICByZXR1cm4gYXdhaXQgcmVxLmpzb24oKTtcbiAgfSBlbHNlIGlmIChjb250ZW50VHlwZSAhPT0gbnVsbCAmJiBjb250ZW50VHlwZSAhPT0gdm9pZCAwICYmIGNvbnRlbnRUeXBlLmluY2x1ZGVzKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpKSB7XG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhhd2FpdCByZXEudGV4dCgpKTtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKHBhcmFtcyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9SZXNwb25zZShyZXMpIHtcbiAgdmFyIF9yZXMkaGVhZGVycywgX3JlcyRjb29raWVzLCBfcmVzJHN0YXR1cztcblxuICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKF9yZXMkaGVhZGVycyA9IHJlcy5oZWFkZXJzKSA9PT0gbnVsbCB8fCBfcmVzJGhlYWRlcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXMkaGVhZGVycy5yZWR1Y2UoKGFjYywge1xuICAgIGtleSxcbiAgICB2YWx1ZVxuICB9KSA9PiB7XG4gICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSkpO1xuICAoX3JlcyRjb29raWVzID0gcmVzLmNvb2tpZXMpID09PSBudWxsIHx8IF9yZXMkY29va2llcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlcyRjb29raWVzLmZvckVhY2goY29va2llID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgdmFsdWUsXG4gICAgICBvcHRpb25zXG4gICAgfSA9IGNvb2tpZTtcbiAgICBjb25zdCBjb29raWVIZWFkZXIgPSAoMCwgX2Nvb2tpZS5zZXJpYWxpemUpKG5hbWUsIHZhbHVlLCBvcHRpb25zKTtcbiAgICBpZiAoaGVhZGVycy5oYXMoXCJTZXQtQ29va2llXCIpKSBoZWFkZXJzLmFwcGVuZChcIlNldC1Db29raWVcIiwgY29va2llSGVhZGVyKTtlbHNlIGhlYWRlcnMuc2V0KFwiU2V0LUNvb2tpZVwiLCBjb29raWVIZWFkZXIpO1xuICB9KTtcbiAgbGV0IGJvZHkgPSByZXMuYm9keTtcbiAgaWYgKGhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpID09PSBcImFwcGxpY2F0aW9uL2pzb25cIikgYm9keSA9IEpTT04uc3RyaW5naWZ5KHJlcy5ib2R5KTtlbHNlIGlmIChoZWFkZXJzLmdldChcImNvbnRlbnQtdHlwZVwiKSA9PT0gXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikgYm9keSA9IG5ldyBVUkxTZWFyY2hQYXJhbXMocmVzLmJvZHkpLnRvU3RyaW5nKCk7XG4gIGNvbnN0IHN0YXR1cyA9IHJlcy5yZWRpcmVjdCA/IDMwMiA6IChfcmVzJHN0YXR1cyA9IHJlcy5zdGF0dXMpICE9PSBudWxsICYmIF9yZXMkc3RhdHVzICE9PSB2b2lkIDAgPyBfcmVzJHN0YXR1cyA6IDIwMDtcbiAgY29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoYm9keSwge1xuICAgIGhlYWRlcnMsXG4gICAgc3RhdHVzXG4gIH0pO1xuICBpZiAocmVzLnJlZGlyZWN0KSByZXNwb25zZS5oZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIHJlcy5yZWRpcmVjdCk7XG4gIHJldHVybiByZXNwb25zZTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRCb2R5Iiwic2V0Q29va2llIiwidG9SZXNwb25zZSIsIl9jb29raWUiLCJyZXF1aXJlIiwicmVzIiwiY29va2llIiwiX3JlcyRnZXRIZWFkZXIiLCJzZXRDb29raWVIZWFkZXIiLCJnZXRIZWFkZXIiLCJBcnJheSIsImlzQXJyYXkiLCJuYW1lIiwib3B0aW9ucyIsImNvb2tpZUhlYWRlciIsInNlcmlhbGl6ZSIsInB1c2giLCJzZXRIZWFkZXIiLCJyZXEiLCJib2R5IiwibWV0aG9kIiwiY29udGVudFR5cGUiLCJoZWFkZXJzIiwiZ2V0IiwiaW5jbHVkZXMiLCJqc29uIiwicGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwidGV4dCIsImZyb21FbnRyaWVzIiwiX3JlcyRoZWFkZXJzIiwiX3JlcyRjb29raWVzIiwiX3JlcyRzdGF0dXMiLCJIZWFkZXJzIiwicmVkdWNlIiwiYWNjIiwia2V5IiwiY29va2llcyIsImZvckVhY2giLCJoYXMiLCJhcHBlbmQiLCJzZXQiLCJKU09OIiwic3RyaW5naWZ5IiwidG9TdHJpbmciLCJzdGF0dXMiLCJyZWRpcmVjdCIsInJlc3BvbnNlIiwiUmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/next/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/providers/credentials.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/providers/credentials.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = Credentials;\nfunction Credentials(options) {\n    return {\n        id: \"credentials\",\n        name: \"Credentials\",\n        type: \"credentials\",\n        credentials: {},\n        authorize: ()=>null,\n        options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsU0FBU0EsWUFBWUMsT0FBTztJQUMxQixPQUFPO1FBQ0xDLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxNQUFNO1FBQ05DLGFBQWEsQ0FBQztRQUNkQyxXQUFXLElBQU07UUFDakJMO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzLmpzPzc2MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBDcmVkZW50aWFscztcblxuZnVuY3Rpb24gQ3JlZGVudGlhbHMob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBcImNyZWRlbnRpYWxzXCIsXG4gICAgbmFtZTogXCJDcmVkZW50aWFsc1wiLFxuICAgIHR5cGU6IFwiY3JlZGVudGlhbHNcIixcbiAgICBjcmVkZW50aWFsczoge30sXG4gICAgYXV0aG9yaXplOiAoKSA9PiBudWxsLFxuICAgIG9wdGlvbnNcbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiQ3JlZGVudGlhbHMiLCJvcHRpb25zIiwiaWQiLCJuYW1lIiwidHlwZSIsImNyZWRlbnRpYWxzIiwiYXV0aG9yaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/providers/credentials.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/detect-origin.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/utils/detect-origin.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectOrigin = detectOrigin;\nfunction detectOrigin(forwardedHost, protocol) {\n    var _process$env$VERCEL;\n    if ((_process$env$VERCEL = process.env.VERCEL) !== null && _process$env$VERCEL !== void 0 ? _process$env$VERCEL : process.env.AUTH_TRUST_HOST) return `${protocol === \"http\" ? \"http\" : \"https\"}://${forwardedHost}`;\n    return process.env.NEXTAUTH_URL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQixHQUFHRTtBQUV2QixTQUFTQSxhQUFhQyxhQUFhLEVBQUVDLFFBQVE7SUFDM0MsSUFBSUM7SUFFSixJQUFJLENBQUNBLHNCQUFzQkMsUUFBUUMsR0FBRyxDQUFDQyxNQUFNLE1BQU0sUUFBUUgsd0JBQXdCLEtBQUssSUFBSUEsc0JBQXNCQyxRQUFRQyxHQUFHLENBQUNFLGVBQWUsRUFBRSxPQUFPLENBQUMsRUFBRUwsYUFBYSxTQUFTLFNBQVMsUUFBUSxHQUFHLEVBQUVELGNBQWMsQ0FBQztJQUNwTixPQUFPRyxRQUFRQyxHQUFHLENBQUNHLFlBQVk7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWF1dGgtcmVnaXN0ZXIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanM/MDUyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGV0ZWN0T3JpZ2luID0gZGV0ZWN0T3JpZ2luO1xuXG5mdW5jdGlvbiBkZXRlY3RPcmlnaW4oZm9yd2FyZGVkSG9zdCwgcHJvdG9jb2wpIHtcbiAgdmFyIF9wcm9jZXNzJGVudiRWRVJDRUw7XG5cbiAgaWYgKChfcHJvY2VzcyRlbnYkVkVSQ0VMID0gcHJvY2Vzcy5lbnYuVkVSQ0VMKSAhPT0gbnVsbCAmJiBfcHJvY2VzcyRlbnYkVkVSQ0VMICE9PSB2b2lkIDAgPyBfcHJvY2VzcyRlbnYkVkVSQ0VMIDogcHJvY2Vzcy5lbnYuQVVUSF9UUlVTVF9IT1NUKSByZXR1cm4gYCR7cHJvdG9jb2wgPT09IFwiaHR0cFwiID8gXCJodHRwXCIgOiBcImh0dHBzXCJ9Oi8vJHtmb3J3YXJkZWRIb3N0fWA7XG4gIHJldHVybiBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkw7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGV0ZWN0T3JpZ2luIiwiZm9yd2FyZGVkSG9zdCIsInByb3RvY29sIiwiX3Byb2Nlc3MkZW52JFZFUkNFTCIsInByb2Nlc3MiLCJlbnYiLCJWRVJDRUwiLCJBVVRIX1RSVVNUX0hPU1QiLCJORVhUQVVUSF9VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/detect-origin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(rsc)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction formatError(o) {\n    if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n        return {\n            message: o.message,\n            stack: o.stack,\n            name: o.name\n        };\n    }\n    if (hasErrorProperty(o)) {\n        var _o$message;\n        o.error = formatError(o.error);\n        o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n    }\n    return o;\n}\nfunction hasErrorProperty(x) {\n    return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n    error: function error(code, metadata) {\n        metadata = formatError(metadata);\n        console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n    },\n    warn: function warn(code) {\n        console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n    },\n    debug: function debug(code, metadata) {\n        console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n    }\n};\nfunction setLogger() {\n    var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var debug = arguments.length > 1 ? arguments[1] : undefined;\n    if (!debug) _logger.debug = function() {};\n    if (newLogger.error) _logger.error = newLogger.error;\n    if (newLogger.warn) _logger.warn = newLogger.warn;\n    if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = _logger;\nexports[\"default\"] = _default;\nfunction proxyLogger() {\n    var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n    var basePath = arguments.length > 1 ? arguments[1] : undefined;\n    try {\n        if (true) {\n            return logger;\n        }\n        var clientLogger = {};\n        var _loop = function _loop(level) {\n            clientLogger[level] = function(code, metadata) {\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                    metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                var url = \"\".concat(basePath, \"/_log\");\n                var body = new URLSearchParams(_objectSpread({\n                    level: level,\n                    code: code\n                }, metadata));\n                if (navigator.sendBeacon) {\n                    return navigator.sendBeacon(url, body);\n                }\n                return fetch(url, {\n                    method: \"POST\",\n                    body: body,\n                    keepalive: true\n                });\n            };\n        };\n        for(var level in logger){\n            _loop(level);\n        }\n        return clientLogger;\n    } catch (_unused) {\n        return _logger;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/merge.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/utils/merge.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.merge = merge;\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction merge(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for(const key in source){\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {\n                    [key]: {}\n                });\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL21lcmdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxhQUFhLEdBQUdFO0FBRWhCLFNBQVNDLFNBQVNDLElBQUk7SUFDcEIsT0FBT0EsUUFBUSxPQUFPQSxTQUFTLFlBQVksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDRjtBQUM1RDtBQUVBLFNBQVNGLE1BQU1LLE1BQU0sRUFBRSxHQUFHQyxPQUFPO0lBQy9CLElBQUksQ0FBQ0EsUUFBUUMsTUFBTSxFQUFFLE9BQU9GO0lBQzVCLE1BQU1HLFNBQVNGLFFBQVFHLEtBQUs7SUFFNUIsSUFBSVIsU0FBU0ksV0FBV0osU0FBU08sU0FBUztRQUN4QyxJQUFLLE1BQU1FLE9BQU9GLE9BQVE7WUFDeEIsSUFBSVAsU0FBU08sTUFBTSxDQUFDRSxJQUFJLEdBQUc7Z0JBQ3pCLElBQUksQ0FBQ0wsTUFBTSxDQUFDSyxJQUFJLEVBQUVkLE9BQU9lLE1BQU0sQ0FBQ04sUUFBUTtvQkFDdEMsQ0FBQ0ssSUFBSSxFQUFFLENBQUM7Z0JBQ1Y7Z0JBQ0FWLE1BQU1LLE1BQU0sQ0FBQ0ssSUFBSSxFQUFFRixNQUFNLENBQUNFLElBQUk7WUFDaEMsT0FBTztnQkFDTGQsT0FBT2UsTUFBTSxDQUFDTixRQUFRO29CQUNwQixDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtnQkFDcEI7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPVixNQUFNSyxXQUFXQztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvdXRpbHMvbWVyZ2UuanM/ZjNlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMubWVyZ2UgPSBtZXJnZTtcblxuZnVuY3Rpb24gaXNPYmplY3QoaXRlbSkge1xuICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gXCJvYmplY3RcIiAmJiAhQXJyYXkuaXNBcnJheShpdGVtKTtcbn1cblxuZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcblxuICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7XG4gICAgICAgICAgW2tleV06IHt9XG4gICAgICAgIH0pO1xuICAgICAgICBtZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHtcbiAgICAgICAgICBba2V5XTogc291cmNlW2tleV1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlKHRhcmdldCwgLi4uc291cmNlcyk7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibWVyZ2UiLCJpc09iamVjdCIsIml0ZW0iLCJBcnJheSIsImlzQXJyYXkiLCJ0YXJnZXQiLCJzb3VyY2VzIiwibGVuZ3RoIiwic291cmNlIiwic2hpZnQiLCJrZXkiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/merge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n    var _url2;\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: ()=>base\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsU0FBU0EsU0FBU0MsR0FBRztJQUNuQixJQUFJQztJQUVKLE1BQU1DLGFBQWEsSUFBSUMsSUFBSTtJQUUzQixJQUFJSCxPQUFPLENBQUNBLElBQUlJLFVBQVUsQ0FBQyxTQUFTO1FBQ2xDSixNQUFNLENBQUMsUUFBUSxFQUFFQSxJQUFJLENBQUM7SUFDeEI7SUFFQSxNQUFNSyxPQUFPLElBQUlGLElBQUksQ0FBQ0YsUUFBUUQsR0FBRSxNQUFPLFFBQVFDLFVBQVUsS0FBSyxJQUFJQSxRQUFRQztJQUUxRSxNQUFNSSxPQUFPLENBQUNELEtBQUtFLFFBQVEsS0FBSyxNQUFNTCxXQUFXSyxRQUFRLEdBQUdGLEtBQUtFLFFBQVEsRUFBRUMsT0FBTyxDQUFDLE9BQU87SUFDMUYsTUFBTUMsT0FBTyxDQUFDLEVBQUVKLEtBQUtLLE1BQU0sQ0FBQyxFQUFFSixLQUFLLENBQUM7SUFDcEMsT0FBTztRQUNMSSxRQUFRTCxLQUFLSyxNQUFNO1FBQ25CQyxNQUFNTixLQUFLTSxJQUFJO1FBQ2ZMO1FBQ0FHO1FBQ0FHLFVBQVUsSUFBTUg7SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXV0aC1yZWdpc3Rlci8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvdXRpbHMvcGFyc2UtdXJsLmpzP2MzMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwYXJzZVVybDtcblxuZnVuY3Rpb24gcGFyc2VVcmwodXJsKSB7XG4gIHZhciBfdXJsMjtcblxuICBjb25zdCBkZWZhdWx0VXJsID0gbmV3IFVSTChcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvYXV0aFwiKTtcblxuICBpZiAodXJsICYmICF1cmwuc3RhcnRzV2l0aChcImh0dHBcIikpIHtcbiAgICB1cmwgPSBgaHR0cHM6Ly8ke3VybH1gO1xuICB9XG5cbiAgY29uc3QgX3VybCA9IG5ldyBVUkwoKF91cmwyID0gdXJsKSAhPT0gbnVsbCAmJiBfdXJsMiAhPT0gdm9pZCAwID8gX3VybDIgOiBkZWZhdWx0VXJsKTtcblxuICBjb25zdCBwYXRoID0gKF91cmwucGF0aG5hbWUgPT09IFwiL1wiID8gZGVmYXVsdFVybC5wYXRobmFtZSA6IF91cmwucGF0aG5hbWUpLnJlcGxhY2UoL1xcLyQvLCBcIlwiKTtcbiAgY29uc3QgYmFzZSA9IGAke191cmwub3JpZ2lufSR7cGF0aH1gO1xuICByZXR1cm4ge1xuICAgIG9yaWdpbjogX3VybC5vcmlnaW4sXG4gICAgaG9zdDogX3VybC5ob3N0LFxuICAgIHBhdGgsXG4gICAgYmFzZSxcbiAgICB0b1N0cmluZzogKCkgPT4gYmFzZVxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJwYXJzZVVybCIsInVybCIsIl91cmwyIiwiZGVmYXVsdFVybCIsIlVSTCIsInN0YXJ0c1dpdGgiLCJfdXJsIiwicGF0aCIsInBhdGhuYW1lIiwicmVwbGFjZSIsImJhc2UiLCJvcmlnaW4iLCJob3N0IiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ })

};
;